// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gorm_pb_proto.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_gorm_5fpb_5fproto_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_gorm_5fpb_5fproto_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "gorm_pb_tables_inc.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_gorm_5fpb_5fproto_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_gorm_5fpb_5fproto_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[30]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_gorm_5fpb_5fproto_2eproto;
namespace gorm {
class GORM_PB_BATCH_GET_REQ;
class GORM_PB_BATCH_GET_REQDefaultTypeInternal;
extern GORM_PB_BATCH_GET_REQDefaultTypeInternal _GORM_PB_BATCH_GET_REQ_default_instance_;
class GORM_PB_BATCH_GET_RSP;
class GORM_PB_BATCH_GET_RSPDefaultTypeInternal;
extern GORM_PB_BATCH_GET_RSPDefaultTypeInternal _GORM_PB_BATCH_GET_RSP_default_instance_;
class GORM_PB_DELETE_REQ;
class GORM_PB_DELETE_REQDefaultTypeInternal;
extern GORM_PB_DELETE_REQDefaultTypeInternal _GORM_PB_DELETE_REQ_default_instance_;
class GORM_PB_DELETE_RSP;
class GORM_PB_DELETE_RSPDefaultTypeInternal;
extern GORM_PB_DELETE_RSPDefaultTypeInternal _GORM_PB_DELETE_RSP_default_instance_;
class GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ;
class GORM_PB_GET_BY_NON_PRIMARY_KEY_REQDefaultTypeInternal;
extern GORM_PB_GET_BY_NON_PRIMARY_KEY_REQDefaultTypeInternal _GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ_default_instance_;
class GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP;
class GORM_PB_GET_BY_NON_PRIMARY_KEY_RSPDefaultTypeInternal;
extern GORM_PB_GET_BY_NON_PRIMARY_KEY_RSPDefaultTypeInternal _GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP_default_instance_;
class GORM_PB_GET_BY_PARTKEY_REQ;
class GORM_PB_GET_BY_PARTKEY_REQDefaultTypeInternal;
extern GORM_PB_GET_BY_PARTKEY_REQDefaultTypeInternal _GORM_PB_GET_BY_PARTKEY_REQ_default_instance_;
class GORM_PB_GET_BY_PARTKEY_RSP;
class GORM_PB_GET_BY_PARTKEY_RSPDefaultTypeInternal;
extern GORM_PB_GET_BY_PARTKEY_RSPDefaultTypeInternal _GORM_PB_GET_BY_PARTKEY_RSP_default_instance_;
class GORM_PB_GET_REQ;
class GORM_PB_GET_REQDefaultTypeInternal;
extern GORM_PB_GET_REQDefaultTypeInternal _GORM_PB_GET_REQ_default_instance_;
class GORM_PB_GET_RSP;
class GORM_PB_GET_RSPDefaultTypeInternal;
extern GORM_PB_GET_RSPDefaultTypeInternal _GORM_PB_GET_RSP_default_instance_;
class GORM_PB_HAND_SHAKE_REQ;
class GORM_PB_HAND_SHAKE_REQDefaultTypeInternal;
extern GORM_PB_HAND_SHAKE_REQDefaultTypeInternal _GORM_PB_HAND_SHAKE_REQ_default_instance_;
class GORM_PB_HAND_SHAKE_RSP;
class GORM_PB_HAND_SHAKE_RSPDefaultTypeInternal;
extern GORM_PB_HAND_SHAKE_RSPDefaultTypeInternal _GORM_PB_HAND_SHAKE_RSP_default_instance_;
class GORM_PB_HEART_REQ;
class GORM_PB_HEART_REQDefaultTypeInternal;
extern GORM_PB_HEART_REQDefaultTypeInternal _GORM_PB_HEART_REQ_default_instance_;
class GORM_PB_HEART_RSP;
class GORM_PB_HEART_RSPDefaultTypeInternal;
extern GORM_PB_HEART_RSPDefaultTypeInternal _GORM_PB_HEART_RSP_default_instance_;
class GORM_PB_INCREASE_REQ;
class GORM_PB_INCREASE_REQDefaultTypeInternal;
extern GORM_PB_INCREASE_REQDefaultTypeInternal _GORM_PB_INCREASE_REQ_default_instance_;
class GORM_PB_INCREASE_RSP;
class GORM_PB_INCREASE_RSPDefaultTypeInternal;
extern GORM_PB_INCREASE_RSPDefaultTypeInternal _GORM_PB_INCREASE_RSP_default_instance_;
class GORM_PB_INSERT_REQ;
class GORM_PB_INSERT_REQDefaultTypeInternal;
extern GORM_PB_INSERT_REQDefaultTypeInternal _GORM_PB_INSERT_REQ_default_instance_;
class GORM_PB_INSERT_RSP;
class GORM_PB_INSERT_RSPDefaultTypeInternal;
extern GORM_PB_INSERT_RSPDefaultTypeInternal _GORM_PB_INSERT_RSP_default_instance_;
class GORM_PB_RELOAD_TABLE_REQ;
class GORM_PB_RELOAD_TABLE_REQDefaultTypeInternal;
extern GORM_PB_RELOAD_TABLE_REQDefaultTypeInternal _GORM_PB_RELOAD_TABLE_REQ_default_instance_;
class GORM_PB_RELOAD_TABLE_RSP;
class GORM_PB_RELOAD_TABLE_RSPDefaultTypeInternal;
extern GORM_PB_RELOAD_TABLE_RSPDefaultTypeInternal _GORM_PB_RELOAD_TABLE_RSP_default_instance_;
class GORM_PB_REPLACE_REQ;
class GORM_PB_REPLACE_REQDefaultTypeInternal;
extern GORM_PB_REPLACE_REQDefaultTypeInternal _GORM_PB_REPLACE_REQ_default_instance_;
class GORM_PB_REPLACE_RSP;
class GORM_PB_REPLACE_RSPDefaultTypeInternal;
extern GORM_PB_REPLACE_RSPDefaultTypeInternal _GORM_PB_REPLACE_RSP_default_instance_;
class GORM_PB_REQ_HEADER;
class GORM_PB_REQ_HEADERDefaultTypeInternal;
extern GORM_PB_REQ_HEADERDefaultTypeInternal _GORM_PB_REQ_HEADER_default_instance_;
class GORM_PB_Ret_Code;
class GORM_PB_Ret_CodeDefaultTypeInternal;
extern GORM_PB_Ret_CodeDefaultTypeInternal _GORM_PB_Ret_Code_default_instance_;
class GORM_PB_SPLIT_INFO;
class GORM_PB_SPLIT_INFODefaultTypeInternal;
extern GORM_PB_SPLIT_INFODefaultTypeInternal _GORM_PB_SPLIT_INFO_default_instance_;
class GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE;
class GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUEDefaultTypeInternal;
extern GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUEDefaultTypeInternal _GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE_default_instance_;
class GORM_PB_TABLE_SCHEMA_INFO;
class GORM_PB_TABLE_SCHEMA_INFODefaultTypeInternal;
extern GORM_PB_TABLE_SCHEMA_INFODefaultTypeInternal _GORM_PB_TABLE_SCHEMA_INFO_default_instance_;
class GORM_PB_TABLE_SCHEMA_INFO_COLUMN;
class GORM_PB_TABLE_SCHEMA_INFO_COLUMNDefaultTypeInternal;
extern GORM_PB_TABLE_SCHEMA_INFO_COLUMNDefaultTypeInternal _GORM_PB_TABLE_SCHEMA_INFO_COLUMN_default_instance_;
class GORM_PB_UPDATE_REQ;
class GORM_PB_UPDATE_REQDefaultTypeInternal;
extern GORM_PB_UPDATE_REQDefaultTypeInternal _GORM_PB_UPDATE_REQ_default_instance_;
class GORM_PB_UPDATE_RSP;
class GORM_PB_UPDATE_RSPDefaultTypeInternal;
extern GORM_PB_UPDATE_RSPDefaultTypeInternal _GORM_PB_UPDATE_RSP_default_instance_;
}  // namespace gorm
PROTOBUF_NAMESPACE_OPEN
template<> ::gorm::GORM_PB_BATCH_GET_REQ* Arena::CreateMaybeMessage<::gorm::GORM_PB_BATCH_GET_REQ>(Arena*);
template<> ::gorm::GORM_PB_BATCH_GET_RSP* Arena::CreateMaybeMessage<::gorm::GORM_PB_BATCH_GET_RSP>(Arena*);
template<> ::gorm::GORM_PB_DELETE_REQ* Arena::CreateMaybeMessage<::gorm::GORM_PB_DELETE_REQ>(Arena*);
template<> ::gorm::GORM_PB_DELETE_RSP* Arena::CreateMaybeMessage<::gorm::GORM_PB_DELETE_RSP>(Arena*);
template<> ::gorm::GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ* Arena::CreateMaybeMessage<::gorm::GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ>(Arena*);
template<> ::gorm::GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP* Arena::CreateMaybeMessage<::gorm::GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP>(Arena*);
template<> ::gorm::GORM_PB_GET_BY_PARTKEY_REQ* Arena::CreateMaybeMessage<::gorm::GORM_PB_GET_BY_PARTKEY_REQ>(Arena*);
template<> ::gorm::GORM_PB_GET_BY_PARTKEY_RSP* Arena::CreateMaybeMessage<::gorm::GORM_PB_GET_BY_PARTKEY_RSP>(Arena*);
template<> ::gorm::GORM_PB_GET_REQ* Arena::CreateMaybeMessage<::gorm::GORM_PB_GET_REQ>(Arena*);
template<> ::gorm::GORM_PB_GET_RSP* Arena::CreateMaybeMessage<::gorm::GORM_PB_GET_RSP>(Arena*);
template<> ::gorm::GORM_PB_HAND_SHAKE_REQ* Arena::CreateMaybeMessage<::gorm::GORM_PB_HAND_SHAKE_REQ>(Arena*);
template<> ::gorm::GORM_PB_HAND_SHAKE_RSP* Arena::CreateMaybeMessage<::gorm::GORM_PB_HAND_SHAKE_RSP>(Arena*);
template<> ::gorm::GORM_PB_HEART_REQ* Arena::CreateMaybeMessage<::gorm::GORM_PB_HEART_REQ>(Arena*);
template<> ::gorm::GORM_PB_HEART_RSP* Arena::CreateMaybeMessage<::gorm::GORM_PB_HEART_RSP>(Arena*);
template<> ::gorm::GORM_PB_INCREASE_REQ* Arena::CreateMaybeMessage<::gorm::GORM_PB_INCREASE_REQ>(Arena*);
template<> ::gorm::GORM_PB_INCREASE_RSP* Arena::CreateMaybeMessage<::gorm::GORM_PB_INCREASE_RSP>(Arena*);
template<> ::gorm::GORM_PB_INSERT_REQ* Arena::CreateMaybeMessage<::gorm::GORM_PB_INSERT_REQ>(Arena*);
template<> ::gorm::GORM_PB_INSERT_RSP* Arena::CreateMaybeMessage<::gorm::GORM_PB_INSERT_RSP>(Arena*);
template<> ::gorm::GORM_PB_RELOAD_TABLE_REQ* Arena::CreateMaybeMessage<::gorm::GORM_PB_RELOAD_TABLE_REQ>(Arena*);
template<> ::gorm::GORM_PB_RELOAD_TABLE_RSP* Arena::CreateMaybeMessage<::gorm::GORM_PB_RELOAD_TABLE_RSP>(Arena*);
template<> ::gorm::GORM_PB_REPLACE_REQ* Arena::CreateMaybeMessage<::gorm::GORM_PB_REPLACE_REQ>(Arena*);
template<> ::gorm::GORM_PB_REPLACE_RSP* Arena::CreateMaybeMessage<::gorm::GORM_PB_REPLACE_RSP>(Arena*);
template<> ::gorm::GORM_PB_REQ_HEADER* Arena::CreateMaybeMessage<::gorm::GORM_PB_REQ_HEADER>(Arena*);
template<> ::gorm::GORM_PB_Ret_Code* Arena::CreateMaybeMessage<::gorm::GORM_PB_Ret_Code>(Arena*);
template<> ::gorm::GORM_PB_SPLIT_INFO* Arena::CreateMaybeMessage<::gorm::GORM_PB_SPLIT_INFO>(Arena*);
template<> ::gorm::GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE* Arena::CreateMaybeMessage<::gorm::GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE>(Arena*);
template<> ::gorm::GORM_PB_TABLE_SCHEMA_INFO* Arena::CreateMaybeMessage<::gorm::GORM_PB_TABLE_SCHEMA_INFO>(Arena*);
template<> ::gorm::GORM_PB_TABLE_SCHEMA_INFO_COLUMN* Arena::CreateMaybeMessage<::gorm::GORM_PB_TABLE_SCHEMA_INFO_COLUMN>(Arena*);
template<> ::gorm::GORM_PB_UPDATE_REQ* Arena::CreateMaybeMessage<::gorm::GORM_PB_UPDATE_REQ>(Arena*);
template<> ::gorm::GORM_PB_UPDATE_RSP* Arena::CreateMaybeMessage<::gorm::GORM_PB_UPDATE_RSP>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace gorm {

enum GORM_CODE : int {
  GORM_CODE_OK = 0,
  GORM_CODE_ERROR = -1,
  GORM_CODE_EAGAIN = -2,
  GORM_CODE_INVALID_CLIENT = -3,
  GORM_CODE_PART_FAILED = -4,
  GORM_CODE_INVALID_TABLE = -5,
  GORM_CODE_RESET = -6,
  GORM_CODE_TOO_MUCH_RECORD = -7,
  GORM_CODE_INIT_RECORD = -8,
  GORM_CODE_INVALID_FIELD = -9,
  GORM_CODE_PACK_REQ_ERROR = -10,
  GORM_CODE_REQ_NO_RECORDS = -11,
  GORM_CODE_MULTI_TABLES = -12,
  GORM_CODE_RSP_UNPACK_FAILED = -13,
  GORM_CODE_CONN_CLOSED = -14,
  GORM_CODE_CONN_FAILED = -15,
  GORM_CODE_DB_ERROR = -16,
  GORM_CODE_NO_DB = -17,
  GORM_CODE_REQ_MSG_ERROR = -18,
  GORM_CODE_NOT_SUPPORT_CMD = -19,
  GORM_CODE_UNPACK_REQ = -20,
  GORM_CODE_PACK_RSP_ERROR = -21,
  GORM_CODE_REQ_MSG_NO_HEADER = -22,
  GORM_CODE_REQ_NEED_SPLIT = -23,
  GORM_CODE_REQ_TOO_LARGE = -24,
  GORM_CODE_DB_2_STRUCT_ERROR = -25,
  GORM_CODE_NO_MORE_RECORD = -26,
  GORM_CODE_VERSION_NOT_SET = -27,
  GORM_CODE_CACHE_ERROR = -28,
  GORM_CODE_NO_VALUE = -29,
  GORM_CODE_INVALID_VALUE_TYPE = -30,
  GORM_CODE_NEED_HAND_SHAKE = -31,
  GORM_CODE_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  GORM_CODE_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool GORM_CODE_IsValid(int value);
constexpr GORM_CODE GORM_CODE_MIN = GORM_CODE_NEED_HAND_SHAKE;
constexpr GORM_CODE GORM_CODE_MAX = GORM_CODE_OK;
constexpr int GORM_CODE_ARRAYSIZE = GORM_CODE_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GORM_CODE_descriptor();
template<typename T>
inline const std::string& GORM_CODE_Name(T enum_t_value) {
  static_assert(::std::is_same<T, GORM_CODE>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function GORM_CODE_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    GORM_CODE_descriptor(), enum_t_value);
}
inline bool GORM_CODE_Parse(
    const std::string& name, GORM_CODE* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<GORM_CODE>(
    GORM_CODE_descriptor(), name, value);
}
enum GORM_CMD : int {
  GORM_CMD_INVALID = 0,
  GORM_CMD_HEART = 1,
  GORM_CMD_HAND_SHAKE = 2,
  GORM_CMD_INSERT = 3,
  GORM_CMD_REPLACE = 4,
  GORM_CMD_INCREASE = 5,
  GORM_CMD_GET = 6,
  GORM_CMD_DELETE = 7,
  GORM_CMD_BATCH_GET = 8,
  GORM_CMD_GET_BY_PARTKEY = 9,
  GORM_CMD_UPDATE = 10,
  GORM_CMD_GET_BY_NON_PRIMARY_KEY = 11,
  GORM_CMD_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  GORM_CMD_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool GORM_CMD_IsValid(int value);
constexpr GORM_CMD GORM_CMD_MIN = GORM_CMD_INVALID;
constexpr GORM_CMD GORM_CMD_MAX = GORM_CMD_GET_BY_NON_PRIMARY_KEY;
constexpr int GORM_CMD_ARRAYSIZE = GORM_CMD_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GORM_CMD_descriptor();
template<typename T>
inline const std::string& GORM_CMD_Name(T enum_t_value) {
  static_assert(::std::is_same<T, GORM_CMD>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function GORM_CMD_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    GORM_CMD_descriptor(), enum_t_value);
}
inline bool GORM_CMD_Parse(
    const std::string& name, GORM_CMD* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<GORM_CMD>(
    GORM_CMD_descriptor(), name, value);
}
// ===================================================================

class GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:gorm.GORM_PB_SPLIT_INFO.GORM_COLUMN_VALUE) */ {
 public:
  inline GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE() : GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE(nullptr) {};
  virtual ~GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE();

  GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE(const GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE& from);
  GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE(GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE&& from) noexcept
    : GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE() {
    *this = ::std::move(from);
  }

  inline GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE& operator=(const GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE& from) {
    CopyFrom(from);
    return *this;
  }
  inline GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE& operator=(GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE* internal_default_instance() {
    return reinterpret_cast<const GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE*>(
               &_GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE& a, GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE& b) {
    a.Swap(&b);
  }
  inline void Swap(GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE* New() const final {
    return CreateMaybeMessage<GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE>(nullptr);
  }

  GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE& from);
  void MergeFrom(const GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "gorm.GORM_PB_SPLIT_INFO.GORM_COLUMN_VALUE";
  }
  protected:
  explicit GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gorm_5fpb_5fproto_2eproto);
    return ::descriptor_table_gorm_5fpb_5fproto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValueFieldNumber = 2,
    kColumnFieldNumber = 1,
  };
  // bytes Value = 2;
  void clear_value();
  const std::string& value() const;
  void set_value(const std::string& value);
  void set_value(std::string&& value);
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  std::string* mutable_value();
  std::string* release_value();
  void set_allocated_value(std::string* value);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_value();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_value(
      std::string* value);
  private:
  const std::string& _internal_value() const;
  void _internal_set_value(const std::string& value);
  std::string* _internal_mutable_value();
  public:

  // sfixed32 Column = 1;
  void clear_column();
  ::PROTOBUF_NAMESPACE_ID::int32 column() const;
  void set_column(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_column() const;
  void _internal_set_column(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:gorm.GORM_PB_SPLIT_INFO.GORM_COLUMN_VALUE)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_;
  ::PROTOBUF_NAMESPACE_ID::int32 column_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gorm_5fpb_5fproto_2eproto;
};
// -------------------------------------------------------------------

class GORM_PB_SPLIT_INFO PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:gorm.GORM_PB_SPLIT_INFO) */ {
 public:
  inline GORM_PB_SPLIT_INFO() : GORM_PB_SPLIT_INFO(nullptr) {};
  virtual ~GORM_PB_SPLIT_INFO();

  GORM_PB_SPLIT_INFO(const GORM_PB_SPLIT_INFO& from);
  GORM_PB_SPLIT_INFO(GORM_PB_SPLIT_INFO&& from) noexcept
    : GORM_PB_SPLIT_INFO() {
    *this = ::std::move(from);
  }

  inline GORM_PB_SPLIT_INFO& operator=(const GORM_PB_SPLIT_INFO& from) {
    CopyFrom(from);
    return *this;
  }
  inline GORM_PB_SPLIT_INFO& operator=(GORM_PB_SPLIT_INFO&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GORM_PB_SPLIT_INFO& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GORM_PB_SPLIT_INFO* internal_default_instance() {
    return reinterpret_cast<const GORM_PB_SPLIT_INFO*>(
               &_GORM_PB_SPLIT_INFO_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(GORM_PB_SPLIT_INFO& a, GORM_PB_SPLIT_INFO& b) {
    a.Swap(&b);
  }
  inline void Swap(GORM_PB_SPLIT_INFO* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GORM_PB_SPLIT_INFO* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GORM_PB_SPLIT_INFO* New() const final {
    return CreateMaybeMessage<GORM_PB_SPLIT_INFO>(nullptr);
  }

  GORM_PB_SPLIT_INFO* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GORM_PB_SPLIT_INFO>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GORM_PB_SPLIT_INFO& from);
  void MergeFrom(const GORM_PB_SPLIT_INFO& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GORM_PB_SPLIT_INFO* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "gorm.GORM_PB_SPLIT_INFO";
  }
  protected:
  explicit GORM_PB_SPLIT_INFO(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gorm_5fpb_5fproto_2eproto);
    return ::descriptor_table_gorm_5fpb_5fproto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE GORM_COLUMN_VALUE;

  // accessors -------------------------------------------------------

  enum : int {
    kSplitInfoFieldNumber = 1,
  };
  // repeated .gorm.GORM_PB_SPLIT_INFO.GORM_COLUMN_VALUE SplitInfo = 1;
  int splitinfo_size() const;
  private:
  int _internal_splitinfo_size() const;
  public:
  void clear_splitinfo();
  ::gorm::GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE* mutable_splitinfo(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE >*
      mutable_splitinfo();
  private:
  const ::gorm::GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE& _internal_splitinfo(int index) const;
  ::gorm::GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE* _internal_add_splitinfo();
  public:
  const ::gorm::GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE& splitinfo(int index) const;
  ::gorm::GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE* add_splitinfo();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE >&
      splitinfo() const;

  // @@protoc_insertion_point(class_scope:gorm.GORM_PB_SPLIT_INFO)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE > splitinfo_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gorm_5fpb_5fproto_2eproto;
};
// -------------------------------------------------------------------

class GORM_PB_Ret_Code PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:gorm.GORM_PB_Ret_Code) */ {
 public:
  inline GORM_PB_Ret_Code() : GORM_PB_Ret_Code(nullptr) {};
  virtual ~GORM_PB_Ret_Code();

  GORM_PB_Ret_Code(const GORM_PB_Ret_Code& from);
  GORM_PB_Ret_Code(GORM_PB_Ret_Code&& from) noexcept
    : GORM_PB_Ret_Code() {
    *this = ::std::move(from);
  }

  inline GORM_PB_Ret_Code& operator=(const GORM_PB_Ret_Code& from) {
    CopyFrom(from);
    return *this;
  }
  inline GORM_PB_Ret_Code& operator=(GORM_PB_Ret_Code&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GORM_PB_Ret_Code& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GORM_PB_Ret_Code* internal_default_instance() {
    return reinterpret_cast<const GORM_PB_Ret_Code*>(
               &_GORM_PB_Ret_Code_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(GORM_PB_Ret_Code& a, GORM_PB_Ret_Code& b) {
    a.Swap(&b);
  }
  inline void Swap(GORM_PB_Ret_Code* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GORM_PB_Ret_Code* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GORM_PB_Ret_Code* New() const final {
    return CreateMaybeMessage<GORM_PB_Ret_Code>(nullptr);
  }

  GORM_PB_Ret_Code* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GORM_PB_Ret_Code>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GORM_PB_Ret_Code& from);
  void MergeFrom(const GORM_PB_Ret_Code& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GORM_PB_Ret_Code* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "gorm.GORM_PB_Ret_Code";
  }
  protected:
  explicit GORM_PB_Ret_Code(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gorm_5fpb_5fproto_2eproto);
    return ::descriptor_table_gorm_5fpb_5fproto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDBErrInfoFieldNumber = 3,
    kCodeFieldNumber = 1,
    kDBCodeFieldNumber = 2,
    kSucessNumFieldNumber = 4,
    kTotalNumFieldNumber = 5,
  };
  // string DBErrInfo = 3;
  void clear_dberrinfo();
  const std::string& dberrinfo() const;
  void set_dberrinfo(const std::string& value);
  void set_dberrinfo(std::string&& value);
  void set_dberrinfo(const char* value);
  void set_dberrinfo(const char* value, size_t size);
  std::string* mutable_dberrinfo();
  std::string* release_dberrinfo();
  void set_allocated_dberrinfo(std::string* dberrinfo);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_dberrinfo();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_dberrinfo(
      std::string* dberrinfo);
  private:
  const std::string& _internal_dberrinfo() const;
  void _internal_set_dberrinfo(const std::string& value);
  std::string* _internal_mutable_dberrinfo();
  public:

  // sfixed32 Code = 1;
  void clear_code();
  ::PROTOBUF_NAMESPACE_ID::int32 code() const;
  void set_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_code() const;
  void _internal_set_code(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // sfixed32 DBCode = 2;
  void clear_dbcode();
  ::PROTOBUF_NAMESPACE_ID::int32 dbcode() const;
  void set_dbcode(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_dbcode() const;
  void _internal_set_dbcode(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // sfixed32 SucessNum = 4;
  void clear_sucessnum();
  ::PROTOBUF_NAMESPACE_ID::int32 sucessnum() const;
  void set_sucessnum(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_sucessnum() const;
  void _internal_set_sucessnum(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // sfixed32 TotalNum = 5;
  void clear_totalnum();
  ::PROTOBUF_NAMESPACE_ID::int32 totalnum() const;
  void set_totalnum(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_totalnum() const;
  void _internal_set_totalnum(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:gorm.GORM_PB_Ret_Code)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr dberrinfo_;
  ::PROTOBUF_NAMESPACE_ID::int32 code_;
  ::PROTOBUF_NAMESPACE_ID::int32 dbcode_;
  ::PROTOBUF_NAMESPACE_ID::int32 sucessnum_;
  ::PROTOBUF_NAMESPACE_ID::int32 totalnum_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gorm_5fpb_5fproto_2eproto;
};
// -------------------------------------------------------------------

class GORM_PB_RELOAD_TABLE_REQ PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:gorm.GORM_PB_RELOAD_TABLE_REQ) */ {
 public:
  inline GORM_PB_RELOAD_TABLE_REQ() : GORM_PB_RELOAD_TABLE_REQ(nullptr) {};
  virtual ~GORM_PB_RELOAD_TABLE_REQ();

  GORM_PB_RELOAD_TABLE_REQ(const GORM_PB_RELOAD_TABLE_REQ& from);
  GORM_PB_RELOAD_TABLE_REQ(GORM_PB_RELOAD_TABLE_REQ&& from) noexcept
    : GORM_PB_RELOAD_TABLE_REQ() {
    *this = ::std::move(from);
  }

  inline GORM_PB_RELOAD_TABLE_REQ& operator=(const GORM_PB_RELOAD_TABLE_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline GORM_PB_RELOAD_TABLE_REQ& operator=(GORM_PB_RELOAD_TABLE_REQ&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GORM_PB_RELOAD_TABLE_REQ& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GORM_PB_RELOAD_TABLE_REQ* internal_default_instance() {
    return reinterpret_cast<const GORM_PB_RELOAD_TABLE_REQ*>(
               &_GORM_PB_RELOAD_TABLE_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(GORM_PB_RELOAD_TABLE_REQ& a, GORM_PB_RELOAD_TABLE_REQ& b) {
    a.Swap(&b);
  }
  inline void Swap(GORM_PB_RELOAD_TABLE_REQ* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GORM_PB_RELOAD_TABLE_REQ* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GORM_PB_RELOAD_TABLE_REQ* New() const final {
    return CreateMaybeMessage<GORM_PB_RELOAD_TABLE_REQ>(nullptr);
  }

  GORM_PB_RELOAD_TABLE_REQ* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GORM_PB_RELOAD_TABLE_REQ>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GORM_PB_RELOAD_TABLE_REQ& from);
  void MergeFrom(const GORM_PB_RELOAD_TABLE_REQ& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GORM_PB_RELOAD_TABLE_REQ* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "gorm.GORM_PB_RELOAD_TABLE_REQ";
  }
  protected:
  explicit GORM_PB_RELOAD_TABLE_REQ(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gorm_5fpb_5fproto_2eproto);
    return ::descriptor_table_gorm_5fpb_5fproto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHeaderFieldNumber = 1,
    kTableVersionFieldNumber = 2,
  };
  // .gorm.GORM_PB_REQ_HEADER Header = 1;
  bool has_header() const;
  private:
  bool _internal_has_header() const;
  public:
  void clear_header();
  const ::gorm::GORM_PB_REQ_HEADER& header() const;
  ::gorm::GORM_PB_REQ_HEADER* release_header();
  ::gorm::GORM_PB_REQ_HEADER* mutable_header();
  void set_allocated_header(::gorm::GORM_PB_REQ_HEADER* header);
  private:
  const ::gorm::GORM_PB_REQ_HEADER& _internal_header() const;
  ::gorm::GORM_PB_REQ_HEADER* _internal_mutable_header();
  public:
  void unsafe_arena_set_allocated_header(
      ::gorm::GORM_PB_REQ_HEADER* header);
  ::gorm::GORM_PB_REQ_HEADER* unsafe_arena_release_header();

  // fixed64 TableVersion = 2;
  void clear_tableversion();
  ::PROTOBUF_NAMESPACE_ID::uint64 tableversion() const;
  void set_tableversion(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_tableversion() const;
  void _internal_set_tableversion(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:gorm.GORM_PB_RELOAD_TABLE_REQ)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::gorm::GORM_PB_REQ_HEADER* header_;
  ::PROTOBUF_NAMESPACE_ID::uint64 tableversion_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gorm_5fpb_5fproto_2eproto;
};
// -------------------------------------------------------------------

class GORM_PB_RELOAD_TABLE_RSP PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:gorm.GORM_PB_RELOAD_TABLE_RSP) */ {
 public:
  inline GORM_PB_RELOAD_TABLE_RSP() : GORM_PB_RELOAD_TABLE_RSP(nullptr) {};
  virtual ~GORM_PB_RELOAD_TABLE_RSP();

  GORM_PB_RELOAD_TABLE_RSP(const GORM_PB_RELOAD_TABLE_RSP& from);
  GORM_PB_RELOAD_TABLE_RSP(GORM_PB_RELOAD_TABLE_RSP&& from) noexcept
    : GORM_PB_RELOAD_TABLE_RSP() {
    *this = ::std::move(from);
  }

  inline GORM_PB_RELOAD_TABLE_RSP& operator=(const GORM_PB_RELOAD_TABLE_RSP& from) {
    CopyFrom(from);
    return *this;
  }
  inline GORM_PB_RELOAD_TABLE_RSP& operator=(GORM_PB_RELOAD_TABLE_RSP&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GORM_PB_RELOAD_TABLE_RSP& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GORM_PB_RELOAD_TABLE_RSP* internal_default_instance() {
    return reinterpret_cast<const GORM_PB_RELOAD_TABLE_RSP*>(
               &_GORM_PB_RELOAD_TABLE_RSP_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(GORM_PB_RELOAD_TABLE_RSP& a, GORM_PB_RELOAD_TABLE_RSP& b) {
    a.Swap(&b);
  }
  inline void Swap(GORM_PB_RELOAD_TABLE_RSP* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GORM_PB_RELOAD_TABLE_RSP* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GORM_PB_RELOAD_TABLE_RSP* New() const final {
    return CreateMaybeMessage<GORM_PB_RELOAD_TABLE_RSP>(nullptr);
  }

  GORM_PB_RELOAD_TABLE_RSP* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GORM_PB_RELOAD_TABLE_RSP>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GORM_PB_RELOAD_TABLE_RSP& from);
  void MergeFrom(const GORM_PB_RELOAD_TABLE_RSP& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GORM_PB_RELOAD_TABLE_RSP* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "gorm.GORM_PB_RELOAD_TABLE_RSP";
  }
  protected:
  explicit GORM_PB_RELOAD_TABLE_RSP(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gorm_5fpb_5fproto_2eproto);
    return ::descriptor_table_gorm_5fpb_5fproto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetCodeFieldNumber = 1,
  };
  // .gorm.GORM_PB_Ret_Code RetCode = 1;
  bool has_retcode() const;
  private:
  bool _internal_has_retcode() const;
  public:
  void clear_retcode();
  const ::gorm::GORM_PB_Ret_Code& retcode() const;
  ::gorm::GORM_PB_Ret_Code* release_retcode();
  ::gorm::GORM_PB_Ret_Code* mutable_retcode();
  void set_allocated_retcode(::gorm::GORM_PB_Ret_Code* retcode);
  private:
  const ::gorm::GORM_PB_Ret_Code& _internal_retcode() const;
  ::gorm::GORM_PB_Ret_Code* _internal_mutable_retcode();
  public:
  void unsafe_arena_set_allocated_retcode(
      ::gorm::GORM_PB_Ret_Code* retcode);
  ::gorm::GORM_PB_Ret_Code* unsafe_arena_release_retcode();

  // @@protoc_insertion_point(class_scope:gorm.GORM_PB_RELOAD_TABLE_RSP)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::gorm::GORM_PB_Ret_Code* retcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gorm_5fpb_5fproto_2eproto;
};
// -------------------------------------------------------------------

class GORM_PB_REQ_HEADER PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:gorm.GORM_PB_REQ_HEADER) */ {
 public:
  inline GORM_PB_REQ_HEADER() : GORM_PB_REQ_HEADER(nullptr) {};
  virtual ~GORM_PB_REQ_HEADER();

  GORM_PB_REQ_HEADER(const GORM_PB_REQ_HEADER& from);
  GORM_PB_REQ_HEADER(GORM_PB_REQ_HEADER&& from) noexcept
    : GORM_PB_REQ_HEADER() {
    *this = ::std::move(from);
  }

  inline GORM_PB_REQ_HEADER& operator=(const GORM_PB_REQ_HEADER& from) {
    CopyFrom(from);
    return *this;
  }
  inline GORM_PB_REQ_HEADER& operator=(GORM_PB_REQ_HEADER&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GORM_PB_REQ_HEADER& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GORM_PB_REQ_HEADER* internal_default_instance() {
    return reinterpret_cast<const GORM_PB_REQ_HEADER*>(
               &_GORM_PB_REQ_HEADER_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(GORM_PB_REQ_HEADER& a, GORM_PB_REQ_HEADER& b) {
    a.Swap(&b);
  }
  inline void Swap(GORM_PB_REQ_HEADER* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GORM_PB_REQ_HEADER* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GORM_PB_REQ_HEADER* New() const final {
    return CreateMaybeMessage<GORM_PB_REQ_HEADER>(nullptr);
  }

  GORM_PB_REQ_HEADER* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GORM_PB_REQ_HEADER>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GORM_PB_REQ_HEADER& from);
  void MergeFrom(const GORM_PB_REQ_HEADER& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GORM_PB_REQ_HEADER* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "gorm.GORM_PB_REQ_HEADER";
  }
  protected:
  explicit GORM_PB_REQ_HEADER(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gorm_5fpb_5fproto_2eproto);
    return ::descriptor_table_gorm_5fpb_5fproto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFieldModeFieldNumber = 5,
    kSplitTableInfoFieldNumber = 6,
    kTableIdFieldNumber = 1,
    kBusinessIDFieldNumber = 2,
    kVerPoliceFieldNumber = 3,
    kReqFlagFieldNumber = 4,
    kLimitFieldNumber = 7,
    kRefTableIndexFieldNumber = 8,
  };
  // bytes FieldMode = 5;
  void clear_fieldmode();
  const std::string& fieldmode() const;
  void set_fieldmode(const std::string& value);
  void set_fieldmode(std::string&& value);
  void set_fieldmode(const char* value);
  void set_fieldmode(const void* value, size_t size);
  std::string* mutable_fieldmode();
  std::string* release_fieldmode();
  void set_allocated_fieldmode(std::string* fieldmode);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_fieldmode();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_fieldmode(
      std::string* fieldmode);
  private:
  const std::string& _internal_fieldmode() const;
  void _internal_set_fieldmode(const std::string& value);
  std::string* _internal_mutable_fieldmode();
  public:

  // .gorm.GORM_PB_SPLIT_INFO SplitTableInfo = 6;
  bool has_splittableinfo() const;
  private:
  bool _internal_has_splittableinfo() const;
  public:
  void clear_splittableinfo();
  const ::gorm::GORM_PB_SPLIT_INFO& splittableinfo() const;
  ::gorm::GORM_PB_SPLIT_INFO* release_splittableinfo();
  ::gorm::GORM_PB_SPLIT_INFO* mutable_splittableinfo();
  void set_allocated_splittableinfo(::gorm::GORM_PB_SPLIT_INFO* splittableinfo);
  private:
  const ::gorm::GORM_PB_SPLIT_INFO& _internal_splittableinfo() const;
  ::gorm::GORM_PB_SPLIT_INFO* _internal_mutable_splittableinfo();
  public:
  void unsafe_arena_set_allocated_splittableinfo(
      ::gorm::GORM_PB_SPLIT_INFO* splittableinfo);
  ::gorm::GORM_PB_SPLIT_INFO* unsafe_arena_release_splittableinfo();

  // sfixed32 TableId = 1;
  void clear_tableid();
  ::PROTOBUF_NAMESPACE_ID::int32 tableid() const;
  void set_tableid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_tableid() const;
  void _internal_set_tableid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // sfixed32 BusinessID = 2;
  void clear_businessid();
  ::PROTOBUF_NAMESPACE_ID::int32 businessid() const;
  void set_businessid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_businessid() const;
  void _internal_set_businessid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // sfixed32 VerPolice = 3;
  void clear_verpolice();
  ::PROTOBUF_NAMESPACE_ID::int32 verpolice() const;
  void set_verpolice(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_verpolice() const;
  void _internal_set_verpolice(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // fixed32 ReqFlag = 4;
  void clear_reqflag();
  ::PROTOBUF_NAMESPACE_ID::uint32 reqflag() const;
  void set_reqflag(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_reqflag() const;
  void _internal_set_reqflag(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // sfixed32 Limit = 7;
  void clear_limit();
  ::PROTOBUF_NAMESPACE_ID::int32 limit() const;
  void set_limit(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_limit() const;
  void _internal_set_limit(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // sfixed32 RefTableIndex = 8;
  void clear_reftableindex();
  ::PROTOBUF_NAMESPACE_ID::int32 reftableindex() const;
  void set_reftableindex(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_reftableindex() const;
  void _internal_set_reftableindex(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:gorm.GORM_PB_REQ_HEADER)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr fieldmode_;
  ::gorm::GORM_PB_SPLIT_INFO* splittableinfo_;
  ::PROTOBUF_NAMESPACE_ID::int32 tableid_;
  ::PROTOBUF_NAMESPACE_ID::int32 businessid_;
  ::PROTOBUF_NAMESPACE_ID::int32 verpolice_;
  ::PROTOBUF_NAMESPACE_ID::uint32 reqflag_;
  ::PROTOBUF_NAMESPACE_ID::int32 limit_;
  ::PROTOBUF_NAMESPACE_ID::int32 reftableindex_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gorm_5fpb_5fproto_2eproto;
};
// -------------------------------------------------------------------

class GORM_PB_HEART_REQ PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:gorm.GORM_PB_HEART_REQ) */ {
 public:
  inline GORM_PB_HEART_REQ() : GORM_PB_HEART_REQ(nullptr) {};
  virtual ~GORM_PB_HEART_REQ();

  GORM_PB_HEART_REQ(const GORM_PB_HEART_REQ& from);
  GORM_PB_HEART_REQ(GORM_PB_HEART_REQ&& from) noexcept
    : GORM_PB_HEART_REQ() {
    *this = ::std::move(from);
  }

  inline GORM_PB_HEART_REQ& operator=(const GORM_PB_HEART_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline GORM_PB_HEART_REQ& operator=(GORM_PB_HEART_REQ&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GORM_PB_HEART_REQ& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GORM_PB_HEART_REQ* internal_default_instance() {
    return reinterpret_cast<const GORM_PB_HEART_REQ*>(
               &_GORM_PB_HEART_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(GORM_PB_HEART_REQ& a, GORM_PB_HEART_REQ& b) {
    a.Swap(&b);
  }
  inline void Swap(GORM_PB_HEART_REQ* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GORM_PB_HEART_REQ* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GORM_PB_HEART_REQ* New() const final {
    return CreateMaybeMessage<GORM_PB_HEART_REQ>(nullptr);
  }

  GORM_PB_HEART_REQ* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GORM_PB_HEART_REQ>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GORM_PB_HEART_REQ& from);
  void MergeFrom(const GORM_PB_HEART_REQ& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GORM_PB_HEART_REQ* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "gorm.GORM_PB_HEART_REQ";
  }
  protected:
  explicit GORM_PB_HEART_REQ(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gorm_5fpb_5fproto_2eproto);
    return ::descriptor_table_gorm_5fpb_5fproto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHeaderFieldNumber = 1,
  };
  // .gorm.GORM_PB_REQ_HEADER Header = 1;
  bool has_header() const;
  private:
  bool _internal_has_header() const;
  public:
  void clear_header();
  const ::gorm::GORM_PB_REQ_HEADER& header() const;
  ::gorm::GORM_PB_REQ_HEADER* release_header();
  ::gorm::GORM_PB_REQ_HEADER* mutable_header();
  void set_allocated_header(::gorm::GORM_PB_REQ_HEADER* header);
  private:
  const ::gorm::GORM_PB_REQ_HEADER& _internal_header() const;
  ::gorm::GORM_PB_REQ_HEADER* _internal_mutable_header();
  public:
  void unsafe_arena_set_allocated_header(
      ::gorm::GORM_PB_REQ_HEADER* header);
  ::gorm::GORM_PB_REQ_HEADER* unsafe_arena_release_header();

  // @@protoc_insertion_point(class_scope:gorm.GORM_PB_HEART_REQ)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::gorm::GORM_PB_REQ_HEADER* header_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gorm_5fpb_5fproto_2eproto;
};
// -------------------------------------------------------------------

class GORM_PB_HEART_RSP PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:gorm.GORM_PB_HEART_RSP) */ {
 public:
  inline GORM_PB_HEART_RSP() : GORM_PB_HEART_RSP(nullptr) {};
  virtual ~GORM_PB_HEART_RSP();

  GORM_PB_HEART_RSP(const GORM_PB_HEART_RSP& from);
  GORM_PB_HEART_RSP(GORM_PB_HEART_RSP&& from) noexcept
    : GORM_PB_HEART_RSP() {
    *this = ::std::move(from);
  }

  inline GORM_PB_HEART_RSP& operator=(const GORM_PB_HEART_RSP& from) {
    CopyFrom(from);
    return *this;
  }
  inline GORM_PB_HEART_RSP& operator=(GORM_PB_HEART_RSP&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GORM_PB_HEART_RSP& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GORM_PB_HEART_RSP* internal_default_instance() {
    return reinterpret_cast<const GORM_PB_HEART_RSP*>(
               &_GORM_PB_HEART_RSP_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(GORM_PB_HEART_RSP& a, GORM_PB_HEART_RSP& b) {
    a.Swap(&b);
  }
  inline void Swap(GORM_PB_HEART_RSP* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GORM_PB_HEART_RSP* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GORM_PB_HEART_RSP* New() const final {
    return CreateMaybeMessage<GORM_PB_HEART_RSP>(nullptr);
  }

  GORM_PB_HEART_RSP* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GORM_PB_HEART_RSP>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GORM_PB_HEART_RSP& from);
  void MergeFrom(const GORM_PB_HEART_RSP& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GORM_PB_HEART_RSP* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "gorm.GORM_PB_HEART_RSP";
  }
  protected:
  explicit GORM_PB_HEART_RSP(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gorm_5fpb_5fproto_2eproto);
    return ::descriptor_table_gorm_5fpb_5fproto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetCodeFieldNumber = 1,
  };
  // .gorm.GORM_PB_Ret_Code RetCode = 1;
  bool has_retcode() const;
  private:
  bool _internal_has_retcode() const;
  public:
  void clear_retcode();
  const ::gorm::GORM_PB_Ret_Code& retcode() const;
  ::gorm::GORM_PB_Ret_Code* release_retcode();
  ::gorm::GORM_PB_Ret_Code* mutable_retcode();
  void set_allocated_retcode(::gorm::GORM_PB_Ret_Code* retcode);
  private:
  const ::gorm::GORM_PB_Ret_Code& _internal_retcode() const;
  ::gorm::GORM_PB_Ret_Code* _internal_mutable_retcode();
  public:
  void unsafe_arena_set_allocated_retcode(
      ::gorm::GORM_PB_Ret_Code* retcode);
  ::gorm::GORM_PB_Ret_Code* unsafe_arena_release_retcode();

  // @@protoc_insertion_point(class_scope:gorm.GORM_PB_HEART_RSP)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::gorm::GORM_PB_Ret_Code* retcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gorm_5fpb_5fproto_2eproto;
};
// -------------------------------------------------------------------

class GORM_PB_TABLE_SCHEMA_INFO_COLUMN PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN) */ {
 public:
  inline GORM_PB_TABLE_SCHEMA_INFO_COLUMN() : GORM_PB_TABLE_SCHEMA_INFO_COLUMN(nullptr) {};
  virtual ~GORM_PB_TABLE_SCHEMA_INFO_COLUMN();

  GORM_PB_TABLE_SCHEMA_INFO_COLUMN(const GORM_PB_TABLE_SCHEMA_INFO_COLUMN& from);
  GORM_PB_TABLE_SCHEMA_INFO_COLUMN(GORM_PB_TABLE_SCHEMA_INFO_COLUMN&& from) noexcept
    : GORM_PB_TABLE_SCHEMA_INFO_COLUMN() {
    *this = ::std::move(from);
  }

  inline GORM_PB_TABLE_SCHEMA_INFO_COLUMN& operator=(const GORM_PB_TABLE_SCHEMA_INFO_COLUMN& from) {
    CopyFrom(from);
    return *this;
  }
  inline GORM_PB_TABLE_SCHEMA_INFO_COLUMN& operator=(GORM_PB_TABLE_SCHEMA_INFO_COLUMN&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GORM_PB_TABLE_SCHEMA_INFO_COLUMN& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GORM_PB_TABLE_SCHEMA_INFO_COLUMN* internal_default_instance() {
    return reinterpret_cast<const GORM_PB_TABLE_SCHEMA_INFO_COLUMN*>(
               &_GORM_PB_TABLE_SCHEMA_INFO_COLUMN_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(GORM_PB_TABLE_SCHEMA_INFO_COLUMN& a, GORM_PB_TABLE_SCHEMA_INFO_COLUMN& b) {
    a.Swap(&b);
  }
  inline void Swap(GORM_PB_TABLE_SCHEMA_INFO_COLUMN* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GORM_PB_TABLE_SCHEMA_INFO_COLUMN* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GORM_PB_TABLE_SCHEMA_INFO_COLUMN* New() const final {
    return CreateMaybeMessage<GORM_PB_TABLE_SCHEMA_INFO_COLUMN>(nullptr);
  }

  GORM_PB_TABLE_SCHEMA_INFO_COLUMN* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GORM_PB_TABLE_SCHEMA_INFO_COLUMN>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GORM_PB_TABLE_SCHEMA_INFO_COLUMN& from);
  void MergeFrom(const GORM_PB_TABLE_SCHEMA_INFO_COLUMN& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GORM_PB_TABLE_SCHEMA_INFO_COLUMN* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN";
  }
  protected:
  explicit GORM_PB_TABLE_SCHEMA_INFO_COLUMN(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gorm_5fpb_5fproto_2eproto);
    return ::descriptor_table_gorm_5fpb_5fproto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 2,
    kTypeDescFieldNumber = 3,
    kVersionFieldNumber = 1,
    kTypeFieldNumber = 4,
  };
  // string Name = 2;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_name();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // string TypeDesc = 3;
  void clear_typedesc();
  const std::string& typedesc() const;
  void set_typedesc(const std::string& value);
  void set_typedesc(std::string&& value);
  void set_typedesc(const char* value);
  void set_typedesc(const char* value, size_t size);
  std::string* mutable_typedesc();
  std::string* release_typedesc();
  void set_allocated_typedesc(std::string* typedesc);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_typedesc();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_typedesc(
      std::string* typedesc);
  private:
  const std::string& _internal_typedesc() const;
  void _internal_set_typedesc(const std::string& value);
  std::string* _internal_mutable_typedesc();
  public:

  // fixed64 Version = 1;
  void clear_version();
  ::PROTOBUF_NAMESPACE_ID::uint64 version() const;
  void set_version(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_version() const;
  void _internal_set_version(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // .gorm.GORM_PB_COLUMN_TYPE Type = 4;
  void clear_type();
  ::gorm::GORM_PB_COLUMN_TYPE type() const;
  void set_type(::gorm::GORM_PB_COLUMN_TYPE value);
  private:
  ::gorm::GORM_PB_COLUMN_TYPE _internal_type() const;
  void _internal_set_type(::gorm::GORM_PB_COLUMN_TYPE value);
  public:

  // @@protoc_insertion_point(class_scope:gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr typedesc_;
  ::PROTOBUF_NAMESPACE_ID::uint64 version_;
  int type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gorm_5fpb_5fproto_2eproto;
};
// -------------------------------------------------------------------

class GORM_PB_TABLE_SCHEMA_INFO PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:gorm.GORM_PB_TABLE_SCHEMA_INFO) */ {
 public:
  inline GORM_PB_TABLE_SCHEMA_INFO() : GORM_PB_TABLE_SCHEMA_INFO(nullptr) {};
  virtual ~GORM_PB_TABLE_SCHEMA_INFO();

  GORM_PB_TABLE_SCHEMA_INFO(const GORM_PB_TABLE_SCHEMA_INFO& from);
  GORM_PB_TABLE_SCHEMA_INFO(GORM_PB_TABLE_SCHEMA_INFO&& from) noexcept
    : GORM_PB_TABLE_SCHEMA_INFO() {
    *this = ::std::move(from);
  }

  inline GORM_PB_TABLE_SCHEMA_INFO& operator=(const GORM_PB_TABLE_SCHEMA_INFO& from) {
    CopyFrom(from);
    return *this;
  }
  inline GORM_PB_TABLE_SCHEMA_INFO& operator=(GORM_PB_TABLE_SCHEMA_INFO&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GORM_PB_TABLE_SCHEMA_INFO& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GORM_PB_TABLE_SCHEMA_INFO* internal_default_instance() {
    return reinterpret_cast<const GORM_PB_TABLE_SCHEMA_INFO*>(
               &_GORM_PB_TABLE_SCHEMA_INFO_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(GORM_PB_TABLE_SCHEMA_INFO& a, GORM_PB_TABLE_SCHEMA_INFO& b) {
    a.Swap(&b);
  }
  inline void Swap(GORM_PB_TABLE_SCHEMA_INFO* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GORM_PB_TABLE_SCHEMA_INFO* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GORM_PB_TABLE_SCHEMA_INFO* New() const final {
    return CreateMaybeMessage<GORM_PB_TABLE_SCHEMA_INFO>(nullptr);
  }

  GORM_PB_TABLE_SCHEMA_INFO* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GORM_PB_TABLE_SCHEMA_INFO>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GORM_PB_TABLE_SCHEMA_INFO& from);
  void MergeFrom(const GORM_PB_TABLE_SCHEMA_INFO& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GORM_PB_TABLE_SCHEMA_INFO* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "gorm.GORM_PB_TABLE_SCHEMA_INFO";
  }
  protected:
  explicit GORM_PB_TABLE_SCHEMA_INFO(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gorm_5fpb_5fproto_2eproto);
    return ::descriptor_table_gorm_5fpb_5fproto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kColumnsFieldNumber = 4,
    kTableNameFieldNumber = 2,
    kVersionFieldNumber = 1,
    kTableIdxFieldNumber = 3,
  };
  // repeated .gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN Columns = 4;
  int columns_size() const;
  private:
  int _internal_columns_size() const;
  public:
  void clear_columns();
  ::gorm::GORM_PB_TABLE_SCHEMA_INFO_COLUMN* mutable_columns(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE_SCHEMA_INFO_COLUMN >*
      mutable_columns();
  private:
  const ::gorm::GORM_PB_TABLE_SCHEMA_INFO_COLUMN& _internal_columns(int index) const;
  ::gorm::GORM_PB_TABLE_SCHEMA_INFO_COLUMN* _internal_add_columns();
  public:
  const ::gorm::GORM_PB_TABLE_SCHEMA_INFO_COLUMN& columns(int index) const;
  ::gorm::GORM_PB_TABLE_SCHEMA_INFO_COLUMN* add_columns();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE_SCHEMA_INFO_COLUMN >&
      columns() const;

  // string TableName = 2;
  void clear_tablename();
  const std::string& tablename() const;
  void set_tablename(const std::string& value);
  void set_tablename(std::string&& value);
  void set_tablename(const char* value);
  void set_tablename(const char* value, size_t size);
  std::string* mutable_tablename();
  std::string* release_tablename();
  void set_allocated_tablename(std::string* tablename);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_tablename();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_tablename(
      std::string* tablename);
  private:
  const std::string& _internal_tablename() const;
  void _internal_set_tablename(const std::string& value);
  std::string* _internal_mutable_tablename();
  public:

  // fixed64 Version = 1;
  void clear_version();
  ::PROTOBUF_NAMESPACE_ID::uint64 version() const;
  void set_version(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_version() const;
  void _internal_set_version(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // sfixed32 TableIdx = 3;
  void clear_tableidx();
  ::PROTOBUF_NAMESPACE_ID::int32 tableidx() const;
  void set_tableidx(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_tableidx() const;
  void _internal_set_tableidx(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:gorm.GORM_PB_TABLE_SCHEMA_INFO)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE_SCHEMA_INFO_COLUMN > columns_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr tablename_;
  ::PROTOBUF_NAMESPACE_ID::uint64 version_;
  ::PROTOBUF_NAMESPACE_ID::int32 tableidx_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gorm_5fpb_5fproto_2eproto;
};
// -------------------------------------------------------------------

class GORM_PB_HAND_SHAKE_REQ PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:gorm.GORM_PB_HAND_SHAKE_REQ) */ {
 public:
  inline GORM_PB_HAND_SHAKE_REQ() : GORM_PB_HAND_SHAKE_REQ(nullptr) {};
  virtual ~GORM_PB_HAND_SHAKE_REQ();

  GORM_PB_HAND_SHAKE_REQ(const GORM_PB_HAND_SHAKE_REQ& from);
  GORM_PB_HAND_SHAKE_REQ(GORM_PB_HAND_SHAKE_REQ&& from) noexcept
    : GORM_PB_HAND_SHAKE_REQ() {
    *this = ::std::move(from);
  }

  inline GORM_PB_HAND_SHAKE_REQ& operator=(const GORM_PB_HAND_SHAKE_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline GORM_PB_HAND_SHAKE_REQ& operator=(GORM_PB_HAND_SHAKE_REQ&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GORM_PB_HAND_SHAKE_REQ& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GORM_PB_HAND_SHAKE_REQ* internal_default_instance() {
    return reinterpret_cast<const GORM_PB_HAND_SHAKE_REQ*>(
               &_GORM_PB_HAND_SHAKE_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(GORM_PB_HAND_SHAKE_REQ& a, GORM_PB_HAND_SHAKE_REQ& b) {
    a.Swap(&b);
  }
  inline void Swap(GORM_PB_HAND_SHAKE_REQ* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GORM_PB_HAND_SHAKE_REQ* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GORM_PB_HAND_SHAKE_REQ* New() const final {
    return CreateMaybeMessage<GORM_PB_HAND_SHAKE_REQ>(nullptr);
  }

  GORM_PB_HAND_SHAKE_REQ* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GORM_PB_HAND_SHAKE_REQ>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GORM_PB_HAND_SHAKE_REQ& from);
  void MergeFrom(const GORM_PB_HAND_SHAKE_REQ& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GORM_PB_HAND_SHAKE_REQ* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "gorm.GORM_PB_HAND_SHAKE_REQ";
  }
  protected:
  explicit GORM_PB_HAND_SHAKE_REQ(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gorm_5fpb_5fproto_2eproto);
    return ::descriptor_table_gorm_5fpb_5fproto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSchemasFieldNumber = 4,
    kHeaderFieldNumber = 1,
    kVersionFieldNumber = 2,
    kMd5FieldNumber = 3,
  };
  // repeated .gorm.GORM_PB_TABLE_SCHEMA_INFO Schemas = 4;
  int schemas_size() const;
  private:
  int _internal_schemas_size() const;
  public:
  void clear_schemas();
  ::gorm::GORM_PB_TABLE_SCHEMA_INFO* mutable_schemas(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE_SCHEMA_INFO >*
      mutable_schemas();
  private:
  const ::gorm::GORM_PB_TABLE_SCHEMA_INFO& _internal_schemas(int index) const;
  ::gorm::GORM_PB_TABLE_SCHEMA_INFO* _internal_add_schemas();
  public:
  const ::gorm::GORM_PB_TABLE_SCHEMA_INFO& schemas(int index) const;
  ::gorm::GORM_PB_TABLE_SCHEMA_INFO* add_schemas();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE_SCHEMA_INFO >&
      schemas() const;

  // .gorm.GORM_PB_REQ_HEADER Header = 1;
  bool has_header() const;
  private:
  bool _internal_has_header() const;
  public:
  void clear_header();
  const ::gorm::GORM_PB_REQ_HEADER& header() const;
  ::gorm::GORM_PB_REQ_HEADER* release_header();
  ::gorm::GORM_PB_REQ_HEADER* mutable_header();
  void set_allocated_header(::gorm::GORM_PB_REQ_HEADER* header);
  private:
  const ::gorm::GORM_PB_REQ_HEADER& _internal_header() const;
  ::gorm::GORM_PB_REQ_HEADER* _internal_mutable_header();
  public:
  void unsafe_arena_set_allocated_header(
      ::gorm::GORM_PB_REQ_HEADER* header);
  ::gorm::GORM_PB_REQ_HEADER* unsafe_arena_release_header();

  // fixed64 Version = 2;
  void clear_version();
  ::PROTOBUF_NAMESPACE_ID::uint64 version() const;
  void set_version(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_version() const;
  void _internal_set_version(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // fixed32 Md5 = 3;
  void clear_md5();
  ::PROTOBUF_NAMESPACE_ID::uint32 md5() const;
  void set_md5(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_md5() const;
  void _internal_set_md5(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:gorm.GORM_PB_HAND_SHAKE_REQ)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE_SCHEMA_INFO > schemas_;
  ::gorm::GORM_PB_REQ_HEADER* header_;
  ::PROTOBUF_NAMESPACE_ID::uint64 version_;
  ::PROTOBUF_NAMESPACE_ID::uint32 md5_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gorm_5fpb_5fproto_2eproto;
};
// -------------------------------------------------------------------

class GORM_PB_HAND_SHAKE_RSP PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:gorm.GORM_PB_HAND_SHAKE_RSP) */ {
 public:
  inline GORM_PB_HAND_SHAKE_RSP() : GORM_PB_HAND_SHAKE_RSP(nullptr) {};
  virtual ~GORM_PB_HAND_SHAKE_RSP();

  GORM_PB_HAND_SHAKE_RSP(const GORM_PB_HAND_SHAKE_RSP& from);
  GORM_PB_HAND_SHAKE_RSP(GORM_PB_HAND_SHAKE_RSP&& from) noexcept
    : GORM_PB_HAND_SHAKE_RSP() {
    *this = ::std::move(from);
  }

  inline GORM_PB_HAND_SHAKE_RSP& operator=(const GORM_PB_HAND_SHAKE_RSP& from) {
    CopyFrom(from);
    return *this;
  }
  inline GORM_PB_HAND_SHAKE_RSP& operator=(GORM_PB_HAND_SHAKE_RSP&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GORM_PB_HAND_SHAKE_RSP& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GORM_PB_HAND_SHAKE_RSP* internal_default_instance() {
    return reinterpret_cast<const GORM_PB_HAND_SHAKE_RSP*>(
               &_GORM_PB_HAND_SHAKE_RSP_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(GORM_PB_HAND_SHAKE_RSP& a, GORM_PB_HAND_SHAKE_RSP& b) {
    a.Swap(&b);
  }
  inline void Swap(GORM_PB_HAND_SHAKE_RSP* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GORM_PB_HAND_SHAKE_RSP* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GORM_PB_HAND_SHAKE_RSP* New() const final {
    return CreateMaybeMessage<GORM_PB_HAND_SHAKE_RSP>(nullptr);
  }

  GORM_PB_HAND_SHAKE_RSP* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GORM_PB_HAND_SHAKE_RSP>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GORM_PB_HAND_SHAKE_RSP& from);
  void MergeFrom(const GORM_PB_HAND_SHAKE_RSP& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GORM_PB_HAND_SHAKE_RSP* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "gorm.GORM_PB_HAND_SHAKE_RSP";
  }
  protected:
  explicit GORM_PB_HAND_SHAKE_RSP(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gorm_5fpb_5fproto_2eproto);
    return ::descriptor_table_gorm_5fpb_5fproto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetCodeFieldNumber = 1,
    kClientIdFieldNumber = 2,
  };
  // .gorm.GORM_PB_Ret_Code RetCode = 1;
  bool has_retcode() const;
  private:
  bool _internal_has_retcode() const;
  public:
  void clear_retcode();
  const ::gorm::GORM_PB_Ret_Code& retcode() const;
  ::gorm::GORM_PB_Ret_Code* release_retcode();
  ::gorm::GORM_PB_Ret_Code* mutable_retcode();
  void set_allocated_retcode(::gorm::GORM_PB_Ret_Code* retcode);
  private:
  const ::gorm::GORM_PB_Ret_Code& _internal_retcode() const;
  ::gorm::GORM_PB_Ret_Code* _internal_mutable_retcode();
  public:
  void unsafe_arena_set_allocated_retcode(
      ::gorm::GORM_PB_Ret_Code* retcode);
  ::gorm::GORM_PB_Ret_Code* unsafe_arena_release_retcode();

  // fixed64 ClientId = 2;
  void clear_clientid();
  ::PROTOBUF_NAMESPACE_ID::uint64 clientid() const;
  void set_clientid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_clientid() const;
  void _internal_set_clientid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:gorm.GORM_PB_HAND_SHAKE_RSP)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::gorm::GORM_PB_Ret_Code* retcode_;
  ::PROTOBUF_NAMESPACE_ID::uint64 clientid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gorm_5fpb_5fproto_2eproto;
};
// -------------------------------------------------------------------

class GORM_PB_INSERT_REQ PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:gorm.GORM_PB_INSERT_REQ) */ {
 public:
  inline GORM_PB_INSERT_REQ() : GORM_PB_INSERT_REQ(nullptr) {};
  virtual ~GORM_PB_INSERT_REQ();

  GORM_PB_INSERT_REQ(const GORM_PB_INSERT_REQ& from);
  GORM_PB_INSERT_REQ(GORM_PB_INSERT_REQ&& from) noexcept
    : GORM_PB_INSERT_REQ() {
    *this = ::std::move(from);
  }

  inline GORM_PB_INSERT_REQ& operator=(const GORM_PB_INSERT_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline GORM_PB_INSERT_REQ& operator=(GORM_PB_INSERT_REQ&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GORM_PB_INSERT_REQ& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GORM_PB_INSERT_REQ* internal_default_instance() {
    return reinterpret_cast<const GORM_PB_INSERT_REQ*>(
               &_GORM_PB_INSERT_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(GORM_PB_INSERT_REQ& a, GORM_PB_INSERT_REQ& b) {
    a.Swap(&b);
  }
  inline void Swap(GORM_PB_INSERT_REQ* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GORM_PB_INSERT_REQ* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GORM_PB_INSERT_REQ* New() const final {
    return CreateMaybeMessage<GORM_PB_INSERT_REQ>(nullptr);
  }

  GORM_PB_INSERT_REQ* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GORM_PB_INSERT_REQ>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GORM_PB_INSERT_REQ& from);
  void MergeFrom(const GORM_PB_INSERT_REQ& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GORM_PB_INSERT_REQ* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "gorm.GORM_PB_INSERT_REQ";
  }
  protected:
  explicit GORM_PB_INSERT_REQ(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gorm_5fpb_5fproto_2eproto);
    return ::descriptor_table_gorm_5fpb_5fproto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTablesFieldNumber = 2,
    kHeaderFieldNumber = 1,
  };
  // repeated .gorm.GORM_PB_TABLE Tables = 2;
  int tables_size() const;
  private:
  int _internal_tables_size() const;
  public:
  void clear_tables();
  ::gorm::GORM_PB_TABLE* mutable_tables(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >*
      mutable_tables();
  private:
  const ::gorm::GORM_PB_TABLE& _internal_tables(int index) const;
  ::gorm::GORM_PB_TABLE* _internal_add_tables();
  public:
  const ::gorm::GORM_PB_TABLE& tables(int index) const;
  ::gorm::GORM_PB_TABLE* add_tables();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >&
      tables() const;

  // .gorm.GORM_PB_REQ_HEADER Header = 1;
  bool has_header() const;
  private:
  bool _internal_has_header() const;
  public:
  void clear_header();
  const ::gorm::GORM_PB_REQ_HEADER& header() const;
  ::gorm::GORM_PB_REQ_HEADER* release_header();
  ::gorm::GORM_PB_REQ_HEADER* mutable_header();
  void set_allocated_header(::gorm::GORM_PB_REQ_HEADER* header);
  private:
  const ::gorm::GORM_PB_REQ_HEADER& _internal_header() const;
  ::gorm::GORM_PB_REQ_HEADER* _internal_mutable_header();
  public:
  void unsafe_arena_set_allocated_header(
      ::gorm::GORM_PB_REQ_HEADER* header);
  ::gorm::GORM_PB_REQ_HEADER* unsafe_arena_release_header();

  // @@protoc_insertion_point(class_scope:gorm.GORM_PB_INSERT_REQ)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE > tables_;
  ::gorm::GORM_PB_REQ_HEADER* header_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gorm_5fpb_5fproto_2eproto;
};
// -------------------------------------------------------------------

class GORM_PB_INSERT_RSP PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:gorm.GORM_PB_INSERT_RSP) */ {
 public:
  inline GORM_PB_INSERT_RSP() : GORM_PB_INSERT_RSP(nullptr) {};
  virtual ~GORM_PB_INSERT_RSP();

  GORM_PB_INSERT_RSP(const GORM_PB_INSERT_RSP& from);
  GORM_PB_INSERT_RSP(GORM_PB_INSERT_RSP&& from) noexcept
    : GORM_PB_INSERT_RSP() {
    *this = ::std::move(from);
  }

  inline GORM_PB_INSERT_RSP& operator=(const GORM_PB_INSERT_RSP& from) {
    CopyFrom(from);
    return *this;
  }
  inline GORM_PB_INSERT_RSP& operator=(GORM_PB_INSERT_RSP&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GORM_PB_INSERT_RSP& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GORM_PB_INSERT_RSP* internal_default_instance() {
    return reinterpret_cast<const GORM_PB_INSERT_RSP*>(
               &_GORM_PB_INSERT_RSP_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(GORM_PB_INSERT_RSP& a, GORM_PB_INSERT_RSP& b) {
    a.Swap(&b);
  }
  inline void Swap(GORM_PB_INSERT_RSP* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GORM_PB_INSERT_RSP* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GORM_PB_INSERT_RSP* New() const final {
    return CreateMaybeMessage<GORM_PB_INSERT_RSP>(nullptr);
  }

  GORM_PB_INSERT_RSP* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GORM_PB_INSERT_RSP>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GORM_PB_INSERT_RSP& from);
  void MergeFrom(const GORM_PB_INSERT_RSP& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GORM_PB_INSERT_RSP* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "gorm.GORM_PB_INSERT_RSP";
  }
  protected:
  explicit GORM_PB_INSERT_RSP(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gorm_5fpb_5fproto_2eproto);
    return ::descriptor_table_gorm_5fpb_5fproto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTablesFieldNumber = 2,
    kRetCodeFieldNumber = 1,
    kLastInsertIdFieldNumber = 3,
  };
  // repeated .gorm.GORM_PB_TABLE Tables = 2;
  int tables_size() const;
  private:
  int _internal_tables_size() const;
  public:
  void clear_tables();
  ::gorm::GORM_PB_TABLE* mutable_tables(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >*
      mutable_tables();
  private:
  const ::gorm::GORM_PB_TABLE& _internal_tables(int index) const;
  ::gorm::GORM_PB_TABLE* _internal_add_tables();
  public:
  const ::gorm::GORM_PB_TABLE& tables(int index) const;
  ::gorm::GORM_PB_TABLE* add_tables();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >&
      tables() const;

  // .gorm.GORM_PB_Ret_Code RetCode = 1;
  bool has_retcode() const;
  private:
  bool _internal_has_retcode() const;
  public:
  void clear_retcode();
  const ::gorm::GORM_PB_Ret_Code& retcode() const;
  ::gorm::GORM_PB_Ret_Code* release_retcode();
  ::gorm::GORM_PB_Ret_Code* mutable_retcode();
  void set_allocated_retcode(::gorm::GORM_PB_Ret_Code* retcode);
  private:
  const ::gorm::GORM_PB_Ret_Code& _internal_retcode() const;
  ::gorm::GORM_PB_Ret_Code* _internal_mutable_retcode();
  public:
  void unsafe_arena_set_allocated_retcode(
      ::gorm::GORM_PB_Ret_Code* retcode);
  ::gorm::GORM_PB_Ret_Code* unsafe_arena_release_retcode();

  // fixed64 LastInsertId = 3;
  void clear_lastinsertid();
  ::PROTOBUF_NAMESPACE_ID::uint64 lastinsertid() const;
  void set_lastinsertid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_lastinsertid() const;
  void _internal_set_lastinsertid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:gorm.GORM_PB_INSERT_RSP)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE > tables_;
  ::gorm::GORM_PB_Ret_Code* retcode_;
  ::PROTOBUF_NAMESPACE_ID::uint64 lastinsertid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gorm_5fpb_5fproto_2eproto;
};
// -------------------------------------------------------------------

class GORM_PB_UPDATE_REQ PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:gorm.GORM_PB_UPDATE_REQ) */ {
 public:
  inline GORM_PB_UPDATE_REQ() : GORM_PB_UPDATE_REQ(nullptr) {};
  virtual ~GORM_PB_UPDATE_REQ();

  GORM_PB_UPDATE_REQ(const GORM_PB_UPDATE_REQ& from);
  GORM_PB_UPDATE_REQ(GORM_PB_UPDATE_REQ&& from) noexcept
    : GORM_PB_UPDATE_REQ() {
    *this = ::std::move(from);
  }

  inline GORM_PB_UPDATE_REQ& operator=(const GORM_PB_UPDATE_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline GORM_PB_UPDATE_REQ& operator=(GORM_PB_UPDATE_REQ&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GORM_PB_UPDATE_REQ& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GORM_PB_UPDATE_REQ* internal_default_instance() {
    return reinterpret_cast<const GORM_PB_UPDATE_REQ*>(
               &_GORM_PB_UPDATE_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(GORM_PB_UPDATE_REQ& a, GORM_PB_UPDATE_REQ& b) {
    a.Swap(&b);
  }
  inline void Swap(GORM_PB_UPDATE_REQ* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GORM_PB_UPDATE_REQ* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GORM_PB_UPDATE_REQ* New() const final {
    return CreateMaybeMessage<GORM_PB_UPDATE_REQ>(nullptr);
  }

  GORM_PB_UPDATE_REQ* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GORM_PB_UPDATE_REQ>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GORM_PB_UPDATE_REQ& from);
  void MergeFrom(const GORM_PB_UPDATE_REQ& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GORM_PB_UPDATE_REQ* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "gorm.GORM_PB_UPDATE_REQ";
  }
  protected:
  explicit GORM_PB_UPDATE_REQ(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gorm_5fpb_5fproto_2eproto);
    return ::descriptor_table_gorm_5fpb_5fproto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTablesFieldNumber = 2,
    kHeaderFieldNumber = 1,
  };
  // repeated .gorm.GORM_PB_TABLE Tables = 2;
  int tables_size() const;
  private:
  int _internal_tables_size() const;
  public:
  void clear_tables();
  ::gorm::GORM_PB_TABLE* mutable_tables(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >*
      mutable_tables();
  private:
  const ::gorm::GORM_PB_TABLE& _internal_tables(int index) const;
  ::gorm::GORM_PB_TABLE* _internal_add_tables();
  public:
  const ::gorm::GORM_PB_TABLE& tables(int index) const;
  ::gorm::GORM_PB_TABLE* add_tables();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >&
      tables() const;

  // .gorm.GORM_PB_REQ_HEADER Header = 1;
  bool has_header() const;
  private:
  bool _internal_has_header() const;
  public:
  void clear_header();
  const ::gorm::GORM_PB_REQ_HEADER& header() const;
  ::gorm::GORM_PB_REQ_HEADER* release_header();
  ::gorm::GORM_PB_REQ_HEADER* mutable_header();
  void set_allocated_header(::gorm::GORM_PB_REQ_HEADER* header);
  private:
  const ::gorm::GORM_PB_REQ_HEADER& _internal_header() const;
  ::gorm::GORM_PB_REQ_HEADER* _internal_mutable_header();
  public:
  void unsafe_arena_set_allocated_header(
      ::gorm::GORM_PB_REQ_HEADER* header);
  ::gorm::GORM_PB_REQ_HEADER* unsafe_arena_release_header();

  // @@protoc_insertion_point(class_scope:gorm.GORM_PB_UPDATE_REQ)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE > tables_;
  ::gorm::GORM_PB_REQ_HEADER* header_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gorm_5fpb_5fproto_2eproto;
};
// -------------------------------------------------------------------

class GORM_PB_UPDATE_RSP PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:gorm.GORM_PB_UPDATE_RSP) */ {
 public:
  inline GORM_PB_UPDATE_RSP() : GORM_PB_UPDATE_RSP(nullptr) {};
  virtual ~GORM_PB_UPDATE_RSP();

  GORM_PB_UPDATE_RSP(const GORM_PB_UPDATE_RSP& from);
  GORM_PB_UPDATE_RSP(GORM_PB_UPDATE_RSP&& from) noexcept
    : GORM_PB_UPDATE_RSP() {
    *this = ::std::move(from);
  }

  inline GORM_PB_UPDATE_RSP& operator=(const GORM_PB_UPDATE_RSP& from) {
    CopyFrom(from);
    return *this;
  }
  inline GORM_PB_UPDATE_RSP& operator=(GORM_PB_UPDATE_RSP&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GORM_PB_UPDATE_RSP& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GORM_PB_UPDATE_RSP* internal_default_instance() {
    return reinterpret_cast<const GORM_PB_UPDATE_RSP*>(
               &_GORM_PB_UPDATE_RSP_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(GORM_PB_UPDATE_RSP& a, GORM_PB_UPDATE_RSP& b) {
    a.Swap(&b);
  }
  inline void Swap(GORM_PB_UPDATE_RSP* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GORM_PB_UPDATE_RSP* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GORM_PB_UPDATE_RSP* New() const final {
    return CreateMaybeMessage<GORM_PB_UPDATE_RSP>(nullptr);
  }

  GORM_PB_UPDATE_RSP* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GORM_PB_UPDATE_RSP>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GORM_PB_UPDATE_RSP& from);
  void MergeFrom(const GORM_PB_UPDATE_RSP& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GORM_PB_UPDATE_RSP* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "gorm.GORM_PB_UPDATE_RSP";
  }
  protected:
  explicit GORM_PB_UPDATE_RSP(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gorm_5fpb_5fproto_2eproto);
    return ::descriptor_table_gorm_5fpb_5fproto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTablesFieldNumber = 2,
    kRetCodeFieldNumber = 1,
    kAffectedNumFieldNumber = 3,
  };
  // repeated .gorm.GORM_PB_TABLE Tables = 2;
  int tables_size() const;
  private:
  int _internal_tables_size() const;
  public:
  void clear_tables();
  ::gorm::GORM_PB_TABLE* mutable_tables(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >*
      mutable_tables();
  private:
  const ::gorm::GORM_PB_TABLE& _internal_tables(int index) const;
  ::gorm::GORM_PB_TABLE* _internal_add_tables();
  public:
  const ::gorm::GORM_PB_TABLE& tables(int index) const;
  ::gorm::GORM_PB_TABLE* add_tables();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >&
      tables() const;

  // .gorm.GORM_PB_Ret_Code RetCode = 1;
  bool has_retcode() const;
  private:
  bool _internal_has_retcode() const;
  public:
  void clear_retcode();
  const ::gorm::GORM_PB_Ret_Code& retcode() const;
  ::gorm::GORM_PB_Ret_Code* release_retcode();
  ::gorm::GORM_PB_Ret_Code* mutable_retcode();
  void set_allocated_retcode(::gorm::GORM_PB_Ret_Code* retcode);
  private:
  const ::gorm::GORM_PB_Ret_Code& _internal_retcode() const;
  ::gorm::GORM_PB_Ret_Code* _internal_mutable_retcode();
  public:
  void unsafe_arena_set_allocated_retcode(
      ::gorm::GORM_PB_Ret_Code* retcode);
  ::gorm::GORM_PB_Ret_Code* unsafe_arena_release_retcode();

  // sfixed32 AffectedNum = 3;
  void clear_affectednum();
  ::PROTOBUF_NAMESPACE_ID::int32 affectednum() const;
  void set_affectednum(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_affectednum() const;
  void _internal_set_affectednum(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:gorm.GORM_PB_UPDATE_RSP)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE > tables_;
  ::gorm::GORM_PB_Ret_Code* retcode_;
  ::PROTOBUF_NAMESPACE_ID::int32 affectednum_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gorm_5fpb_5fproto_2eproto;
};
// -------------------------------------------------------------------

class GORM_PB_REPLACE_REQ PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:gorm.GORM_PB_REPLACE_REQ) */ {
 public:
  inline GORM_PB_REPLACE_REQ() : GORM_PB_REPLACE_REQ(nullptr) {};
  virtual ~GORM_PB_REPLACE_REQ();

  GORM_PB_REPLACE_REQ(const GORM_PB_REPLACE_REQ& from);
  GORM_PB_REPLACE_REQ(GORM_PB_REPLACE_REQ&& from) noexcept
    : GORM_PB_REPLACE_REQ() {
    *this = ::std::move(from);
  }

  inline GORM_PB_REPLACE_REQ& operator=(const GORM_PB_REPLACE_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline GORM_PB_REPLACE_REQ& operator=(GORM_PB_REPLACE_REQ&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GORM_PB_REPLACE_REQ& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GORM_PB_REPLACE_REQ* internal_default_instance() {
    return reinterpret_cast<const GORM_PB_REPLACE_REQ*>(
               &_GORM_PB_REPLACE_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(GORM_PB_REPLACE_REQ& a, GORM_PB_REPLACE_REQ& b) {
    a.Swap(&b);
  }
  inline void Swap(GORM_PB_REPLACE_REQ* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GORM_PB_REPLACE_REQ* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GORM_PB_REPLACE_REQ* New() const final {
    return CreateMaybeMessage<GORM_PB_REPLACE_REQ>(nullptr);
  }

  GORM_PB_REPLACE_REQ* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GORM_PB_REPLACE_REQ>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GORM_PB_REPLACE_REQ& from);
  void MergeFrom(const GORM_PB_REPLACE_REQ& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GORM_PB_REPLACE_REQ* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "gorm.GORM_PB_REPLACE_REQ";
  }
  protected:
  explicit GORM_PB_REPLACE_REQ(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gorm_5fpb_5fproto_2eproto);
    return ::descriptor_table_gorm_5fpb_5fproto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTablesFieldNumber = 2,
    kHeaderFieldNumber = 1,
  };
  // repeated .gorm.GORM_PB_TABLE Tables = 2;
  int tables_size() const;
  private:
  int _internal_tables_size() const;
  public:
  void clear_tables();
  ::gorm::GORM_PB_TABLE* mutable_tables(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >*
      mutable_tables();
  private:
  const ::gorm::GORM_PB_TABLE& _internal_tables(int index) const;
  ::gorm::GORM_PB_TABLE* _internal_add_tables();
  public:
  const ::gorm::GORM_PB_TABLE& tables(int index) const;
  ::gorm::GORM_PB_TABLE* add_tables();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >&
      tables() const;

  // .gorm.GORM_PB_REQ_HEADER Header = 1;
  bool has_header() const;
  private:
  bool _internal_has_header() const;
  public:
  void clear_header();
  const ::gorm::GORM_PB_REQ_HEADER& header() const;
  ::gorm::GORM_PB_REQ_HEADER* release_header();
  ::gorm::GORM_PB_REQ_HEADER* mutable_header();
  void set_allocated_header(::gorm::GORM_PB_REQ_HEADER* header);
  private:
  const ::gorm::GORM_PB_REQ_HEADER& _internal_header() const;
  ::gorm::GORM_PB_REQ_HEADER* _internal_mutable_header();
  public:
  void unsafe_arena_set_allocated_header(
      ::gorm::GORM_PB_REQ_HEADER* header);
  ::gorm::GORM_PB_REQ_HEADER* unsafe_arena_release_header();

  // @@protoc_insertion_point(class_scope:gorm.GORM_PB_REPLACE_REQ)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE > tables_;
  ::gorm::GORM_PB_REQ_HEADER* header_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gorm_5fpb_5fproto_2eproto;
};
// -------------------------------------------------------------------

class GORM_PB_REPLACE_RSP PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:gorm.GORM_PB_REPLACE_RSP) */ {
 public:
  inline GORM_PB_REPLACE_RSP() : GORM_PB_REPLACE_RSP(nullptr) {};
  virtual ~GORM_PB_REPLACE_RSP();

  GORM_PB_REPLACE_RSP(const GORM_PB_REPLACE_RSP& from);
  GORM_PB_REPLACE_RSP(GORM_PB_REPLACE_RSP&& from) noexcept
    : GORM_PB_REPLACE_RSP() {
    *this = ::std::move(from);
  }

  inline GORM_PB_REPLACE_RSP& operator=(const GORM_PB_REPLACE_RSP& from) {
    CopyFrom(from);
    return *this;
  }
  inline GORM_PB_REPLACE_RSP& operator=(GORM_PB_REPLACE_RSP&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GORM_PB_REPLACE_RSP& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GORM_PB_REPLACE_RSP* internal_default_instance() {
    return reinterpret_cast<const GORM_PB_REPLACE_RSP*>(
               &_GORM_PB_REPLACE_RSP_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(GORM_PB_REPLACE_RSP& a, GORM_PB_REPLACE_RSP& b) {
    a.Swap(&b);
  }
  inline void Swap(GORM_PB_REPLACE_RSP* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GORM_PB_REPLACE_RSP* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GORM_PB_REPLACE_RSP* New() const final {
    return CreateMaybeMessage<GORM_PB_REPLACE_RSP>(nullptr);
  }

  GORM_PB_REPLACE_RSP* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GORM_PB_REPLACE_RSP>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GORM_PB_REPLACE_RSP& from);
  void MergeFrom(const GORM_PB_REPLACE_RSP& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GORM_PB_REPLACE_RSP* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "gorm.GORM_PB_REPLACE_RSP";
  }
  protected:
  explicit GORM_PB_REPLACE_RSP(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gorm_5fpb_5fproto_2eproto);
    return ::descriptor_table_gorm_5fpb_5fproto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTablesFieldNumber = 2,
    kRetCodeFieldNumber = 1,
    kAffectedNumFieldNumber = 3,
  };
  // repeated .gorm.GORM_PB_TABLE Tables = 2;
  int tables_size() const;
  private:
  int _internal_tables_size() const;
  public:
  void clear_tables();
  ::gorm::GORM_PB_TABLE* mutable_tables(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >*
      mutable_tables();
  private:
  const ::gorm::GORM_PB_TABLE& _internal_tables(int index) const;
  ::gorm::GORM_PB_TABLE* _internal_add_tables();
  public:
  const ::gorm::GORM_PB_TABLE& tables(int index) const;
  ::gorm::GORM_PB_TABLE* add_tables();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >&
      tables() const;

  // .gorm.GORM_PB_Ret_Code RetCode = 1;
  bool has_retcode() const;
  private:
  bool _internal_has_retcode() const;
  public:
  void clear_retcode();
  const ::gorm::GORM_PB_Ret_Code& retcode() const;
  ::gorm::GORM_PB_Ret_Code* release_retcode();
  ::gorm::GORM_PB_Ret_Code* mutable_retcode();
  void set_allocated_retcode(::gorm::GORM_PB_Ret_Code* retcode);
  private:
  const ::gorm::GORM_PB_Ret_Code& _internal_retcode() const;
  ::gorm::GORM_PB_Ret_Code* _internal_mutable_retcode();
  public:
  void unsafe_arena_set_allocated_retcode(
      ::gorm::GORM_PB_Ret_Code* retcode);
  ::gorm::GORM_PB_Ret_Code* unsafe_arena_release_retcode();

  // sfixed32 AffectedNum = 3;
  void clear_affectednum();
  ::PROTOBUF_NAMESPACE_ID::int32 affectednum() const;
  void set_affectednum(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_affectednum() const;
  void _internal_set_affectednum(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:gorm.GORM_PB_REPLACE_RSP)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE > tables_;
  ::gorm::GORM_PB_Ret_Code* retcode_;
  ::PROTOBUF_NAMESPACE_ID::int32 affectednum_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gorm_5fpb_5fproto_2eproto;
};
// -------------------------------------------------------------------

class GORM_PB_GET_REQ PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:gorm.GORM_PB_GET_REQ) */ {
 public:
  inline GORM_PB_GET_REQ() : GORM_PB_GET_REQ(nullptr) {};
  virtual ~GORM_PB_GET_REQ();

  GORM_PB_GET_REQ(const GORM_PB_GET_REQ& from);
  GORM_PB_GET_REQ(GORM_PB_GET_REQ&& from) noexcept
    : GORM_PB_GET_REQ() {
    *this = ::std::move(from);
  }

  inline GORM_PB_GET_REQ& operator=(const GORM_PB_GET_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline GORM_PB_GET_REQ& operator=(GORM_PB_GET_REQ&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GORM_PB_GET_REQ& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GORM_PB_GET_REQ* internal_default_instance() {
    return reinterpret_cast<const GORM_PB_GET_REQ*>(
               &_GORM_PB_GET_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(GORM_PB_GET_REQ& a, GORM_PB_GET_REQ& b) {
    a.Swap(&b);
  }
  inline void Swap(GORM_PB_GET_REQ* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GORM_PB_GET_REQ* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GORM_PB_GET_REQ* New() const final {
    return CreateMaybeMessage<GORM_PB_GET_REQ>(nullptr);
  }

  GORM_PB_GET_REQ* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GORM_PB_GET_REQ>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GORM_PB_GET_REQ& from);
  void MergeFrom(const GORM_PB_GET_REQ& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GORM_PB_GET_REQ* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "gorm.GORM_PB_GET_REQ";
  }
  protected:
  explicit GORM_PB_GET_REQ(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gorm_5fpb_5fproto_2eproto);
    return ::descriptor_table_gorm_5fpb_5fproto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHeaderFieldNumber = 1,
    kTableFieldNumber = 2,
    kGetFlagFieldNumber = 3,
  };
  // .gorm.GORM_PB_REQ_HEADER Header = 1;
  bool has_header() const;
  private:
  bool _internal_has_header() const;
  public:
  void clear_header();
  const ::gorm::GORM_PB_REQ_HEADER& header() const;
  ::gorm::GORM_PB_REQ_HEADER* release_header();
  ::gorm::GORM_PB_REQ_HEADER* mutable_header();
  void set_allocated_header(::gorm::GORM_PB_REQ_HEADER* header);
  private:
  const ::gorm::GORM_PB_REQ_HEADER& _internal_header() const;
  ::gorm::GORM_PB_REQ_HEADER* _internal_mutable_header();
  public:
  void unsafe_arena_set_allocated_header(
      ::gorm::GORM_PB_REQ_HEADER* header);
  ::gorm::GORM_PB_REQ_HEADER* unsafe_arena_release_header();

  // .gorm.GORM_PB_TABLE Table = 2;
  bool has_table() const;
  private:
  bool _internal_has_table() const;
  public:
  void clear_table();
  const ::gorm::GORM_PB_TABLE& table() const;
  ::gorm::GORM_PB_TABLE* release_table();
  ::gorm::GORM_PB_TABLE* mutable_table();
  void set_allocated_table(::gorm::GORM_PB_TABLE* table);
  private:
  const ::gorm::GORM_PB_TABLE& _internal_table() const;
  ::gorm::GORM_PB_TABLE* _internal_mutable_table();
  public:
  void unsafe_arena_set_allocated_table(
      ::gorm::GORM_PB_TABLE* table);
  ::gorm::GORM_PB_TABLE* unsafe_arena_release_table();

  // sfixed32 GetFlag = 3;
  void clear_getflag();
  ::PROTOBUF_NAMESPACE_ID::int32 getflag() const;
  void set_getflag(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_getflag() const;
  void _internal_set_getflag(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:gorm.GORM_PB_GET_REQ)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::gorm::GORM_PB_REQ_HEADER* header_;
  ::gorm::GORM_PB_TABLE* table_;
  ::PROTOBUF_NAMESPACE_ID::int32 getflag_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gorm_5fpb_5fproto_2eproto;
};
// -------------------------------------------------------------------

class GORM_PB_GET_RSP PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:gorm.GORM_PB_GET_RSP) */ {
 public:
  inline GORM_PB_GET_RSP() : GORM_PB_GET_RSP(nullptr) {};
  virtual ~GORM_PB_GET_RSP();

  GORM_PB_GET_RSP(const GORM_PB_GET_RSP& from);
  GORM_PB_GET_RSP(GORM_PB_GET_RSP&& from) noexcept
    : GORM_PB_GET_RSP() {
    *this = ::std::move(from);
  }

  inline GORM_PB_GET_RSP& operator=(const GORM_PB_GET_RSP& from) {
    CopyFrom(from);
    return *this;
  }
  inline GORM_PB_GET_RSP& operator=(GORM_PB_GET_RSP&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GORM_PB_GET_RSP& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GORM_PB_GET_RSP* internal_default_instance() {
    return reinterpret_cast<const GORM_PB_GET_RSP*>(
               &_GORM_PB_GET_RSP_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(GORM_PB_GET_RSP& a, GORM_PB_GET_RSP& b) {
    a.Swap(&b);
  }
  inline void Swap(GORM_PB_GET_RSP* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GORM_PB_GET_RSP* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GORM_PB_GET_RSP* New() const final {
    return CreateMaybeMessage<GORM_PB_GET_RSP>(nullptr);
  }

  GORM_PB_GET_RSP* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GORM_PB_GET_RSP>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GORM_PB_GET_RSP& from);
  void MergeFrom(const GORM_PB_GET_RSP& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GORM_PB_GET_RSP* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "gorm.GORM_PB_GET_RSP";
  }
  protected:
  explicit GORM_PB_GET_RSP(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gorm_5fpb_5fproto_2eproto);
    return ::descriptor_table_gorm_5fpb_5fproto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetCodeFieldNumber = 1,
    kTableFieldNumber = 2,
    kLastInsertIdFieldNumber = 4,
    kNewInsertFieldNumber = 3,
  };
  // .gorm.GORM_PB_Ret_Code RetCode = 1;
  bool has_retcode() const;
  private:
  bool _internal_has_retcode() const;
  public:
  void clear_retcode();
  const ::gorm::GORM_PB_Ret_Code& retcode() const;
  ::gorm::GORM_PB_Ret_Code* release_retcode();
  ::gorm::GORM_PB_Ret_Code* mutable_retcode();
  void set_allocated_retcode(::gorm::GORM_PB_Ret_Code* retcode);
  private:
  const ::gorm::GORM_PB_Ret_Code& _internal_retcode() const;
  ::gorm::GORM_PB_Ret_Code* _internal_mutable_retcode();
  public:
  void unsafe_arena_set_allocated_retcode(
      ::gorm::GORM_PB_Ret_Code* retcode);
  ::gorm::GORM_PB_Ret_Code* unsafe_arena_release_retcode();

  // .gorm.GORM_PB_TABLE Table = 2;
  bool has_table() const;
  private:
  bool _internal_has_table() const;
  public:
  void clear_table();
  const ::gorm::GORM_PB_TABLE& table() const;
  ::gorm::GORM_PB_TABLE* release_table();
  ::gorm::GORM_PB_TABLE* mutable_table();
  void set_allocated_table(::gorm::GORM_PB_TABLE* table);
  private:
  const ::gorm::GORM_PB_TABLE& _internal_table() const;
  ::gorm::GORM_PB_TABLE* _internal_mutable_table();
  public:
  void unsafe_arena_set_allocated_table(
      ::gorm::GORM_PB_TABLE* table);
  ::gorm::GORM_PB_TABLE* unsafe_arena_release_table();

  // fixed64 LastInsertId = 4;
  void clear_lastinsertid();
  ::PROTOBUF_NAMESPACE_ID::uint64 lastinsertid() const;
  void set_lastinsertid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_lastinsertid() const;
  void _internal_set_lastinsertid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // sfixed32 NewInsert = 3;
  void clear_newinsert();
  ::PROTOBUF_NAMESPACE_ID::int32 newinsert() const;
  void set_newinsert(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_newinsert() const;
  void _internal_set_newinsert(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:gorm.GORM_PB_GET_RSP)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::gorm::GORM_PB_Ret_Code* retcode_;
  ::gorm::GORM_PB_TABLE* table_;
  ::PROTOBUF_NAMESPACE_ID::uint64 lastinsertid_;
  ::PROTOBUF_NAMESPACE_ID::int32 newinsert_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gorm_5fpb_5fproto_2eproto;
};
// -------------------------------------------------------------------

class GORM_PB_BATCH_GET_REQ PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:gorm.GORM_PB_BATCH_GET_REQ) */ {
 public:
  inline GORM_PB_BATCH_GET_REQ() : GORM_PB_BATCH_GET_REQ(nullptr) {};
  virtual ~GORM_PB_BATCH_GET_REQ();

  GORM_PB_BATCH_GET_REQ(const GORM_PB_BATCH_GET_REQ& from);
  GORM_PB_BATCH_GET_REQ(GORM_PB_BATCH_GET_REQ&& from) noexcept
    : GORM_PB_BATCH_GET_REQ() {
    *this = ::std::move(from);
  }

  inline GORM_PB_BATCH_GET_REQ& operator=(const GORM_PB_BATCH_GET_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline GORM_PB_BATCH_GET_REQ& operator=(GORM_PB_BATCH_GET_REQ&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GORM_PB_BATCH_GET_REQ& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GORM_PB_BATCH_GET_REQ* internal_default_instance() {
    return reinterpret_cast<const GORM_PB_BATCH_GET_REQ*>(
               &_GORM_PB_BATCH_GET_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(GORM_PB_BATCH_GET_REQ& a, GORM_PB_BATCH_GET_REQ& b) {
    a.Swap(&b);
  }
  inline void Swap(GORM_PB_BATCH_GET_REQ* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GORM_PB_BATCH_GET_REQ* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GORM_PB_BATCH_GET_REQ* New() const final {
    return CreateMaybeMessage<GORM_PB_BATCH_GET_REQ>(nullptr);
  }

  GORM_PB_BATCH_GET_REQ* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GORM_PB_BATCH_GET_REQ>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GORM_PB_BATCH_GET_REQ& from);
  void MergeFrom(const GORM_PB_BATCH_GET_REQ& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GORM_PB_BATCH_GET_REQ* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "gorm.GORM_PB_BATCH_GET_REQ";
  }
  protected:
  explicit GORM_PB_BATCH_GET_REQ(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gorm_5fpb_5fproto_2eproto);
    return ::descriptor_table_gorm_5fpb_5fproto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTablesFieldNumber = 2,
    kHeaderFieldNumber = 1,
  };
  // repeated .gorm.GORM_PB_TABLE Tables = 2;
  int tables_size() const;
  private:
  int _internal_tables_size() const;
  public:
  void clear_tables();
  ::gorm::GORM_PB_TABLE* mutable_tables(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >*
      mutable_tables();
  private:
  const ::gorm::GORM_PB_TABLE& _internal_tables(int index) const;
  ::gorm::GORM_PB_TABLE* _internal_add_tables();
  public:
  const ::gorm::GORM_PB_TABLE& tables(int index) const;
  ::gorm::GORM_PB_TABLE* add_tables();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >&
      tables() const;

  // .gorm.GORM_PB_REQ_HEADER Header = 1;
  bool has_header() const;
  private:
  bool _internal_has_header() const;
  public:
  void clear_header();
  const ::gorm::GORM_PB_REQ_HEADER& header() const;
  ::gorm::GORM_PB_REQ_HEADER* release_header();
  ::gorm::GORM_PB_REQ_HEADER* mutable_header();
  void set_allocated_header(::gorm::GORM_PB_REQ_HEADER* header);
  private:
  const ::gorm::GORM_PB_REQ_HEADER& _internal_header() const;
  ::gorm::GORM_PB_REQ_HEADER* _internal_mutable_header();
  public:
  void unsafe_arena_set_allocated_header(
      ::gorm::GORM_PB_REQ_HEADER* header);
  ::gorm::GORM_PB_REQ_HEADER* unsafe_arena_release_header();

  // @@protoc_insertion_point(class_scope:gorm.GORM_PB_BATCH_GET_REQ)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE > tables_;
  ::gorm::GORM_PB_REQ_HEADER* header_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gorm_5fpb_5fproto_2eproto;
};
// -------------------------------------------------------------------

class GORM_PB_BATCH_GET_RSP PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:gorm.GORM_PB_BATCH_GET_RSP) */ {
 public:
  inline GORM_PB_BATCH_GET_RSP() : GORM_PB_BATCH_GET_RSP(nullptr) {};
  virtual ~GORM_PB_BATCH_GET_RSP();

  GORM_PB_BATCH_GET_RSP(const GORM_PB_BATCH_GET_RSP& from);
  GORM_PB_BATCH_GET_RSP(GORM_PB_BATCH_GET_RSP&& from) noexcept
    : GORM_PB_BATCH_GET_RSP() {
    *this = ::std::move(from);
  }

  inline GORM_PB_BATCH_GET_RSP& operator=(const GORM_PB_BATCH_GET_RSP& from) {
    CopyFrom(from);
    return *this;
  }
  inline GORM_PB_BATCH_GET_RSP& operator=(GORM_PB_BATCH_GET_RSP&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GORM_PB_BATCH_GET_RSP& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GORM_PB_BATCH_GET_RSP* internal_default_instance() {
    return reinterpret_cast<const GORM_PB_BATCH_GET_RSP*>(
               &_GORM_PB_BATCH_GET_RSP_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(GORM_PB_BATCH_GET_RSP& a, GORM_PB_BATCH_GET_RSP& b) {
    a.Swap(&b);
  }
  inline void Swap(GORM_PB_BATCH_GET_RSP* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GORM_PB_BATCH_GET_RSP* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GORM_PB_BATCH_GET_RSP* New() const final {
    return CreateMaybeMessage<GORM_PB_BATCH_GET_RSP>(nullptr);
  }

  GORM_PB_BATCH_GET_RSP* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GORM_PB_BATCH_GET_RSP>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GORM_PB_BATCH_GET_RSP& from);
  void MergeFrom(const GORM_PB_BATCH_GET_RSP& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GORM_PB_BATCH_GET_RSP* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "gorm.GORM_PB_BATCH_GET_RSP";
  }
  protected:
  explicit GORM_PB_BATCH_GET_RSP(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gorm_5fpb_5fproto_2eproto);
    return ::descriptor_table_gorm_5fpb_5fproto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTablesFieldNumber = 2,
    kRetCodeFieldNumber = 1,
  };
  // repeated .gorm.GORM_PB_TABLE Tables = 2;
  int tables_size() const;
  private:
  int _internal_tables_size() const;
  public:
  void clear_tables();
  ::gorm::GORM_PB_TABLE* mutable_tables(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >*
      mutable_tables();
  private:
  const ::gorm::GORM_PB_TABLE& _internal_tables(int index) const;
  ::gorm::GORM_PB_TABLE* _internal_add_tables();
  public:
  const ::gorm::GORM_PB_TABLE& tables(int index) const;
  ::gorm::GORM_PB_TABLE* add_tables();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >&
      tables() const;

  // .gorm.GORM_PB_Ret_Code RetCode = 1;
  bool has_retcode() const;
  private:
  bool _internal_has_retcode() const;
  public:
  void clear_retcode();
  const ::gorm::GORM_PB_Ret_Code& retcode() const;
  ::gorm::GORM_PB_Ret_Code* release_retcode();
  ::gorm::GORM_PB_Ret_Code* mutable_retcode();
  void set_allocated_retcode(::gorm::GORM_PB_Ret_Code* retcode);
  private:
  const ::gorm::GORM_PB_Ret_Code& _internal_retcode() const;
  ::gorm::GORM_PB_Ret_Code* _internal_mutable_retcode();
  public:
  void unsafe_arena_set_allocated_retcode(
      ::gorm::GORM_PB_Ret_Code* retcode);
  ::gorm::GORM_PB_Ret_Code* unsafe_arena_release_retcode();

  // @@protoc_insertion_point(class_scope:gorm.GORM_PB_BATCH_GET_RSP)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE > tables_;
  ::gorm::GORM_PB_Ret_Code* retcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gorm_5fpb_5fproto_2eproto;
};
// -------------------------------------------------------------------

class GORM_PB_INCREASE_REQ PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:gorm.GORM_PB_INCREASE_REQ) */ {
 public:
  inline GORM_PB_INCREASE_REQ() : GORM_PB_INCREASE_REQ(nullptr) {};
  virtual ~GORM_PB_INCREASE_REQ();

  GORM_PB_INCREASE_REQ(const GORM_PB_INCREASE_REQ& from);
  GORM_PB_INCREASE_REQ(GORM_PB_INCREASE_REQ&& from) noexcept
    : GORM_PB_INCREASE_REQ() {
    *this = ::std::move(from);
  }

  inline GORM_PB_INCREASE_REQ& operator=(const GORM_PB_INCREASE_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline GORM_PB_INCREASE_REQ& operator=(GORM_PB_INCREASE_REQ&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GORM_PB_INCREASE_REQ& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GORM_PB_INCREASE_REQ* internal_default_instance() {
    return reinterpret_cast<const GORM_PB_INCREASE_REQ*>(
               &_GORM_PB_INCREASE_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(GORM_PB_INCREASE_REQ& a, GORM_PB_INCREASE_REQ& b) {
    a.Swap(&b);
  }
  inline void Swap(GORM_PB_INCREASE_REQ* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GORM_PB_INCREASE_REQ* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GORM_PB_INCREASE_REQ* New() const final {
    return CreateMaybeMessage<GORM_PB_INCREASE_REQ>(nullptr);
  }

  GORM_PB_INCREASE_REQ* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GORM_PB_INCREASE_REQ>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GORM_PB_INCREASE_REQ& from);
  void MergeFrom(const GORM_PB_INCREASE_REQ& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GORM_PB_INCREASE_REQ* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "gorm.GORM_PB_INCREASE_REQ";
  }
  protected:
  explicit GORM_PB_INCREASE_REQ(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gorm_5fpb_5fproto_2eproto);
    return ::descriptor_table_gorm_5fpb_5fproto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTablesFieldNumber = 2,
    kPlusColumnsFieldNumber = 3,
    kMinusColumnsFieldNumber = 4,
    kHeaderFieldNumber = 1,
  };
  // repeated .gorm.GORM_PB_TABLE Tables = 2;
  int tables_size() const;
  private:
  int _internal_tables_size() const;
  public:
  void clear_tables();
  ::gorm::GORM_PB_TABLE* mutable_tables(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >*
      mutable_tables();
  private:
  const ::gorm::GORM_PB_TABLE& _internal_tables(int index) const;
  ::gorm::GORM_PB_TABLE* _internal_add_tables();
  public:
  const ::gorm::GORM_PB_TABLE& tables(int index) const;
  ::gorm::GORM_PB_TABLE* add_tables();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >&
      tables() const;

  // string PlusColumns = 3;
  void clear_pluscolumns();
  const std::string& pluscolumns() const;
  void set_pluscolumns(const std::string& value);
  void set_pluscolumns(std::string&& value);
  void set_pluscolumns(const char* value);
  void set_pluscolumns(const char* value, size_t size);
  std::string* mutable_pluscolumns();
  std::string* release_pluscolumns();
  void set_allocated_pluscolumns(std::string* pluscolumns);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_pluscolumns();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_pluscolumns(
      std::string* pluscolumns);
  private:
  const std::string& _internal_pluscolumns() const;
  void _internal_set_pluscolumns(const std::string& value);
  std::string* _internal_mutable_pluscolumns();
  public:

  // string MinusColumns = 4;
  void clear_minuscolumns();
  const std::string& minuscolumns() const;
  void set_minuscolumns(const std::string& value);
  void set_minuscolumns(std::string&& value);
  void set_minuscolumns(const char* value);
  void set_minuscolumns(const char* value, size_t size);
  std::string* mutable_minuscolumns();
  std::string* release_minuscolumns();
  void set_allocated_minuscolumns(std::string* minuscolumns);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_minuscolumns();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_minuscolumns(
      std::string* minuscolumns);
  private:
  const std::string& _internal_minuscolumns() const;
  void _internal_set_minuscolumns(const std::string& value);
  std::string* _internal_mutable_minuscolumns();
  public:

  // .gorm.GORM_PB_REQ_HEADER Header = 1;
  bool has_header() const;
  private:
  bool _internal_has_header() const;
  public:
  void clear_header();
  const ::gorm::GORM_PB_REQ_HEADER& header() const;
  ::gorm::GORM_PB_REQ_HEADER* release_header();
  ::gorm::GORM_PB_REQ_HEADER* mutable_header();
  void set_allocated_header(::gorm::GORM_PB_REQ_HEADER* header);
  private:
  const ::gorm::GORM_PB_REQ_HEADER& _internal_header() const;
  ::gorm::GORM_PB_REQ_HEADER* _internal_mutable_header();
  public:
  void unsafe_arena_set_allocated_header(
      ::gorm::GORM_PB_REQ_HEADER* header);
  ::gorm::GORM_PB_REQ_HEADER* unsafe_arena_release_header();

  // @@protoc_insertion_point(class_scope:gorm.GORM_PB_INCREASE_REQ)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE > tables_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr pluscolumns_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr minuscolumns_;
  ::gorm::GORM_PB_REQ_HEADER* header_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gorm_5fpb_5fproto_2eproto;
};
// -------------------------------------------------------------------

class GORM_PB_INCREASE_RSP PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:gorm.GORM_PB_INCREASE_RSP) */ {
 public:
  inline GORM_PB_INCREASE_RSP() : GORM_PB_INCREASE_RSP(nullptr) {};
  virtual ~GORM_PB_INCREASE_RSP();

  GORM_PB_INCREASE_RSP(const GORM_PB_INCREASE_RSP& from);
  GORM_PB_INCREASE_RSP(GORM_PB_INCREASE_RSP&& from) noexcept
    : GORM_PB_INCREASE_RSP() {
    *this = ::std::move(from);
  }

  inline GORM_PB_INCREASE_RSP& operator=(const GORM_PB_INCREASE_RSP& from) {
    CopyFrom(from);
    return *this;
  }
  inline GORM_PB_INCREASE_RSP& operator=(GORM_PB_INCREASE_RSP&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GORM_PB_INCREASE_RSP& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GORM_PB_INCREASE_RSP* internal_default_instance() {
    return reinterpret_cast<const GORM_PB_INCREASE_RSP*>(
               &_GORM_PB_INCREASE_RSP_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(GORM_PB_INCREASE_RSP& a, GORM_PB_INCREASE_RSP& b) {
    a.Swap(&b);
  }
  inline void Swap(GORM_PB_INCREASE_RSP* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GORM_PB_INCREASE_RSP* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GORM_PB_INCREASE_RSP* New() const final {
    return CreateMaybeMessage<GORM_PB_INCREASE_RSP>(nullptr);
  }

  GORM_PB_INCREASE_RSP* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GORM_PB_INCREASE_RSP>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GORM_PB_INCREASE_RSP& from);
  void MergeFrom(const GORM_PB_INCREASE_RSP& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GORM_PB_INCREASE_RSP* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "gorm.GORM_PB_INCREASE_RSP";
  }
  protected:
  explicit GORM_PB_INCREASE_RSP(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gorm_5fpb_5fproto_2eproto);
    return ::descriptor_table_gorm_5fpb_5fproto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTablesFieldNumber = 2,
    kRetCodeFieldNumber = 1,
    kAffectedNumFieldNumber = 3,
  };
  // repeated .gorm.GORM_PB_TABLE Tables = 2;
  int tables_size() const;
  private:
  int _internal_tables_size() const;
  public:
  void clear_tables();
  ::gorm::GORM_PB_TABLE* mutable_tables(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >*
      mutable_tables();
  private:
  const ::gorm::GORM_PB_TABLE& _internal_tables(int index) const;
  ::gorm::GORM_PB_TABLE* _internal_add_tables();
  public:
  const ::gorm::GORM_PB_TABLE& tables(int index) const;
  ::gorm::GORM_PB_TABLE* add_tables();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >&
      tables() const;

  // .gorm.GORM_PB_Ret_Code RetCode = 1;
  bool has_retcode() const;
  private:
  bool _internal_has_retcode() const;
  public:
  void clear_retcode();
  const ::gorm::GORM_PB_Ret_Code& retcode() const;
  ::gorm::GORM_PB_Ret_Code* release_retcode();
  ::gorm::GORM_PB_Ret_Code* mutable_retcode();
  void set_allocated_retcode(::gorm::GORM_PB_Ret_Code* retcode);
  private:
  const ::gorm::GORM_PB_Ret_Code& _internal_retcode() const;
  ::gorm::GORM_PB_Ret_Code* _internal_mutable_retcode();
  public:
  void unsafe_arena_set_allocated_retcode(
      ::gorm::GORM_PB_Ret_Code* retcode);
  ::gorm::GORM_PB_Ret_Code* unsafe_arena_release_retcode();

  // sfixed32 AffectedNum = 3;
  void clear_affectednum();
  ::PROTOBUF_NAMESPACE_ID::int32 affectednum() const;
  void set_affectednum(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_affectednum() const;
  void _internal_set_affectednum(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:gorm.GORM_PB_INCREASE_RSP)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE > tables_;
  ::gorm::GORM_PB_Ret_Code* retcode_;
  ::PROTOBUF_NAMESPACE_ID::int32 affectednum_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gorm_5fpb_5fproto_2eproto;
};
// -------------------------------------------------------------------

class GORM_PB_DELETE_REQ PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:gorm.GORM_PB_DELETE_REQ) */ {
 public:
  inline GORM_PB_DELETE_REQ() : GORM_PB_DELETE_REQ(nullptr) {};
  virtual ~GORM_PB_DELETE_REQ();

  GORM_PB_DELETE_REQ(const GORM_PB_DELETE_REQ& from);
  GORM_PB_DELETE_REQ(GORM_PB_DELETE_REQ&& from) noexcept
    : GORM_PB_DELETE_REQ() {
    *this = ::std::move(from);
  }

  inline GORM_PB_DELETE_REQ& operator=(const GORM_PB_DELETE_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline GORM_PB_DELETE_REQ& operator=(GORM_PB_DELETE_REQ&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GORM_PB_DELETE_REQ& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GORM_PB_DELETE_REQ* internal_default_instance() {
    return reinterpret_cast<const GORM_PB_DELETE_REQ*>(
               &_GORM_PB_DELETE_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(GORM_PB_DELETE_REQ& a, GORM_PB_DELETE_REQ& b) {
    a.Swap(&b);
  }
  inline void Swap(GORM_PB_DELETE_REQ* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GORM_PB_DELETE_REQ* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GORM_PB_DELETE_REQ* New() const final {
    return CreateMaybeMessage<GORM_PB_DELETE_REQ>(nullptr);
  }

  GORM_PB_DELETE_REQ* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GORM_PB_DELETE_REQ>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GORM_PB_DELETE_REQ& from);
  void MergeFrom(const GORM_PB_DELETE_REQ& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GORM_PB_DELETE_REQ* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "gorm.GORM_PB_DELETE_REQ";
  }
  protected:
  explicit GORM_PB_DELETE_REQ(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gorm_5fpb_5fproto_2eproto);
    return ::descriptor_table_gorm_5fpb_5fproto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHeaderFieldNumber = 1,
    kTableFieldNumber = 2,
  };
  // .gorm.GORM_PB_REQ_HEADER Header = 1;
  bool has_header() const;
  private:
  bool _internal_has_header() const;
  public:
  void clear_header();
  const ::gorm::GORM_PB_REQ_HEADER& header() const;
  ::gorm::GORM_PB_REQ_HEADER* release_header();
  ::gorm::GORM_PB_REQ_HEADER* mutable_header();
  void set_allocated_header(::gorm::GORM_PB_REQ_HEADER* header);
  private:
  const ::gorm::GORM_PB_REQ_HEADER& _internal_header() const;
  ::gorm::GORM_PB_REQ_HEADER* _internal_mutable_header();
  public:
  void unsafe_arena_set_allocated_header(
      ::gorm::GORM_PB_REQ_HEADER* header);
  ::gorm::GORM_PB_REQ_HEADER* unsafe_arena_release_header();

  // .gorm.GORM_PB_TABLE Table = 2;
  bool has_table() const;
  private:
  bool _internal_has_table() const;
  public:
  void clear_table();
  const ::gorm::GORM_PB_TABLE& table() const;
  ::gorm::GORM_PB_TABLE* release_table();
  ::gorm::GORM_PB_TABLE* mutable_table();
  void set_allocated_table(::gorm::GORM_PB_TABLE* table);
  private:
  const ::gorm::GORM_PB_TABLE& _internal_table() const;
  ::gorm::GORM_PB_TABLE* _internal_mutable_table();
  public:
  void unsafe_arena_set_allocated_table(
      ::gorm::GORM_PB_TABLE* table);
  ::gorm::GORM_PB_TABLE* unsafe_arena_release_table();

  // @@protoc_insertion_point(class_scope:gorm.GORM_PB_DELETE_REQ)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::gorm::GORM_PB_REQ_HEADER* header_;
  ::gorm::GORM_PB_TABLE* table_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gorm_5fpb_5fproto_2eproto;
};
// -------------------------------------------------------------------

class GORM_PB_DELETE_RSP PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:gorm.GORM_PB_DELETE_RSP) */ {
 public:
  inline GORM_PB_DELETE_RSP() : GORM_PB_DELETE_RSP(nullptr) {};
  virtual ~GORM_PB_DELETE_RSP();

  GORM_PB_DELETE_RSP(const GORM_PB_DELETE_RSP& from);
  GORM_PB_DELETE_RSP(GORM_PB_DELETE_RSP&& from) noexcept
    : GORM_PB_DELETE_RSP() {
    *this = ::std::move(from);
  }

  inline GORM_PB_DELETE_RSP& operator=(const GORM_PB_DELETE_RSP& from) {
    CopyFrom(from);
    return *this;
  }
  inline GORM_PB_DELETE_RSP& operator=(GORM_PB_DELETE_RSP&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GORM_PB_DELETE_RSP& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GORM_PB_DELETE_RSP* internal_default_instance() {
    return reinterpret_cast<const GORM_PB_DELETE_RSP*>(
               &_GORM_PB_DELETE_RSP_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(GORM_PB_DELETE_RSP& a, GORM_PB_DELETE_RSP& b) {
    a.Swap(&b);
  }
  inline void Swap(GORM_PB_DELETE_RSP* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GORM_PB_DELETE_RSP* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GORM_PB_DELETE_RSP* New() const final {
    return CreateMaybeMessage<GORM_PB_DELETE_RSP>(nullptr);
  }

  GORM_PB_DELETE_RSP* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GORM_PB_DELETE_RSP>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GORM_PB_DELETE_RSP& from);
  void MergeFrom(const GORM_PB_DELETE_RSP& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GORM_PB_DELETE_RSP* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "gorm.GORM_PB_DELETE_RSP";
  }
  protected:
  explicit GORM_PB_DELETE_RSP(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gorm_5fpb_5fproto_2eproto);
    return ::descriptor_table_gorm_5fpb_5fproto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRetCodeFieldNumber = 1,
    kAffectedNumFieldNumber = 2,
  };
  // .gorm.GORM_PB_Ret_Code RetCode = 1;
  bool has_retcode() const;
  private:
  bool _internal_has_retcode() const;
  public:
  void clear_retcode();
  const ::gorm::GORM_PB_Ret_Code& retcode() const;
  ::gorm::GORM_PB_Ret_Code* release_retcode();
  ::gorm::GORM_PB_Ret_Code* mutable_retcode();
  void set_allocated_retcode(::gorm::GORM_PB_Ret_Code* retcode);
  private:
  const ::gorm::GORM_PB_Ret_Code& _internal_retcode() const;
  ::gorm::GORM_PB_Ret_Code* _internal_mutable_retcode();
  public:
  void unsafe_arena_set_allocated_retcode(
      ::gorm::GORM_PB_Ret_Code* retcode);
  ::gorm::GORM_PB_Ret_Code* unsafe_arena_release_retcode();

  // sfixed32 AffectedNum = 2;
  void clear_affectednum();
  ::PROTOBUF_NAMESPACE_ID::int32 affectednum() const;
  void set_affectednum(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_affectednum() const;
  void _internal_set_affectednum(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:gorm.GORM_PB_DELETE_RSP)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::gorm::GORM_PB_Ret_Code* retcode_;
  ::PROTOBUF_NAMESPACE_ID::int32 affectednum_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gorm_5fpb_5fproto_2eproto;
};
// -------------------------------------------------------------------

class GORM_PB_GET_BY_PARTKEY_REQ PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:gorm.GORM_PB_GET_BY_PARTKEY_REQ) */ {
 public:
  inline GORM_PB_GET_BY_PARTKEY_REQ() : GORM_PB_GET_BY_PARTKEY_REQ(nullptr) {};
  virtual ~GORM_PB_GET_BY_PARTKEY_REQ();

  GORM_PB_GET_BY_PARTKEY_REQ(const GORM_PB_GET_BY_PARTKEY_REQ& from);
  GORM_PB_GET_BY_PARTKEY_REQ(GORM_PB_GET_BY_PARTKEY_REQ&& from) noexcept
    : GORM_PB_GET_BY_PARTKEY_REQ() {
    *this = ::std::move(from);
  }

  inline GORM_PB_GET_BY_PARTKEY_REQ& operator=(const GORM_PB_GET_BY_PARTKEY_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline GORM_PB_GET_BY_PARTKEY_REQ& operator=(GORM_PB_GET_BY_PARTKEY_REQ&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GORM_PB_GET_BY_PARTKEY_REQ& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GORM_PB_GET_BY_PARTKEY_REQ* internal_default_instance() {
    return reinterpret_cast<const GORM_PB_GET_BY_PARTKEY_REQ*>(
               &_GORM_PB_GET_BY_PARTKEY_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(GORM_PB_GET_BY_PARTKEY_REQ& a, GORM_PB_GET_BY_PARTKEY_REQ& b) {
    a.Swap(&b);
  }
  inline void Swap(GORM_PB_GET_BY_PARTKEY_REQ* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GORM_PB_GET_BY_PARTKEY_REQ* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GORM_PB_GET_BY_PARTKEY_REQ* New() const final {
    return CreateMaybeMessage<GORM_PB_GET_BY_PARTKEY_REQ>(nullptr);
  }

  GORM_PB_GET_BY_PARTKEY_REQ* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GORM_PB_GET_BY_PARTKEY_REQ>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GORM_PB_GET_BY_PARTKEY_REQ& from);
  void MergeFrom(const GORM_PB_GET_BY_PARTKEY_REQ& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GORM_PB_GET_BY_PARTKEY_REQ* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "gorm.GORM_PB_GET_BY_PARTKEY_REQ";
  }
  protected:
  explicit GORM_PB_GET_BY_PARTKEY_REQ(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gorm_5fpb_5fproto_2eproto);
    return ::descriptor_table_gorm_5fpb_5fproto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTablesFieldNumber = 2,
    kHeaderFieldNumber = 1,
  };
  // repeated .gorm.GORM_PB_TABLE Tables = 2;
  int tables_size() const;
  private:
  int _internal_tables_size() const;
  public:
  void clear_tables();
  ::gorm::GORM_PB_TABLE* mutable_tables(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >*
      mutable_tables();
  private:
  const ::gorm::GORM_PB_TABLE& _internal_tables(int index) const;
  ::gorm::GORM_PB_TABLE* _internal_add_tables();
  public:
  const ::gorm::GORM_PB_TABLE& tables(int index) const;
  ::gorm::GORM_PB_TABLE* add_tables();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >&
      tables() const;

  // .gorm.GORM_PB_REQ_HEADER Header = 1;
  bool has_header() const;
  private:
  bool _internal_has_header() const;
  public:
  void clear_header();
  const ::gorm::GORM_PB_REQ_HEADER& header() const;
  ::gorm::GORM_PB_REQ_HEADER* release_header();
  ::gorm::GORM_PB_REQ_HEADER* mutable_header();
  void set_allocated_header(::gorm::GORM_PB_REQ_HEADER* header);
  private:
  const ::gorm::GORM_PB_REQ_HEADER& _internal_header() const;
  ::gorm::GORM_PB_REQ_HEADER* _internal_mutable_header();
  public:
  void unsafe_arena_set_allocated_header(
      ::gorm::GORM_PB_REQ_HEADER* header);
  ::gorm::GORM_PB_REQ_HEADER* unsafe_arena_release_header();

  // @@protoc_insertion_point(class_scope:gorm.GORM_PB_GET_BY_PARTKEY_REQ)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE > tables_;
  ::gorm::GORM_PB_REQ_HEADER* header_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gorm_5fpb_5fproto_2eproto;
};
// -------------------------------------------------------------------

class GORM_PB_GET_BY_PARTKEY_RSP PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:gorm.GORM_PB_GET_BY_PARTKEY_RSP) */ {
 public:
  inline GORM_PB_GET_BY_PARTKEY_RSP() : GORM_PB_GET_BY_PARTKEY_RSP(nullptr) {};
  virtual ~GORM_PB_GET_BY_PARTKEY_RSP();

  GORM_PB_GET_BY_PARTKEY_RSP(const GORM_PB_GET_BY_PARTKEY_RSP& from);
  GORM_PB_GET_BY_PARTKEY_RSP(GORM_PB_GET_BY_PARTKEY_RSP&& from) noexcept
    : GORM_PB_GET_BY_PARTKEY_RSP() {
    *this = ::std::move(from);
  }

  inline GORM_PB_GET_BY_PARTKEY_RSP& operator=(const GORM_PB_GET_BY_PARTKEY_RSP& from) {
    CopyFrom(from);
    return *this;
  }
  inline GORM_PB_GET_BY_PARTKEY_RSP& operator=(GORM_PB_GET_BY_PARTKEY_RSP&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GORM_PB_GET_BY_PARTKEY_RSP& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GORM_PB_GET_BY_PARTKEY_RSP* internal_default_instance() {
    return reinterpret_cast<const GORM_PB_GET_BY_PARTKEY_RSP*>(
               &_GORM_PB_GET_BY_PARTKEY_RSP_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(GORM_PB_GET_BY_PARTKEY_RSP& a, GORM_PB_GET_BY_PARTKEY_RSP& b) {
    a.Swap(&b);
  }
  inline void Swap(GORM_PB_GET_BY_PARTKEY_RSP* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GORM_PB_GET_BY_PARTKEY_RSP* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GORM_PB_GET_BY_PARTKEY_RSP* New() const final {
    return CreateMaybeMessage<GORM_PB_GET_BY_PARTKEY_RSP>(nullptr);
  }

  GORM_PB_GET_BY_PARTKEY_RSP* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GORM_PB_GET_BY_PARTKEY_RSP>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GORM_PB_GET_BY_PARTKEY_RSP& from);
  void MergeFrom(const GORM_PB_GET_BY_PARTKEY_RSP& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GORM_PB_GET_BY_PARTKEY_RSP* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "gorm.GORM_PB_GET_BY_PARTKEY_RSP";
  }
  protected:
  explicit GORM_PB_GET_BY_PARTKEY_RSP(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gorm_5fpb_5fproto_2eproto);
    return ::descriptor_table_gorm_5fpb_5fproto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTablesFieldNumber = 2,
    kRetCodeFieldNumber = 1,
  };
  // repeated .gorm.GORM_PB_TABLE Tables = 2;
  int tables_size() const;
  private:
  int _internal_tables_size() const;
  public:
  void clear_tables();
  ::gorm::GORM_PB_TABLE* mutable_tables(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >*
      mutable_tables();
  private:
  const ::gorm::GORM_PB_TABLE& _internal_tables(int index) const;
  ::gorm::GORM_PB_TABLE* _internal_add_tables();
  public:
  const ::gorm::GORM_PB_TABLE& tables(int index) const;
  ::gorm::GORM_PB_TABLE* add_tables();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >&
      tables() const;

  // .gorm.GORM_PB_Ret_Code RetCode = 1;
  bool has_retcode() const;
  private:
  bool _internal_has_retcode() const;
  public:
  void clear_retcode();
  const ::gorm::GORM_PB_Ret_Code& retcode() const;
  ::gorm::GORM_PB_Ret_Code* release_retcode();
  ::gorm::GORM_PB_Ret_Code* mutable_retcode();
  void set_allocated_retcode(::gorm::GORM_PB_Ret_Code* retcode);
  private:
  const ::gorm::GORM_PB_Ret_Code& _internal_retcode() const;
  ::gorm::GORM_PB_Ret_Code* _internal_mutable_retcode();
  public:
  void unsafe_arena_set_allocated_retcode(
      ::gorm::GORM_PB_Ret_Code* retcode);
  ::gorm::GORM_PB_Ret_Code* unsafe_arena_release_retcode();

  // @@protoc_insertion_point(class_scope:gorm.GORM_PB_GET_BY_PARTKEY_RSP)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE > tables_;
  ::gorm::GORM_PB_Ret_Code* retcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gorm_5fpb_5fproto_2eproto;
};
// -------------------------------------------------------------------

class GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ) */ {
 public:
  inline GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ() : GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ(nullptr) {};
  virtual ~GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ();

  GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ(const GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ& from);
  GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ(GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ&& from) noexcept
    : GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ() {
    *this = ::std::move(from);
  }

  inline GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ& operator=(const GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ& from) {
    CopyFrom(from);
    return *this;
  }
  inline GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ& operator=(GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ* internal_default_instance() {
    return reinterpret_cast<const GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ*>(
               &_GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ& a, GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ& b) {
    a.Swap(&b);
  }
  inline void Swap(GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ* New() const final {
    return CreateMaybeMessage<GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ>(nullptr);
  }

  GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ& from);
  void MergeFrom(const GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ";
  }
  protected:
  explicit GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gorm_5fpb_5fproto_2eproto);
    return ::descriptor_table_gorm_5fpb_5fproto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTablesFieldNumber = 2,
    kHeaderFieldNumber = 1,
  };
  // repeated .gorm.GORM_PB_TABLE Tables = 2;
  int tables_size() const;
  private:
  int _internal_tables_size() const;
  public:
  void clear_tables();
  ::gorm::GORM_PB_TABLE* mutable_tables(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >*
      mutable_tables();
  private:
  const ::gorm::GORM_PB_TABLE& _internal_tables(int index) const;
  ::gorm::GORM_PB_TABLE* _internal_add_tables();
  public:
  const ::gorm::GORM_PB_TABLE& tables(int index) const;
  ::gorm::GORM_PB_TABLE* add_tables();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >&
      tables() const;

  // .gorm.GORM_PB_REQ_HEADER Header = 1;
  bool has_header() const;
  private:
  bool _internal_has_header() const;
  public:
  void clear_header();
  const ::gorm::GORM_PB_REQ_HEADER& header() const;
  ::gorm::GORM_PB_REQ_HEADER* release_header();
  ::gorm::GORM_PB_REQ_HEADER* mutable_header();
  void set_allocated_header(::gorm::GORM_PB_REQ_HEADER* header);
  private:
  const ::gorm::GORM_PB_REQ_HEADER& _internal_header() const;
  ::gorm::GORM_PB_REQ_HEADER* _internal_mutable_header();
  public:
  void unsafe_arena_set_allocated_header(
      ::gorm::GORM_PB_REQ_HEADER* header);
  ::gorm::GORM_PB_REQ_HEADER* unsafe_arena_release_header();

  // @@protoc_insertion_point(class_scope:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE > tables_;
  ::gorm::GORM_PB_REQ_HEADER* header_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gorm_5fpb_5fproto_2eproto;
};
// -------------------------------------------------------------------

class GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP) */ {
 public:
  inline GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP() : GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP(nullptr) {};
  virtual ~GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP();

  GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP(const GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP& from);
  GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP(GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP&& from) noexcept
    : GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP() {
    *this = ::std::move(from);
  }

  inline GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP& operator=(const GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP& from) {
    CopyFrom(from);
    return *this;
  }
  inline GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP& operator=(GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP* internal_default_instance() {
    return reinterpret_cast<const GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP*>(
               &_GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP& a, GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP& b) {
    a.Swap(&b);
  }
  inline void Swap(GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP* New() const final {
    return CreateMaybeMessage<GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP>(nullptr);
  }

  GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP& from);
  void MergeFrom(const GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP";
  }
  protected:
  explicit GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gorm_5fpb_5fproto_2eproto);
    return ::descriptor_table_gorm_5fpb_5fproto_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTablesFieldNumber = 2,
    kRetCodeFieldNumber = 1,
  };
  // repeated .gorm.GORM_PB_TABLE Tables = 2;
  int tables_size() const;
  private:
  int _internal_tables_size() const;
  public:
  void clear_tables();
  ::gorm::GORM_PB_TABLE* mutable_tables(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >*
      mutable_tables();
  private:
  const ::gorm::GORM_PB_TABLE& _internal_tables(int index) const;
  ::gorm::GORM_PB_TABLE* _internal_add_tables();
  public:
  const ::gorm::GORM_PB_TABLE& tables(int index) const;
  ::gorm::GORM_PB_TABLE* add_tables();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >&
      tables() const;

  // .gorm.GORM_PB_Ret_Code RetCode = 1;
  bool has_retcode() const;
  private:
  bool _internal_has_retcode() const;
  public:
  void clear_retcode();
  const ::gorm::GORM_PB_Ret_Code& retcode() const;
  ::gorm::GORM_PB_Ret_Code* release_retcode();
  ::gorm::GORM_PB_Ret_Code* mutable_retcode();
  void set_allocated_retcode(::gorm::GORM_PB_Ret_Code* retcode);
  private:
  const ::gorm::GORM_PB_Ret_Code& _internal_retcode() const;
  ::gorm::GORM_PB_Ret_Code* _internal_mutable_retcode();
  public:
  void unsafe_arena_set_allocated_retcode(
      ::gorm::GORM_PB_Ret_Code* retcode);
  ::gorm::GORM_PB_Ret_Code* unsafe_arena_release_retcode();

  // @@protoc_insertion_point(class_scope:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE > tables_;
  ::gorm::GORM_PB_Ret_Code* retcode_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gorm_5fpb_5fproto_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE

// sfixed32 Column = 1;
inline void GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE::clear_column() {
  column_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE::_internal_column() const {
  return column_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE::column() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_SPLIT_INFO.GORM_COLUMN_VALUE.Column)
  return _internal_column();
}
inline void GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE::_internal_set_column(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  column_ = value;
}
inline void GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE::set_column(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_column(value);
  // @@protoc_insertion_point(field_set:gorm.GORM_PB_SPLIT_INFO.GORM_COLUMN_VALUE.Column)
}

// bytes Value = 2;
inline void GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE::clear_value() {
  value_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE::value() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_SPLIT_INFO.GORM_COLUMN_VALUE.Value)
  return _internal_value();
}
inline void GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE::set_value(const std::string& value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:gorm.GORM_PB_SPLIT_INFO.GORM_COLUMN_VALUE.Value)
}
inline std::string* GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE::mutable_value() {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_SPLIT_INFO.GORM_COLUMN_VALUE.Value)
  return _internal_mutable_value();
}
inline const std::string& GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE::_internal_value() const {
  return value_.Get();
}
inline void GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE::_internal_set_value(const std::string& value) {
  
  value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE::set_value(std::string&& value) {
  
  value_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:gorm.GORM_PB_SPLIT_INFO.GORM_COLUMN_VALUE.Value)
}
inline void GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE::set_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:gorm.GORM_PB_SPLIT_INFO.GORM_COLUMN_VALUE.Value)
}
inline void GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE::set_value(const void* value,
    size_t size) {
  
  value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:gorm.GORM_PB_SPLIT_INFO.GORM_COLUMN_VALUE.Value)
}
inline std::string* GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE::_internal_mutable_value() {
  
  return value_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE::release_value() {
  // @@protoc_insertion_point(field_release:gorm.GORM_PB_SPLIT_INFO.GORM_COLUMN_VALUE.Value)
  return value_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE::set_allocated_value(std::string* value) {
  if (value != nullptr) {
    
  } else {
    
  }
  value_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:gorm.GORM_PB_SPLIT_INFO.GORM_COLUMN_VALUE.Value)
}
inline std::string* GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE::unsafe_arena_release_value() {
  // @@protoc_insertion_point(field_unsafe_arena_release:gorm.GORM_PB_SPLIT_INFO.GORM_COLUMN_VALUE.Value)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return value_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE::unsafe_arena_set_allocated_value(
    std::string* value) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (value != nullptr) {
    
  } else {
    
  }
  value_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      value, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gorm.GORM_PB_SPLIT_INFO.GORM_COLUMN_VALUE.Value)
}

// -------------------------------------------------------------------

// GORM_PB_SPLIT_INFO

// repeated .gorm.GORM_PB_SPLIT_INFO.GORM_COLUMN_VALUE SplitInfo = 1;
inline int GORM_PB_SPLIT_INFO::_internal_splitinfo_size() const {
  return splitinfo_.size();
}
inline int GORM_PB_SPLIT_INFO::splitinfo_size() const {
  return _internal_splitinfo_size();
}
inline void GORM_PB_SPLIT_INFO::clear_splitinfo() {
  splitinfo_.Clear();
}
inline ::gorm::GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE* GORM_PB_SPLIT_INFO::mutable_splitinfo(int index) {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_SPLIT_INFO.SplitInfo)
  return splitinfo_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE >*
GORM_PB_SPLIT_INFO::mutable_splitinfo() {
  // @@protoc_insertion_point(field_mutable_list:gorm.GORM_PB_SPLIT_INFO.SplitInfo)
  return &splitinfo_;
}
inline const ::gorm::GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE& GORM_PB_SPLIT_INFO::_internal_splitinfo(int index) const {
  return splitinfo_.Get(index);
}
inline const ::gorm::GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE& GORM_PB_SPLIT_INFO::splitinfo(int index) const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_SPLIT_INFO.SplitInfo)
  return _internal_splitinfo(index);
}
inline ::gorm::GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE* GORM_PB_SPLIT_INFO::_internal_add_splitinfo() {
  return splitinfo_.Add();
}
inline ::gorm::GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE* GORM_PB_SPLIT_INFO::add_splitinfo() {
  // @@protoc_insertion_point(field_add:gorm.GORM_PB_SPLIT_INFO.SplitInfo)
  return _internal_add_splitinfo();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE >&
GORM_PB_SPLIT_INFO::splitinfo() const {
  // @@protoc_insertion_point(field_list:gorm.GORM_PB_SPLIT_INFO.SplitInfo)
  return splitinfo_;
}

// -------------------------------------------------------------------

// GORM_PB_Ret_Code

// sfixed32 Code = 1;
inline void GORM_PB_Ret_Code::clear_code() {
  code_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GORM_PB_Ret_Code::_internal_code() const {
  return code_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GORM_PB_Ret_Code::code() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_Ret_Code.Code)
  return _internal_code();
}
inline void GORM_PB_Ret_Code::_internal_set_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  code_ = value;
}
inline void GORM_PB_Ret_Code::set_code(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_code(value);
  // @@protoc_insertion_point(field_set:gorm.GORM_PB_Ret_Code.Code)
}

// sfixed32 DBCode = 2;
inline void GORM_PB_Ret_Code::clear_dbcode() {
  dbcode_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GORM_PB_Ret_Code::_internal_dbcode() const {
  return dbcode_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GORM_PB_Ret_Code::dbcode() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_Ret_Code.DBCode)
  return _internal_dbcode();
}
inline void GORM_PB_Ret_Code::_internal_set_dbcode(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  dbcode_ = value;
}
inline void GORM_PB_Ret_Code::set_dbcode(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_dbcode(value);
  // @@protoc_insertion_point(field_set:gorm.GORM_PB_Ret_Code.DBCode)
}

// string DBErrInfo = 3;
inline void GORM_PB_Ret_Code::clear_dberrinfo() {
  dberrinfo_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& GORM_PB_Ret_Code::dberrinfo() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_Ret_Code.DBErrInfo)
  return _internal_dberrinfo();
}
inline void GORM_PB_Ret_Code::set_dberrinfo(const std::string& value) {
  _internal_set_dberrinfo(value);
  // @@protoc_insertion_point(field_set:gorm.GORM_PB_Ret_Code.DBErrInfo)
}
inline std::string* GORM_PB_Ret_Code::mutable_dberrinfo() {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_Ret_Code.DBErrInfo)
  return _internal_mutable_dberrinfo();
}
inline const std::string& GORM_PB_Ret_Code::_internal_dberrinfo() const {
  return dberrinfo_.Get();
}
inline void GORM_PB_Ret_Code::_internal_set_dberrinfo(const std::string& value) {
  
  dberrinfo_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void GORM_PB_Ret_Code::set_dberrinfo(std::string&& value) {
  
  dberrinfo_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:gorm.GORM_PB_Ret_Code.DBErrInfo)
}
inline void GORM_PB_Ret_Code::set_dberrinfo(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  dberrinfo_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:gorm.GORM_PB_Ret_Code.DBErrInfo)
}
inline void GORM_PB_Ret_Code::set_dberrinfo(const char* value,
    size_t size) {
  
  dberrinfo_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:gorm.GORM_PB_Ret_Code.DBErrInfo)
}
inline std::string* GORM_PB_Ret_Code::_internal_mutable_dberrinfo() {
  
  return dberrinfo_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* GORM_PB_Ret_Code::release_dberrinfo() {
  // @@protoc_insertion_point(field_release:gorm.GORM_PB_Ret_Code.DBErrInfo)
  return dberrinfo_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GORM_PB_Ret_Code::set_allocated_dberrinfo(std::string* dberrinfo) {
  if (dberrinfo != nullptr) {
    
  } else {
    
  }
  dberrinfo_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), dberrinfo,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:gorm.GORM_PB_Ret_Code.DBErrInfo)
}
inline std::string* GORM_PB_Ret_Code::unsafe_arena_release_dberrinfo() {
  // @@protoc_insertion_point(field_unsafe_arena_release:gorm.GORM_PB_Ret_Code.DBErrInfo)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return dberrinfo_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void GORM_PB_Ret_Code::unsafe_arena_set_allocated_dberrinfo(
    std::string* dberrinfo) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (dberrinfo != nullptr) {
    
  } else {
    
  }
  dberrinfo_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      dberrinfo, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gorm.GORM_PB_Ret_Code.DBErrInfo)
}

// sfixed32 SucessNum = 4;
inline void GORM_PB_Ret_Code::clear_sucessnum() {
  sucessnum_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GORM_PB_Ret_Code::_internal_sucessnum() const {
  return sucessnum_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GORM_PB_Ret_Code::sucessnum() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_Ret_Code.SucessNum)
  return _internal_sucessnum();
}
inline void GORM_PB_Ret_Code::_internal_set_sucessnum(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  sucessnum_ = value;
}
inline void GORM_PB_Ret_Code::set_sucessnum(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_sucessnum(value);
  // @@protoc_insertion_point(field_set:gorm.GORM_PB_Ret_Code.SucessNum)
}

// sfixed32 TotalNum = 5;
inline void GORM_PB_Ret_Code::clear_totalnum() {
  totalnum_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GORM_PB_Ret_Code::_internal_totalnum() const {
  return totalnum_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GORM_PB_Ret_Code::totalnum() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_Ret_Code.TotalNum)
  return _internal_totalnum();
}
inline void GORM_PB_Ret_Code::_internal_set_totalnum(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  totalnum_ = value;
}
inline void GORM_PB_Ret_Code::set_totalnum(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_totalnum(value);
  // @@protoc_insertion_point(field_set:gorm.GORM_PB_Ret_Code.TotalNum)
}

// -------------------------------------------------------------------

// GORM_PB_RELOAD_TABLE_REQ

// .gorm.GORM_PB_REQ_HEADER Header = 1;
inline bool GORM_PB_RELOAD_TABLE_REQ::_internal_has_header() const {
  return this != internal_default_instance() && header_ != nullptr;
}
inline bool GORM_PB_RELOAD_TABLE_REQ::has_header() const {
  return _internal_has_header();
}
inline void GORM_PB_RELOAD_TABLE_REQ::clear_header() {
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
}
inline const ::gorm::GORM_PB_REQ_HEADER& GORM_PB_RELOAD_TABLE_REQ::_internal_header() const {
  const ::gorm::GORM_PB_REQ_HEADER* p = header_;
  return p != nullptr ? *p : *reinterpret_cast<const ::gorm::GORM_PB_REQ_HEADER*>(
      &::gorm::_GORM_PB_REQ_HEADER_default_instance_);
}
inline const ::gorm::GORM_PB_REQ_HEADER& GORM_PB_RELOAD_TABLE_REQ::header() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_RELOAD_TABLE_REQ.Header)
  return _internal_header();
}
inline void GORM_PB_RELOAD_TABLE_REQ::unsafe_arena_set_allocated_header(
    ::gorm::GORM_PB_REQ_HEADER* header) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(header_);
  }
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gorm.GORM_PB_RELOAD_TABLE_REQ.Header)
}
inline ::gorm::GORM_PB_REQ_HEADER* GORM_PB_RELOAD_TABLE_REQ::release_header() {
  auto temp = unsafe_arena_release_header();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::gorm::GORM_PB_REQ_HEADER* GORM_PB_RELOAD_TABLE_REQ::unsafe_arena_release_header() {
  // @@protoc_insertion_point(field_release:gorm.GORM_PB_RELOAD_TABLE_REQ.Header)
  
  ::gorm::GORM_PB_REQ_HEADER* temp = header_;
  header_ = nullptr;
  return temp;
}
inline ::gorm::GORM_PB_REQ_HEADER* GORM_PB_RELOAD_TABLE_REQ::_internal_mutable_header() {
  
  if (header_ == nullptr) {
    auto* p = CreateMaybeMessage<::gorm::GORM_PB_REQ_HEADER>(GetArena());
    header_ = p;
  }
  return header_;
}
inline ::gorm::GORM_PB_REQ_HEADER* GORM_PB_RELOAD_TABLE_REQ::mutable_header() {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_RELOAD_TABLE_REQ.Header)
  return _internal_mutable_header();
}
inline void GORM_PB_RELOAD_TABLE_REQ::set_allocated_header(::gorm::GORM_PB_REQ_HEADER* header) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete header_;
  }
  if (header) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(header);
    if (message_arena != submessage_arena) {
      header = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:gorm.GORM_PB_RELOAD_TABLE_REQ.Header)
}

// fixed64 TableVersion = 2;
inline void GORM_PB_RELOAD_TABLE_REQ::clear_tableversion() {
  tableversion_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GORM_PB_RELOAD_TABLE_REQ::_internal_tableversion() const {
  return tableversion_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GORM_PB_RELOAD_TABLE_REQ::tableversion() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_RELOAD_TABLE_REQ.TableVersion)
  return _internal_tableversion();
}
inline void GORM_PB_RELOAD_TABLE_REQ::_internal_set_tableversion(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  tableversion_ = value;
}
inline void GORM_PB_RELOAD_TABLE_REQ::set_tableversion(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_tableversion(value);
  // @@protoc_insertion_point(field_set:gorm.GORM_PB_RELOAD_TABLE_REQ.TableVersion)
}

// -------------------------------------------------------------------

// GORM_PB_RELOAD_TABLE_RSP

// .gorm.GORM_PB_Ret_Code RetCode = 1;
inline bool GORM_PB_RELOAD_TABLE_RSP::_internal_has_retcode() const {
  return this != internal_default_instance() && retcode_ != nullptr;
}
inline bool GORM_PB_RELOAD_TABLE_RSP::has_retcode() const {
  return _internal_has_retcode();
}
inline void GORM_PB_RELOAD_TABLE_RSP::clear_retcode() {
  if (GetArena() == nullptr && retcode_ != nullptr) {
    delete retcode_;
  }
  retcode_ = nullptr;
}
inline const ::gorm::GORM_PB_Ret_Code& GORM_PB_RELOAD_TABLE_RSP::_internal_retcode() const {
  const ::gorm::GORM_PB_Ret_Code* p = retcode_;
  return p != nullptr ? *p : *reinterpret_cast<const ::gorm::GORM_PB_Ret_Code*>(
      &::gorm::_GORM_PB_Ret_Code_default_instance_);
}
inline const ::gorm::GORM_PB_Ret_Code& GORM_PB_RELOAD_TABLE_RSP::retcode() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_RELOAD_TABLE_RSP.RetCode)
  return _internal_retcode();
}
inline void GORM_PB_RELOAD_TABLE_RSP::unsafe_arena_set_allocated_retcode(
    ::gorm::GORM_PB_Ret_Code* retcode) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(retcode_);
  }
  retcode_ = retcode;
  if (retcode) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gorm.GORM_PB_RELOAD_TABLE_RSP.RetCode)
}
inline ::gorm::GORM_PB_Ret_Code* GORM_PB_RELOAD_TABLE_RSP::release_retcode() {
  auto temp = unsafe_arena_release_retcode();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::gorm::GORM_PB_Ret_Code* GORM_PB_RELOAD_TABLE_RSP::unsafe_arena_release_retcode() {
  // @@protoc_insertion_point(field_release:gorm.GORM_PB_RELOAD_TABLE_RSP.RetCode)
  
  ::gorm::GORM_PB_Ret_Code* temp = retcode_;
  retcode_ = nullptr;
  return temp;
}
inline ::gorm::GORM_PB_Ret_Code* GORM_PB_RELOAD_TABLE_RSP::_internal_mutable_retcode() {
  
  if (retcode_ == nullptr) {
    auto* p = CreateMaybeMessage<::gorm::GORM_PB_Ret_Code>(GetArena());
    retcode_ = p;
  }
  return retcode_;
}
inline ::gorm::GORM_PB_Ret_Code* GORM_PB_RELOAD_TABLE_RSP::mutable_retcode() {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_RELOAD_TABLE_RSP.RetCode)
  return _internal_mutable_retcode();
}
inline void GORM_PB_RELOAD_TABLE_RSP::set_allocated_retcode(::gorm::GORM_PB_Ret_Code* retcode) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete retcode_;
  }
  if (retcode) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(retcode);
    if (message_arena != submessage_arena) {
      retcode = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, retcode, submessage_arena);
    }
    
  } else {
    
  }
  retcode_ = retcode;
  // @@protoc_insertion_point(field_set_allocated:gorm.GORM_PB_RELOAD_TABLE_RSP.RetCode)
}

// -------------------------------------------------------------------

// GORM_PB_REQ_HEADER

// sfixed32 TableId = 1;
inline void GORM_PB_REQ_HEADER::clear_tableid() {
  tableid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GORM_PB_REQ_HEADER::_internal_tableid() const {
  return tableid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GORM_PB_REQ_HEADER::tableid() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_REQ_HEADER.TableId)
  return _internal_tableid();
}
inline void GORM_PB_REQ_HEADER::_internal_set_tableid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  tableid_ = value;
}
inline void GORM_PB_REQ_HEADER::set_tableid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_tableid(value);
  // @@protoc_insertion_point(field_set:gorm.GORM_PB_REQ_HEADER.TableId)
}

// sfixed32 BusinessID = 2;
inline void GORM_PB_REQ_HEADER::clear_businessid() {
  businessid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GORM_PB_REQ_HEADER::_internal_businessid() const {
  return businessid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GORM_PB_REQ_HEADER::businessid() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_REQ_HEADER.BusinessID)
  return _internal_businessid();
}
inline void GORM_PB_REQ_HEADER::_internal_set_businessid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  businessid_ = value;
}
inline void GORM_PB_REQ_HEADER::set_businessid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_businessid(value);
  // @@protoc_insertion_point(field_set:gorm.GORM_PB_REQ_HEADER.BusinessID)
}

// sfixed32 VerPolice = 3;
inline void GORM_PB_REQ_HEADER::clear_verpolice() {
  verpolice_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GORM_PB_REQ_HEADER::_internal_verpolice() const {
  return verpolice_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GORM_PB_REQ_HEADER::verpolice() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_REQ_HEADER.VerPolice)
  return _internal_verpolice();
}
inline void GORM_PB_REQ_HEADER::_internal_set_verpolice(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  verpolice_ = value;
}
inline void GORM_PB_REQ_HEADER::set_verpolice(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_verpolice(value);
  // @@protoc_insertion_point(field_set:gorm.GORM_PB_REQ_HEADER.VerPolice)
}

// fixed32 ReqFlag = 4;
inline void GORM_PB_REQ_HEADER::clear_reqflag() {
  reqflag_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GORM_PB_REQ_HEADER::_internal_reqflag() const {
  return reqflag_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GORM_PB_REQ_HEADER::reqflag() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_REQ_HEADER.ReqFlag)
  return _internal_reqflag();
}
inline void GORM_PB_REQ_HEADER::_internal_set_reqflag(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  reqflag_ = value;
}
inline void GORM_PB_REQ_HEADER::set_reqflag(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_reqflag(value);
  // @@protoc_insertion_point(field_set:gorm.GORM_PB_REQ_HEADER.ReqFlag)
}

// bytes FieldMode = 5;
inline void GORM_PB_REQ_HEADER::clear_fieldmode() {
  fieldmode_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& GORM_PB_REQ_HEADER::fieldmode() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_REQ_HEADER.FieldMode)
  return _internal_fieldmode();
}
inline void GORM_PB_REQ_HEADER::set_fieldmode(const std::string& value) {
  _internal_set_fieldmode(value);
  // @@protoc_insertion_point(field_set:gorm.GORM_PB_REQ_HEADER.FieldMode)
}
inline std::string* GORM_PB_REQ_HEADER::mutable_fieldmode() {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_REQ_HEADER.FieldMode)
  return _internal_mutable_fieldmode();
}
inline const std::string& GORM_PB_REQ_HEADER::_internal_fieldmode() const {
  return fieldmode_.Get();
}
inline void GORM_PB_REQ_HEADER::_internal_set_fieldmode(const std::string& value) {
  
  fieldmode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void GORM_PB_REQ_HEADER::set_fieldmode(std::string&& value) {
  
  fieldmode_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:gorm.GORM_PB_REQ_HEADER.FieldMode)
}
inline void GORM_PB_REQ_HEADER::set_fieldmode(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  fieldmode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:gorm.GORM_PB_REQ_HEADER.FieldMode)
}
inline void GORM_PB_REQ_HEADER::set_fieldmode(const void* value,
    size_t size) {
  
  fieldmode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:gorm.GORM_PB_REQ_HEADER.FieldMode)
}
inline std::string* GORM_PB_REQ_HEADER::_internal_mutable_fieldmode() {
  
  return fieldmode_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* GORM_PB_REQ_HEADER::release_fieldmode() {
  // @@protoc_insertion_point(field_release:gorm.GORM_PB_REQ_HEADER.FieldMode)
  return fieldmode_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GORM_PB_REQ_HEADER::set_allocated_fieldmode(std::string* fieldmode) {
  if (fieldmode != nullptr) {
    
  } else {
    
  }
  fieldmode_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), fieldmode,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:gorm.GORM_PB_REQ_HEADER.FieldMode)
}
inline std::string* GORM_PB_REQ_HEADER::unsafe_arena_release_fieldmode() {
  // @@protoc_insertion_point(field_unsafe_arena_release:gorm.GORM_PB_REQ_HEADER.FieldMode)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return fieldmode_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void GORM_PB_REQ_HEADER::unsafe_arena_set_allocated_fieldmode(
    std::string* fieldmode) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (fieldmode != nullptr) {
    
  } else {
    
  }
  fieldmode_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      fieldmode, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gorm.GORM_PB_REQ_HEADER.FieldMode)
}

// .gorm.GORM_PB_SPLIT_INFO SplitTableInfo = 6;
inline bool GORM_PB_REQ_HEADER::_internal_has_splittableinfo() const {
  return this != internal_default_instance() && splittableinfo_ != nullptr;
}
inline bool GORM_PB_REQ_HEADER::has_splittableinfo() const {
  return _internal_has_splittableinfo();
}
inline void GORM_PB_REQ_HEADER::clear_splittableinfo() {
  if (GetArena() == nullptr && splittableinfo_ != nullptr) {
    delete splittableinfo_;
  }
  splittableinfo_ = nullptr;
}
inline const ::gorm::GORM_PB_SPLIT_INFO& GORM_PB_REQ_HEADER::_internal_splittableinfo() const {
  const ::gorm::GORM_PB_SPLIT_INFO* p = splittableinfo_;
  return p != nullptr ? *p : *reinterpret_cast<const ::gorm::GORM_PB_SPLIT_INFO*>(
      &::gorm::_GORM_PB_SPLIT_INFO_default_instance_);
}
inline const ::gorm::GORM_PB_SPLIT_INFO& GORM_PB_REQ_HEADER::splittableinfo() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_REQ_HEADER.SplitTableInfo)
  return _internal_splittableinfo();
}
inline void GORM_PB_REQ_HEADER::unsafe_arena_set_allocated_splittableinfo(
    ::gorm::GORM_PB_SPLIT_INFO* splittableinfo) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(splittableinfo_);
  }
  splittableinfo_ = splittableinfo;
  if (splittableinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gorm.GORM_PB_REQ_HEADER.SplitTableInfo)
}
inline ::gorm::GORM_PB_SPLIT_INFO* GORM_PB_REQ_HEADER::release_splittableinfo() {
  auto temp = unsafe_arena_release_splittableinfo();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::gorm::GORM_PB_SPLIT_INFO* GORM_PB_REQ_HEADER::unsafe_arena_release_splittableinfo() {
  // @@protoc_insertion_point(field_release:gorm.GORM_PB_REQ_HEADER.SplitTableInfo)
  
  ::gorm::GORM_PB_SPLIT_INFO* temp = splittableinfo_;
  splittableinfo_ = nullptr;
  return temp;
}
inline ::gorm::GORM_PB_SPLIT_INFO* GORM_PB_REQ_HEADER::_internal_mutable_splittableinfo() {
  
  if (splittableinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::gorm::GORM_PB_SPLIT_INFO>(GetArena());
    splittableinfo_ = p;
  }
  return splittableinfo_;
}
inline ::gorm::GORM_PB_SPLIT_INFO* GORM_PB_REQ_HEADER::mutable_splittableinfo() {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_REQ_HEADER.SplitTableInfo)
  return _internal_mutable_splittableinfo();
}
inline void GORM_PB_REQ_HEADER::set_allocated_splittableinfo(::gorm::GORM_PB_SPLIT_INFO* splittableinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete splittableinfo_;
  }
  if (splittableinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(splittableinfo);
    if (message_arena != submessage_arena) {
      splittableinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, splittableinfo, submessage_arena);
    }
    
  } else {
    
  }
  splittableinfo_ = splittableinfo;
  // @@protoc_insertion_point(field_set_allocated:gorm.GORM_PB_REQ_HEADER.SplitTableInfo)
}

// sfixed32 Limit = 7;
inline void GORM_PB_REQ_HEADER::clear_limit() {
  limit_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GORM_PB_REQ_HEADER::_internal_limit() const {
  return limit_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GORM_PB_REQ_HEADER::limit() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_REQ_HEADER.Limit)
  return _internal_limit();
}
inline void GORM_PB_REQ_HEADER::_internal_set_limit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  limit_ = value;
}
inline void GORM_PB_REQ_HEADER::set_limit(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_limit(value);
  // @@protoc_insertion_point(field_set:gorm.GORM_PB_REQ_HEADER.Limit)
}

// sfixed32 RefTableIndex = 8;
inline void GORM_PB_REQ_HEADER::clear_reftableindex() {
  reftableindex_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GORM_PB_REQ_HEADER::_internal_reftableindex() const {
  return reftableindex_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GORM_PB_REQ_HEADER::reftableindex() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_REQ_HEADER.RefTableIndex)
  return _internal_reftableindex();
}
inline void GORM_PB_REQ_HEADER::_internal_set_reftableindex(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  reftableindex_ = value;
}
inline void GORM_PB_REQ_HEADER::set_reftableindex(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_reftableindex(value);
  // @@protoc_insertion_point(field_set:gorm.GORM_PB_REQ_HEADER.RefTableIndex)
}

// -------------------------------------------------------------------

// GORM_PB_HEART_REQ

// .gorm.GORM_PB_REQ_HEADER Header = 1;
inline bool GORM_PB_HEART_REQ::_internal_has_header() const {
  return this != internal_default_instance() && header_ != nullptr;
}
inline bool GORM_PB_HEART_REQ::has_header() const {
  return _internal_has_header();
}
inline void GORM_PB_HEART_REQ::clear_header() {
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
}
inline const ::gorm::GORM_PB_REQ_HEADER& GORM_PB_HEART_REQ::_internal_header() const {
  const ::gorm::GORM_PB_REQ_HEADER* p = header_;
  return p != nullptr ? *p : *reinterpret_cast<const ::gorm::GORM_PB_REQ_HEADER*>(
      &::gorm::_GORM_PB_REQ_HEADER_default_instance_);
}
inline const ::gorm::GORM_PB_REQ_HEADER& GORM_PB_HEART_REQ::header() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_HEART_REQ.Header)
  return _internal_header();
}
inline void GORM_PB_HEART_REQ::unsafe_arena_set_allocated_header(
    ::gorm::GORM_PB_REQ_HEADER* header) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(header_);
  }
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gorm.GORM_PB_HEART_REQ.Header)
}
inline ::gorm::GORM_PB_REQ_HEADER* GORM_PB_HEART_REQ::release_header() {
  auto temp = unsafe_arena_release_header();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::gorm::GORM_PB_REQ_HEADER* GORM_PB_HEART_REQ::unsafe_arena_release_header() {
  // @@protoc_insertion_point(field_release:gorm.GORM_PB_HEART_REQ.Header)
  
  ::gorm::GORM_PB_REQ_HEADER* temp = header_;
  header_ = nullptr;
  return temp;
}
inline ::gorm::GORM_PB_REQ_HEADER* GORM_PB_HEART_REQ::_internal_mutable_header() {
  
  if (header_ == nullptr) {
    auto* p = CreateMaybeMessage<::gorm::GORM_PB_REQ_HEADER>(GetArena());
    header_ = p;
  }
  return header_;
}
inline ::gorm::GORM_PB_REQ_HEADER* GORM_PB_HEART_REQ::mutable_header() {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_HEART_REQ.Header)
  return _internal_mutable_header();
}
inline void GORM_PB_HEART_REQ::set_allocated_header(::gorm::GORM_PB_REQ_HEADER* header) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete header_;
  }
  if (header) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(header);
    if (message_arena != submessage_arena) {
      header = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:gorm.GORM_PB_HEART_REQ.Header)
}

// -------------------------------------------------------------------

// GORM_PB_HEART_RSP

// .gorm.GORM_PB_Ret_Code RetCode = 1;
inline bool GORM_PB_HEART_RSP::_internal_has_retcode() const {
  return this != internal_default_instance() && retcode_ != nullptr;
}
inline bool GORM_PB_HEART_RSP::has_retcode() const {
  return _internal_has_retcode();
}
inline void GORM_PB_HEART_RSP::clear_retcode() {
  if (GetArena() == nullptr && retcode_ != nullptr) {
    delete retcode_;
  }
  retcode_ = nullptr;
}
inline const ::gorm::GORM_PB_Ret_Code& GORM_PB_HEART_RSP::_internal_retcode() const {
  const ::gorm::GORM_PB_Ret_Code* p = retcode_;
  return p != nullptr ? *p : *reinterpret_cast<const ::gorm::GORM_PB_Ret_Code*>(
      &::gorm::_GORM_PB_Ret_Code_default_instance_);
}
inline const ::gorm::GORM_PB_Ret_Code& GORM_PB_HEART_RSP::retcode() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_HEART_RSP.RetCode)
  return _internal_retcode();
}
inline void GORM_PB_HEART_RSP::unsafe_arena_set_allocated_retcode(
    ::gorm::GORM_PB_Ret_Code* retcode) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(retcode_);
  }
  retcode_ = retcode;
  if (retcode) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gorm.GORM_PB_HEART_RSP.RetCode)
}
inline ::gorm::GORM_PB_Ret_Code* GORM_PB_HEART_RSP::release_retcode() {
  auto temp = unsafe_arena_release_retcode();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::gorm::GORM_PB_Ret_Code* GORM_PB_HEART_RSP::unsafe_arena_release_retcode() {
  // @@protoc_insertion_point(field_release:gorm.GORM_PB_HEART_RSP.RetCode)
  
  ::gorm::GORM_PB_Ret_Code* temp = retcode_;
  retcode_ = nullptr;
  return temp;
}
inline ::gorm::GORM_PB_Ret_Code* GORM_PB_HEART_RSP::_internal_mutable_retcode() {
  
  if (retcode_ == nullptr) {
    auto* p = CreateMaybeMessage<::gorm::GORM_PB_Ret_Code>(GetArena());
    retcode_ = p;
  }
  return retcode_;
}
inline ::gorm::GORM_PB_Ret_Code* GORM_PB_HEART_RSP::mutable_retcode() {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_HEART_RSP.RetCode)
  return _internal_mutable_retcode();
}
inline void GORM_PB_HEART_RSP::set_allocated_retcode(::gorm::GORM_PB_Ret_Code* retcode) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete retcode_;
  }
  if (retcode) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(retcode);
    if (message_arena != submessage_arena) {
      retcode = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, retcode, submessage_arena);
    }
    
  } else {
    
  }
  retcode_ = retcode;
  // @@protoc_insertion_point(field_set_allocated:gorm.GORM_PB_HEART_RSP.RetCode)
}

// -------------------------------------------------------------------

// GORM_PB_TABLE_SCHEMA_INFO_COLUMN

// fixed64 Version = 1;
inline void GORM_PB_TABLE_SCHEMA_INFO_COLUMN::clear_version() {
  version_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GORM_PB_TABLE_SCHEMA_INFO_COLUMN::_internal_version() const {
  return version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GORM_PB_TABLE_SCHEMA_INFO_COLUMN::version() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN.Version)
  return _internal_version();
}
inline void GORM_PB_TABLE_SCHEMA_INFO_COLUMN::_internal_set_version(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  version_ = value;
}
inline void GORM_PB_TABLE_SCHEMA_INFO_COLUMN::set_version(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN.Version)
}

// string Name = 2;
inline void GORM_PB_TABLE_SCHEMA_INFO_COLUMN::clear_name() {
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& GORM_PB_TABLE_SCHEMA_INFO_COLUMN::name() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN.Name)
  return _internal_name();
}
inline void GORM_PB_TABLE_SCHEMA_INFO_COLUMN::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN.Name)
}
inline std::string* GORM_PB_TABLE_SCHEMA_INFO_COLUMN::mutable_name() {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN.Name)
  return _internal_mutable_name();
}
inline const std::string& GORM_PB_TABLE_SCHEMA_INFO_COLUMN::_internal_name() const {
  return name_.Get();
}
inline void GORM_PB_TABLE_SCHEMA_INFO_COLUMN::_internal_set_name(const std::string& value) {
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void GORM_PB_TABLE_SCHEMA_INFO_COLUMN::set_name(std::string&& value) {
  
  name_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN.Name)
}
inline void GORM_PB_TABLE_SCHEMA_INFO_COLUMN::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN.Name)
}
inline void GORM_PB_TABLE_SCHEMA_INFO_COLUMN::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN.Name)
}
inline std::string* GORM_PB_TABLE_SCHEMA_INFO_COLUMN::_internal_mutable_name() {
  
  return name_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* GORM_PB_TABLE_SCHEMA_INFO_COLUMN::release_name() {
  // @@protoc_insertion_point(field_release:gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN.Name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GORM_PB_TABLE_SCHEMA_INFO_COLUMN::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN.Name)
}
inline std::string* GORM_PB_TABLE_SCHEMA_INFO_COLUMN::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN.Name)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return name_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void GORM_PB_TABLE_SCHEMA_INFO_COLUMN::unsafe_arena_set_allocated_name(
    std::string* name) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (name != nullptr) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      name, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN.Name)
}

// string TypeDesc = 3;
inline void GORM_PB_TABLE_SCHEMA_INFO_COLUMN::clear_typedesc() {
  typedesc_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& GORM_PB_TABLE_SCHEMA_INFO_COLUMN::typedesc() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN.TypeDesc)
  return _internal_typedesc();
}
inline void GORM_PB_TABLE_SCHEMA_INFO_COLUMN::set_typedesc(const std::string& value) {
  _internal_set_typedesc(value);
  // @@protoc_insertion_point(field_set:gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN.TypeDesc)
}
inline std::string* GORM_PB_TABLE_SCHEMA_INFO_COLUMN::mutable_typedesc() {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN.TypeDesc)
  return _internal_mutable_typedesc();
}
inline const std::string& GORM_PB_TABLE_SCHEMA_INFO_COLUMN::_internal_typedesc() const {
  return typedesc_.Get();
}
inline void GORM_PB_TABLE_SCHEMA_INFO_COLUMN::_internal_set_typedesc(const std::string& value) {
  
  typedesc_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void GORM_PB_TABLE_SCHEMA_INFO_COLUMN::set_typedesc(std::string&& value) {
  
  typedesc_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN.TypeDesc)
}
inline void GORM_PB_TABLE_SCHEMA_INFO_COLUMN::set_typedesc(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  typedesc_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN.TypeDesc)
}
inline void GORM_PB_TABLE_SCHEMA_INFO_COLUMN::set_typedesc(const char* value,
    size_t size) {
  
  typedesc_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN.TypeDesc)
}
inline std::string* GORM_PB_TABLE_SCHEMA_INFO_COLUMN::_internal_mutable_typedesc() {
  
  return typedesc_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* GORM_PB_TABLE_SCHEMA_INFO_COLUMN::release_typedesc() {
  // @@protoc_insertion_point(field_release:gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN.TypeDesc)
  return typedesc_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GORM_PB_TABLE_SCHEMA_INFO_COLUMN::set_allocated_typedesc(std::string* typedesc) {
  if (typedesc != nullptr) {
    
  } else {
    
  }
  typedesc_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), typedesc,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN.TypeDesc)
}
inline std::string* GORM_PB_TABLE_SCHEMA_INFO_COLUMN::unsafe_arena_release_typedesc() {
  // @@protoc_insertion_point(field_unsafe_arena_release:gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN.TypeDesc)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return typedesc_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void GORM_PB_TABLE_SCHEMA_INFO_COLUMN::unsafe_arena_set_allocated_typedesc(
    std::string* typedesc) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (typedesc != nullptr) {
    
  } else {
    
  }
  typedesc_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      typedesc, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN.TypeDesc)
}

// .gorm.GORM_PB_COLUMN_TYPE Type = 4;
inline void GORM_PB_TABLE_SCHEMA_INFO_COLUMN::clear_type() {
  type_ = 0;
}
inline ::gorm::GORM_PB_COLUMN_TYPE GORM_PB_TABLE_SCHEMA_INFO_COLUMN::_internal_type() const {
  return static_cast< ::gorm::GORM_PB_COLUMN_TYPE >(type_);
}
inline ::gorm::GORM_PB_COLUMN_TYPE GORM_PB_TABLE_SCHEMA_INFO_COLUMN::type() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN.Type)
  return _internal_type();
}
inline void GORM_PB_TABLE_SCHEMA_INFO_COLUMN::_internal_set_type(::gorm::GORM_PB_COLUMN_TYPE value) {
  
  type_ = value;
}
inline void GORM_PB_TABLE_SCHEMA_INFO_COLUMN::set_type(::gorm::GORM_PB_COLUMN_TYPE value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN.Type)
}

// -------------------------------------------------------------------

// GORM_PB_TABLE_SCHEMA_INFO

// fixed64 Version = 1;
inline void GORM_PB_TABLE_SCHEMA_INFO::clear_version() {
  version_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GORM_PB_TABLE_SCHEMA_INFO::_internal_version() const {
  return version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GORM_PB_TABLE_SCHEMA_INFO::version() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_TABLE_SCHEMA_INFO.Version)
  return _internal_version();
}
inline void GORM_PB_TABLE_SCHEMA_INFO::_internal_set_version(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  version_ = value;
}
inline void GORM_PB_TABLE_SCHEMA_INFO::set_version(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:gorm.GORM_PB_TABLE_SCHEMA_INFO.Version)
}

// string TableName = 2;
inline void GORM_PB_TABLE_SCHEMA_INFO::clear_tablename() {
  tablename_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& GORM_PB_TABLE_SCHEMA_INFO::tablename() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_TABLE_SCHEMA_INFO.TableName)
  return _internal_tablename();
}
inline void GORM_PB_TABLE_SCHEMA_INFO::set_tablename(const std::string& value) {
  _internal_set_tablename(value);
  // @@protoc_insertion_point(field_set:gorm.GORM_PB_TABLE_SCHEMA_INFO.TableName)
}
inline std::string* GORM_PB_TABLE_SCHEMA_INFO::mutable_tablename() {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_TABLE_SCHEMA_INFO.TableName)
  return _internal_mutable_tablename();
}
inline const std::string& GORM_PB_TABLE_SCHEMA_INFO::_internal_tablename() const {
  return tablename_.Get();
}
inline void GORM_PB_TABLE_SCHEMA_INFO::_internal_set_tablename(const std::string& value) {
  
  tablename_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void GORM_PB_TABLE_SCHEMA_INFO::set_tablename(std::string&& value) {
  
  tablename_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:gorm.GORM_PB_TABLE_SCHEMA_INFO.TableName)
}
inline void GORM_PB_TABLE_SCHEMA_INFO::set_tablename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  tablename_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:gorm.GORM_PB_TABLE_SCHEMA_INFO.TableName)
}
inline void GORM_PB_TABLE_SCHEMA_INFO::set_tablename(const char* value,
    size_t size) {
  
  tablename_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:gorm.GORM_PB_TABLE_SCHEMA_INFO.TableName)
}
inline std::string* GORM_PB_TABLE_SCHEMA_INFO::_internal_mutable_tablename() {
  
  return tablename_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* GORM_PB_TABLE_SCHEMA_INFO::release_tablename() {
  // @@protoc_insertion_point(field_release:gorm.GORM_PB_TABLE_SCHEMA_INFO.TableName)
  return tablename_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GORM_PB_TABLE_SCHEMA_INFO::set_allocated_tablename(std::string* tablename) {
  if (tablename != nullptr) {
    
  } else {
    
  }
  tablename_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), tablename,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:gorm.GORM_PB_TABLE_SCHEMA_INFO.TableName)
}
inline std::string* GORM_PB_TABLE_SCHEMA_INFO::unsafe_arena_release_tablename() {
  // @@protoc_insertion_point(field_unsafe_arena_release:gorm.GORM_PB_TABLE_SCHEMA_INFO.TableName)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return tablename_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void GORM_PB_TABLE_SCHEMA_INFO::unsafe_arena_set_allocated_tablename(
    std::string* tablename) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (tablename != nullptr) {
    
  } else {
    
  }
  tablename_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      tablename, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gorm.GORM_PB_TABLE_SCHEMA_INFO.TableName)
}

// sfixed32 TableIdx = 3;
inline void GORM_PB_TABLE_SCHEMA_INFO::clear_tableidx() {
  tableidx_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GORM_PB_TABLE_SCHEMA_INFO::_internal_tableidx() const {
  return tableidx_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GORM_PB_TABLE_SCHEMA_INFO::tableidx() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_TABLE_SCHEMA_INFO.TableIdx)
  return _internal_tableidx();
}
inline void GORM_PB_TABLE_SCHEMA_INFO::_internal_set_tableidx(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  tableidx_ = value;
}
inline void GORM_PB_TABLE_SCHEMA_INFO::set_tableidx(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_tableidx(value);
  // @@protoc_insertion_point(field_set:gorm.GORM_PB_TABLE_SCHEMA_INFO.TableIdx)
}

// repeated .gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN Columns = 4;
inline int GORM_PB_TABLE_SCHEMA_INFO::_internal_columns_size() const {
  return columns_.size();
}
inline int GORM_PB_TABLE_SCHEMA_INFO::columns_size() const {
  return _internal_columns_size();
}
inline void GORM_PB_TABLE_SCHEMA_INFO::clear_columns() {
  columns_.Clear();
}
inline ::gorm::GORM_PB_TABLE_SCHEMA_INFO_COLUMN* GORM_PB_TABLE_SCHEMA_INFO::mutable_columns(int index) {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_TABLE_SCHEMA_INFO.Columns)
  return columns_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE_SCHEMA_INFO_COLUMN >*
GORM_PB_TABLE_SCHEMA_INFO::mutable_columns() {
  // @@protoc_insertion_point(field_mutable_list:gorm.GORM_PB_TABLE_SCHEMA_INFO.Columns)
  return &columns_;
}
inline const ::gorm::GORM_PB_TABLE_SCHEMA_INFO_COLUMN& GORM_PB_TABLE_SCHEMA_INFO::_internal_columns(int index) const {
  return columns_.Get(index);
}
inline const ::gorm::GORM_PB_TABLE_SCHEMA_INFO_COLUMN& GORM_PB_TABLE_SCHEMA_INFO::columns(int index) const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_TABLE_SCHEMA_INFO.Columns)
  return _internal_columns(index);
}
inline ::gorm::GORM_PB_TABLE_SCHEMA_INFO_COLUMN* GORM_PB_TABLE_SCHEMA_INFO::_internal_add_columns() {
  return columns_.Add();
}
inline ::gorm::GORM_PB_TABLE_SCHEMA_INFO_COLUMN* GORM_PB_TABLE_SCHEMA_INFO::add_columns() {
  // @@protoc_insertion_point(field_add:gorm.GORM_PB_TABLE_SCHEMA_INFO.Columns)
  return _internal_add_columns();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE_SCHEMA_INFO_COLUMN >&
GORM_PB_TABLE_SCHEMA_INFO::columns() const {
  // @@protoc_insertion_point(field_list:gorm.GORM_PB_TABLE_SCHEMA_INFO.Columns)
  return columns_;
}

// -------------------------------------------------------------------

// GORM_PB_HAND_SHAKE_REQ

// .gorm.GORM_PB_REQ_HEADER Header = 1;
inline bool GORM_PB_HAND_SHAKE_REQ::_internal_has_header() const {
  return this != internal_default_instance() && header_ != nullptr;
}
inline bool GORM_PB_HAND_SHAKE_REQ::has_header() const {
  return _internal_has_header();
}
inline void GORM_PB_HAND_SHAKE_REQ::clear_header() {
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
}
inline const ::gorm::GORM_PB_REQ_HEADER& GORM_PB_HAND_SHAKE_REQ::_internal_header() const {
  const ::gorm::GORM_PB_REQ_HEADER* p = header_;
  return p != nullptr ? *p : *reinterpret_cast<const ::gorm::GORM_PB_REQ_HEADER*>(
      &::gorm::_GORM_PB_REQ_HEADER_default_instance_);
}
inline const ::gorm::GORM_PB_REQ_HEADER& GORM_PB_HAND_SHAKE_REQ::header() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_HAND_SHAKE_REQ.Header)
  return _internal_header();
}
inline void GORM_PB_HAND_SHAKE_REQ::unsafe_arena_set_allocated_header(
    ::gorm::GORM_PB_REQ_HEADER* header) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(header_);
  }
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gorm.GORM_PB_HAND_SHAKE_REQ.Header)
}
inline ::gorm::GORM_PB_REQ_HEADER* GORM_PB_HAND_SHAKE_REQ::release_header() {
  auto temp = unsafe_arena_release_header();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::gorm::GORM_PB_REQ_HEADER* GORM_PB_HAND_SHAKE_REQ::unsafe_arena_release_header() {
  // @@protoc_insertion_point(field_release:gorm.GORM_PB_HAND_SHAKE_REQ.Header)
  
  ::gorm::GORM_PB_REQ_HEADER* temp = header_;
  header_ = nullptr;
  return temp;
}
inline ::gorm::GORM_PB_REQ_HEADER* GORM_PB_HAND_SHAKE_REQ::_internal_mutable_header() {
  
  if (header_ == nullptr) {
    auto* p = CreateMaybeMessage<::gorm::GORM_PB_REQ_HEADER>(GetArena());
    header_ = p;
  }
  return header_;
}
inline ::gorm::GORM_PB_REQ_HEADER* GORM_PB_HAND_SHAKE_REQ::mutable_header() {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_HAND_SHAKE_REQ.Header)
  return _internal_mutable_header();
}
inline void GORM_PB_HAND_SHAKE_REQ::set_allocated_header(::gorm::GORM_PB_REQ_HEADER* header) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete header_;
  }
  if (header) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(header);
    if (message_arena != submessage_arena) {
      header = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:gorm.GORM_PB_HAND_SHAKE_REQ.Header)
}

// fixed64 Version = 2;
inline void GORM_PB_HAND_SHAKE_REQ::clear_version() {
  version_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GORM_PB_HAND_SHAKE_REQ::_internal_version() const {
  return version_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GORM_PB_HAND_SHAKE_REQ::version() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_HAND_SHAKE_REQ.Version)
  return _internal_version();
}
inline void GORM_PB_HAND_SHAKE_REQ::_internal_set_version(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  version_ = value;
}
inline void GORM_PB_HAND_SHAKE_REQ::set_version(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:gorm.GORM_PB_HAND_SHAKE_REQ.Version)
}

// fixed32 Md5 = 3;
inline void GORM_PB_HAND_SHAKE_REQ::clear_md5() {
  md5_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GORM_PB_HAND_SHAKE_REQ::_internal_md5() const {
  return md5_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 GORM_PB_HAND_SHAKE_REQ::md5() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_HAND_SHAKE_REQ.Md5)
  return _internal_md5();
}
inline void GORM_PB_HAND_SHAKE_REQ::_internal_set_md5(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  md5_ = value;
}
inline void GORM_PB_HAND_SHAKE_REQ::set_md5(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_md5(value);
  // @@protoc_insertion_point(field_set:gorm.GORM_PB_HAND_SHAKE_REQ.Md5)
}

// repeated .gorm.GORM_PB_TABLE_SCHEMA_INFO Schemas = 4;
inline int GORM_PB_HAND_SHAKE_REQ::_internal_schemas_size() const {
  return schemas_.size();
}
inline int GORM_PB_HAND_SHAKE_REQ::schemas_size() const {
  return _internal_schemas_size();
}
inline void GORM_PB_HAND_SHAKE_REQ::clear_schemas() {
  schemas_.Clear();
}
inline ::gorm::GORM_PB_TABLE_SCHEMA_INFO* GORM_PB_HAND_SHAKE_REQ::mutable_schemas(int index) {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_HAND_SHAKE_REQ.Schemas)
  return schemas_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE_SCHEMA_INFO >*
GORM_PB_HAND_SHAKE_REQ::mutable_schemas() {
  // @@protoc_insertion_point(field_mutable_list:gorm.GORM_PB_HAND_SHAKE_REQ.Schemas)
  return &schemas_;
}
inline const ::gorm::GORM_PB_TABLE_SCHEMA_INFO& GORM_PB_HAND_SHAKE_REQ::_internal_schemas(int index) const {
  return schemas_.Get(index);
}
inline const ::gorm::GORM_PB_TABLE_SCHEMA_INFO& GORM_PB_HAND_SHAKE_REQ::schemas(int index) const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_HAND_SHAKE_REQ.Schemas)
  return _internal_schemas(index);
}
inline ::gorm::GORM_PB_TABLE_SCHEMA_INFO* GORM_PB_HAND_SHAKE_REQ::_internal_add_schemas() {
  return schemas_.Add();
}
inline ::gorm::GORM_PB_TABLE_SCHEMA_INFO* GORM_PB_HAND_SHAKE_REQ::add_schemas() {
  // @@protoc_insertion_point(field_add:gorm.GORM_PB_HAND_SHAKE_REQ.Schemas)
  return _internal_add_schemas();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE_SCHEMA_INFO >&
GORM_PB_HAND_SHAKE_REQ::schemas() const {
  // @@protoc_insertion_point(field_list:gorm.GORM_PB_HAND_SHAKE_REQ.Schemas)
  return schemas_;
}

// -------------------------------------------------------------------

// GORM_PB_HAND_SHAKE_RSP

// .gorm.GORM_PB_Ret_Code RetCode = 1;
inline bool GORM_PB_HAND_SHAKE_RSP::_internal_has_retcode() const {
  return this != internal_default_instance() && retcode_ != nullptr;
}
inline bool GORM_PB_HAND_SHAKE_RSP::has_retcode() const {
  return _internal_has_retcode();
}
inline void GORM_PB_HAND_SHAKE_RSP::clear_retcode() {
  if (GetArena() == nullptr && retcode_ != nullptr) {
    delete retcode_;
  }
  retcode_ = nullptr;
}
inline const ::gorm::GORM_PB_Ret_Code& GORM_PB_HAND_SHAKE_RSP::_internal_retcode() const {
  const ::gorm::GORM_PB_Ret_Code* p = retcode_;
  return p != nullptr ? *p : *reinterpret_cast<const ::gorm::GORM_PB_Ret_Code*>(
      &::gorm::_GORM_PB_Ret_Code_default_instance_);
}
inline const ::gorm::GORM_PB_Ret_Code& GORM_PB_HAND_SHAKE_RSP::retcode() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_HAND_SHAKE_RSP.RetCode)
  return _internal_retcode();
}
inline void GORM_PB_HAND_SHAKE_RSP::unsafe_arena_set_allocated_retcode(
    ::gorm::GORM_PB_Ret_Code* retcode) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(retcode_);
  }
  retcode_ = retcode;
  if (retcode) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gorm.GORM_PB_HAND_SHAKE_RSP.RetCode)
}
inline ::gorm::GORM_PB_Ret_Code* GORM_PB_HAND_SHAKE_RSP::release_retcode() {
  auto temp = unsafe_arena_release_retcode();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::gorm::GORM_PB_Ret_Code* GORM_PB_HAND_SHAKE_RSP::unsafe_arena_release_retcode() {
  // @@protoc_insertion_point(field_release:gorm.GORM_PB_HAND_SHAKE_RSP.RetCode)
  
  ::gorm::GORM_PB_Ret_Code* temp = retcode_;
  retcode_ = nullptr;
  return temp;
}
inline ::gorm::GORM_PB_Ret_Code* GORM_PB_HAND_SHAKE_RSP::_internal_mutable_retcode() {
  
  if (retcode_ == nullptr) {
    auto* p = CreateMaybeMessage<::gorm::GORM_PB_Ret_Code>(GetArena());
    retcode_ = p;
  }
  return retcode_;
}
inline ::gorm::GORM_PB_Ret_Code* GORM_PB_HAND_SHAKE_RSP::mutable_retcode() {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_HAND_SHAKE_RSP.RetCode)
  return _internal_mutable_retcode();
}
inline void GORM_PB_HAND_SHAKE_RSP::set_allocated_retcode(::gorm::GORM_PB_Ret_Code* retcode) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete retcode_;
  }
  if (retcode) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(retcode);
    if (message_arena != submessage_arena) {
      retcode = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, retcode, submessage_arena);
    }
    
  } else {
    
  }
  retcode_ = retcode;
  // @@protoc_insertion_point(field_set_allocated:gorm.GORM_PB_HAND_SHAKE_RSP.RetCode)
}

// fixed64 ClientId = 2;
inline void GORM_PB_HAND_SHAKE_RSP::clear_clientid() {
  clientid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GORM_PB_HAND_SHAKE_RSP::_internal_clientid() const {
  return clientid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GORM_PB_HAND_SHAKE_RSP::clientid() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_HAND_SHAKE_RSP.ClientId)
  return _internal_clientid();
}
inline void GORM_PB_HAND_SHAKE_RSP::_internal_set_clientid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  clientid_ = value;
}
inline void GORM_PB_HAND_SHAKE_RSP::set_clientid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_clientid(value);
  // @@protoc_insertion_point(field_set:gorm.GORM_PB_HAND_SHAKE_RSP.ClientId)
}

// -------------------------------------------------------------------

// GORM_PB_INSERT_REQ

// .gorm.GORM_PB_REQ_HEADER Header = 1;
inline bool GORM_PB_INSERT_REQ::_internal_has_header() const {
  return this != internal_default_instance() && header_ != nullptr;
}
inline bool GORM_PB_INSERT_REQ::has_header() const {
  return _internal_has_header();
}
inline void GORM_PB_INSERT_REQ::clear_header() {
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
}
inline const ::gorm::GORM_PB_REQ_HEADER& GORM_PB_INSERT_REQ::_internal_header() const {
  const ::gorm::GORM_PB_REQ_HEADER* p = header_;
  return p != nullptr ? *p : *reinterpret_cast<const ::gorm::GORM_PB_REQ_HEADER*>(
      &::gorm::_GORM_PB_REQ_HEADER_default_instance_);
}
inline const ::gorm::GORM_PB_REQ_HEADER& GORM_PB_INSERT_REQ::header() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_INSERT_REQ.Header)
  return _internal_header();
}
inline void GORM_PB_INSERT_REQ::unsafe_arena_set_allocated_header(
    ::gorm::GORM_PB_REQ_HEADER* header) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(header_);
  }
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gorm.GORM_PB_INSERT_REQ.Header)
}
inline ::gorm::GORM_PB_REQ_HEADER* GORM_PB_INSERT_REQ::release_header() {
  auto temp = unsafe_arena_release_header();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::gorm::GORM_PB_REQ_HEADER* GORM_PB_INSERT_REQ::unsafe_arena_release_header() {
  // @@protoc_insertion_point(field_release:gorm.GORM_PB_INSERT_REQ.Header)
  
  ::gorm::GORM_PB_REQ_HEADER* temp = header_;
  header_ = nullptr;
  return temp;
}
inline ::gorm::GORM_PB_REQ_HEADER* GORM_PB_INSERT_REQ::_internal_mutable_header() {
  
  if (header_ == nullptr) {
    auto* p = CreateMaybeMessage<::gorm::GORM_PB_REQ_HEADER>(GetArena());
    header_ = p;
  }
  return header_;
}
inline ::gorm::GORM_PB_REQ_HEADER* GORM_PB_INSERT_REQ::mutable_header() {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_INSERT_REQ.Header)
  return _internal_mutable_header();
}
inline void GORM_PB_INSERT_REQ::set_allocated_header(::gorm::GORM_PB_REQ_HEADER* header) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete header_;
  }
  if (header) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(header);
    if (message_arena != submessage_arena) {
      header = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:gorm.GORM_PB_INSERT_REQ.Header)
}

// repeated .gorm.GORM_PB_TABLE Tables = 2;
inline int GORM_PB_INSERT_REQ::_internal_tables_size() const {
  return tables_.size();
}
inline int GORM_PB_INSERT_REQ::tables_size() const {
  return _internal_tables_size();
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_INSERT_REQ::mutable_tables(int index) {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_INSERT_REQ.Tables)
  return tables_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >*
GORM_PB_INSERT_REQ::mutable_tables() {
  // @@protoc_insertion_point(field_mutable_list:gorm.GORM_PB_INSERT_REQ.Tables)
  return &tables_;
}
inline const ::gorm::GORM_PB_TABLE& GORM_PB_INSERT_REQ::_internal_tables(int index) const {
  return tables_.Get(index);
}
inline const ::gorm::GORM_PB_TABLE& GORM_PB_INSERT_REQ::tables(int index) const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_INSERT_REQ.Tables)
  return _internal_tables(index);
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_INSERT_REQ::_internal_add_tables() {
  return tables_.Add();
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_INSERT_REQ::add_tables() {
  // @@protoc_insertion_point(field_add:gorm.GORM_PB_INSERT_REQ.Tables)
  return _internal_add_tables();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >&
GORM_PB_INSERT_REQ::tables() const {
  // @@protoc_insertion_point(field_list:gorm.GORM_PB_INSERT_REQ.Tables)
  return tables_;
}

// -------------------------------------------------------------------

// GORM_PB_INSERT_RSP

// .gorm.GORM_PB_Ret_Code RetCode = 1;
inline bool GORM_PB_INSERT_RSP::_internal_has_retcode() const {
  return this != internal_default_instance() && retcode_ != nullptr;
}
inline bool GORM_PB_INSERT_RSP::has_retcode() const {
  return _internal_has_retcode();
}
inline void GORM_PB_INSERT_RSP::clear_retcode() {
  if (GetArena() == nullptr && retcode_ != nullptr) {
    delete retcode_;
  }
  retcode_ = nullptr;
}
inline const ::gorm::GORM_PB_Ret_Code& GORM_PB_INSERT_RSP::_internal_retcode() const {
  const ::gorm::GORM_PB_Ret_Code* p = retcode_;
  return p != nullptr ? *p : *reinterpret_cast<const ::gorm::GORM_PB_Ret_Code*>(
      &::gorm::_GORM_PB_Ret_Code_default_instance_);
}
inline const ::gorm::GORM_PB_Ret_Code& GORM_PB_INSERT_RSP::retcode() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_INSERT_RSP.RetCode)
  return _internal_retcode();
}
inline void GORM_PB_INSERT_RSP::unsafe_arena_set_allocated_retcode(
    ::gorm::GORM_PB_Ret_Code* retcode) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(retcode_);
  }
  retcode_ = retcode;
  if (retcode) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gorm.GORM_PB_INSERT_RSP.RetCode)
}
inline ::gorm::GORM_PB_Ret_Code* GORM_PB_INSERT_RSP::release_retcode() {
  auto temp = unsafe_arena_release_retcode();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::gorm::GORM_PB_Ret_Code* GORM_PB_INSERT_RSP::unsafe_arena_release_retcode() {
  // @@protoc_insertion_point(field_release:gorm.GORM_PB_INSERT_RSP.RetCode)
  
  ::gorm::GORM_PB_Ret_Code* temp = retcode_;
  retcode_ = nullptr;
  return temp;
}
inline ::gorm::GORM_PB_Ret_Code* GORM_PB_INSERT_RSP::_internal_mutable_retcode() {
  
  if (retcode_ == nullptr) {
    auto* p = CreateMaybeMessage<::gorm::GORM_PB_Ret_Code>(GetArena());
    retcode_ = p;
  }
  return retcode_;
}
inline ::gorm::GORM_PB_Ret_Code* GORM_PB_INSERT_RSP::mutable_retcode() {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_INSERT_RSP.RetCode)
  return _internal_mutable_retcode();
}
inline void GORM_PB_INSERT_RSP::set_allocated_retcode(::gorm::GORM_PB_Ret_Code* retcode) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete retcode_;
  }
  if (retcode) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(retcode);
    if (message_arena != submessage_arena) {
      retcode = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, retcode, submessage_arena);
    }
    
  } else {
    
  }
  retcode_ = retcode;
  // @@protoc_insertion_point(field_set_allocated:gorm.GORM_PB_INSERT_RSP.RetCode)
}

// repeated .gorm.GORM_PB_TABLE Tables = 2;
inline int GORM_PB_INSERT_RSP::_internal_tables_size() const {
  return tables_.size();
}
inline int GORM_PB_INSERT_RSP::tables_size() const {
  return _internal_tables_size();
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_INSERT_RSP::mutable_tables(int index) {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_INSERT_RSP.Tables)
  return tables_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >*
GORM_PB_INSERT_RSP::mutable_tables() {
  // @@protoc_insertion_point(field_mutable_list:gorm.GORM_PB_INSERT_RSP.Tables)
  return &tables_;
}
inline const ::gorm::GORM_PB_TABLE& GORM_PB_INSERT_RSP::_internal_tables(int index) const {
  return tables_.Get(index);
}
inline const ::gorm::GORM_PB_TABLE& GORM_PB_INSERT_RSP::tables(int index) const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_INSERT_RSP.Tables)
  return _internal_tables(index);
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_INSERT_RSP::_internal_add_tables() {
  return tables_.Add();
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_INSERT_RSP::add_tables() {
  // @@protoc_insertion_point(field_add:gorm.GORM_PB_INSERT_RSP.Tables)
  return _internal_add_tables();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >&
GORM_PB_INSERT_RSP::tables() const {
  // @@protoc_insertion_point(field_list:gorm.GORM_PB_INSERT_RSP.Tables)
  return tables_;
}

// fixed64 LastInsertId = 3;
inline void GORM_PB_INSERT_RSP::clear_lastinsertid() {
  lastinsertid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GORM_PB_INSERT_RSP::_internal_lastinsertid() const {
  return lastinsertid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GORM_PB_INSERT_RSP::lastinsertid() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_INSERT_RSP.LastInsertId)
  return _internal_lastinsertid();
}
inline void GORM_PB_INSERT_RSP::_internal_set_lastinsertid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  lastinsertid_ = value;
}
inline void GORM_PB_INSERT_RSP::set_lastinsertid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_lastinsertid(value);
  // @@protoc_insertion_point(field_set:gorm.GORM_PB_INSERT_RSP.LastInsertId)
}

// -------------------------------------------------------------------

// GORM_PB_UPDATE_REQ

// .gorm.GORM_PB_REQ_HEADER Header = 1;
inline bool GORM_PB_UPDATE_REQ::_internal_has_header() const {
  return this != internal_default_instance() && header_ != nullptr;
}
inline bool GORM_PB_UPDATE_REQ::has_header() const {
  return _internal_has_header();
}
inline void GORM_PB_UPDATE_REQ::clear_header() {
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
}
inline const ::gorm::GORM_PB_REQ_HEADER& GORM_PB_UPDATE_REQ::_internal_header() const {
  const ::gorm::GORM_PB_REQ_HEADER* p = header_;
  return p != nullptr ? *p : *reinterpret_cast<const ::gorm::GORM_PB_REQ_HEADER*>(
      &::gorm::_GORM_PB_REQ_HEADER_default_instance_);
}
inline const ::gorm::GORM_PB_REQ_HEADER& GORM_PB_UPDATE_REQ::header() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_UPDATE_REQ.Header)
  return _internal_header();
}
inline void GORM_PB_UPDATE_REQ::unsafe_arena_set_allocated_header(
    ::gorm::GORM_PB_REQ_HEADER* header) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(header_);
  }
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gorm.GORM_PB_UPDATE_REQ.Header)
}
inline ::gorm::GORM_PB_REQ_HEADER* GORM_PB_UPDATE_REQ::release_header() {
  auto temp = unsafe_arena_release_header();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::gorm::GORM_PB_REQ_HEADER* GORM_PB_UPDATE_REQ::unsafe_arena_release_header() {
  // @@protoc_insertion_point(field_release:gorm.GORM_PB_UPDATE_REQ.Header)
  
  ::gorm::GORM_PB_REQ_HEADER* temp = header_;
  header_ = nullptr;
  return temp;
}
inline ::gorm::GORM_PB_REQ_HEADER* GORM_PB_UPDATE_REQ::_internal_mutable_header() {
  
  if (header_ == nullptr) {
    auto* p = CreateMaybeMessage<::gorm::GORM_PB_REQ_HEADER>(GetArena());
    header_ = p;
  }
  return header_;
}
inline ::gorm::GORM_PB_REQ_HEADER* GORM_PB_UPDATE_REQ::mutable_header() {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_UPDATE_REQ.Header)
  return _internal_mutable_header();
}
inline void GORM_PB_UPDATE_REQ::set_allocated_header(::gorm::GORM_PB_REQ_HEADER* header) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete header_;
  }
  if (header) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(header);
    if (message_arena != submessage_arena) {
      header = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:gorm.GORM_PB_UPDATE_REQ.Header)
}

// repeated .gorm.GORM_PB_TABLE Tables = 2;
inline int GORM_PB_UPDATE_REQ::_internal_tables_size() const {
  return tables_.size();
}
inline int GORM_PB_UPDATE_REQ::tables_size() const {
  return _internal_tables_size();
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_UPDATE_REQ::mutable_tables(int index) {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_UPDATE_REQ.Tables)
  return tables_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >*
GORM_PB_UPDATE_REQ::mutable_tables() {
  // @@protoc_insertion_point(field_mutable_list:gorm.GORM_PB_UPDATE_REQ.Tables)
  return &tables_;
}
inline const ::gorm::GORM_PB_TABLE& GORM_PB_UPDATE_REQ::_internal_tables(int index) const {
  return tables_.Get(index);
}
inline const ::gorm::GORM_PB_TABLE& GORM_PB_UPDATE_REQ::tables(int index) const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_UPDATE_REQ.Tables)
  return _internal_tables(index);
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_UPDATE_REQ::_internal_add_tables() {
  return tables_.Add();
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_UPDATE_REQ::add_tables() {
  // @@protoc_insertion_point(field_add:gorm.GORM_PB_UPDATE_REQ.Tables)
  return _internal_add_tables();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >&
GORM_PB_UPDATE_REQ::tables() const {
  // @@protoc_insertion_point(field_list:gorm.GORM_PB_UPDATE_REQ.Tables)
  return tables_;
}

// -------------------------------------------------------------------

// GORM_PB_UPDATE_RSP

// .gorm.GORM_PB_Ret_Code RetCode = 1;
inline bool GORM_PB_UPDATE_RSP::_internal_has_retcode() const {
  return this != internal_default_instance() && retcode_ != nullptr;
}
inline bool GORM_PB_UPDATE_RSP::has_retcode() const {
  return _internal_has_retcode();
}
inline void GORM_PB_UPDATE_RSP::clear_retcode() {
  if (GetArena() == nullptr && retcode_ != nullptr) {
    delete retcode_;
  }
  retcode_ = nullptr;
}
inline const ::gorm::GORM_PB_Ret_Code& GORM_PB_UPDATE_RSP::_internal_retcode() const {
  const ::gorm::GORM_PB_Ret_Code* p = retcode_;
  return p != nullptr ? *p : *reinterpret_cast<const ::gorm::GORM_PB_Ret_Code*>(
      &::gorm::_GORM_PB_Ret_Code_default_instance_);
}
inline const ::gorm::GORM_PB_Ret_Code& GORM_PB_UPDATE_RSP::retcode() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_UPDATE_RSP.RetCode)
  return _internal_retcode();
}
inline void GORM_PB_UPDATE_RSP::unsafe_arena_set_allocated_retcode(
    ::gorm::GORM_PB_Ret_Code* retcode) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(retcode_);
  }
  retcode_ = retcode;
  if (retcode) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gorm.GORM_PB_UPDATE_RSP.RetCode)
}
inline ::gorm::GORM_PB_Ret_Code* GORM_PB_UPDATE_RSP::release_retcode() {
  auto temp = unsafe_arena_release_retcode();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::gorm::GORM_PB_Ret_Code* GORM_PB_UPDATE_RSP::unsafe_arena_release_retcode() {
  // @@protoc_insertion_point(field_release:gorm.GORM_PB_UPDATE_RSP.RetCode)
  
  ::gorm::GORM_PB_Ret_Code* temp = retcode_;
  retcode_ = nullptr;
  return temp;
}
inline ::gorm::GORM_PB_Ret_Code* GORM_PB_UPDATE_RSP::_internal_mutable_retcode() {
  
  if (retcode_ == nullptr) {
    auto* p = CreateMaybeMessage<::gorm::GORM_PB_Ret_Code>(GetArena());
    retcode_ = p;
  }
  return retcode_;
}
inline ::gorm::GORM_PB_Ret_Code* GORM_PB_UPDATE_RSP::mutable_retcode() {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_UPDATE_RSP.RetCode)
  return _internal_mutable_retcode();
}
inline void GORM_PB_UPDATE_RSP::set_allocated_retcode(::gorm::GORM_PB_Ret_Code* retcode) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete retcode_;
  }
  if (retcode) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(retcode);
    if (message_arena != submessage_arena) {
      retcode = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, retcode, submessage_arena);
    }
    
  } else {
    
  }
  retcode_ = retcode;
  // @@protoc_insertion_point(field_set_allocated:gorm.GORM_PB_UPDATE_RSP.RetCode)
}

// repeated .gorm.GORM_PB_TABLE Tables = 2;
inline int GORM_PB_UPDATE_RSP::_internal_tables_size() const {
  return tables_.size();
}
inline int GORM_PB_UPDATE_RSP::tables_size() const {
  return _internal_tables_size();
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_UPDATE_RSP::mutable_tables(int index) {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_UPDATE_RSP.Tables)
  return tables_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >*
GORM_PB_UPDATE_RSP::mutable_tables() {
  // @@protoc_insertion_point(field_mutable_list:gorm.GORM_PB_UPDATE_RSP.Tables)
  return &tables_;
}
inline const ::gorm::GORM_PB_TABLE& GORM_PB_UPDATE_RSP::_internal_tables(int index) const {
  return tables_.Get(index);
}
inline const ::gorm::GORM_PB_TABLE& GORM_PB_UPDATE_RSP::tables(int index) const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_UPDATE_RSP.Tables)
  return _internal_tables(index);
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_UPDATE_RSP::_internal_add_tables() {
  return tables_.Add();
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_UPDATE_RSP::add_tables() {
  // @@protoc_insertion_point(field_add:gorm.GORM_PB_UPDATE_RSP.Tables)
  return _internal_add_tables();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >&
GORM_PB_UPDATE_RSP::tables() const {
  // @@protoc_insertion_point(field_list:gorm.GORM_PB_UPDATE_RSP.Tables)
  return tables_;
}

// sfixed32 AffectedNum = 3;
inline void GORM_PB_UPDATE_RSP::clear_affectednum() {
  affectednum_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GORM_PB_UPDATE_RSP::_internal_affectednum() const {
  return affectednum_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GORM_PB_UPDATE_RSP::affectednum() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_UPDATE_RSP.AffectedNum)
  return _internal_affectednum();
}
inline void GORM_PB_UPDATE_RSP::_internal_set_affectednum(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  affectednum_ = value;
}
inline void GORM_PB_UPDATE_RSP::set_affectednum(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_affectednum(value);
  // @@protoc_insertion_point(field_set:gorm.GORM_PB_UPDATE_RSP.AffectedNum)
}

// -------------------------------------------------------------------

// GORM_PB_REPLACE_REQ

// .gorm.GORM_PB_REQ_HEADER Header = 1;
inline bool GORM_PB_REPLACE_REQ::_internal_has_header() const {
  return this != internal_default_instance() && header_ != nullptr;
}
inline bool GORM_PB_REPLACE_REQ::has_header() const {
  return _internal_has_header();
}
inline void GORM_PB_REPLACE_REQ::clear_header() {
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
}
inline const ::gorm::GORM_PB_REQ_HEADER& GORM_PB_REPLACE_REQ::_internal_header() const {
  const ::gorm::GORM_PB_REQ_HEADER* p = header_;
  return p != nullptr ? *p : *reinterpret_cast<const ::gorm::GORM_PB_REQ_HEADER*>(
      &::gorm::_GORM_PB_REQ_HEADER_default_instance_);
}
inline const ::gorm::GORM_PB_REQ_HEADER& GORM_PB_REPLACE_REQ::header() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_REPLACE_REQ.Header)
  return _internal_header();
}
inline void GORM_PB_REPLACE_REQ::unsafe_arena_set_allocated_header(
    ::gorm::GORM_PB_REQ_HEADER* header) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(header_);
  }
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gorm.GORM_PB_REPLACE_REQ.Header)
}
inline ::gorm::GORM_PB_REQ_HEADER* GORM_PB_REPLACE_REQ::release_header() {
  auto temp = unsafe_arena_release_header();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::gorm::GORM_PB_REQ_HEADER* GORM_PB_REPLACE_REQ::unsafe_arena_release_header() {
  // @@protoc_insertion_point(field_release:gorm.GORM_PB_REPLACE_REQ.Header)
  
  ::gorm::GORM_PB_REQ_HEADER* temp = header_;
  header_ = nullptr;
  return temp;
}
inline ::gorm::GORM_PB_REQ_HEADER* GORM_PB_REPLACE_REQ::_internal_mutable_header() {
  
  if (header_ == nullptr) {
    auto* p = CreateMaybeMessage<::gorm::GORM_PB_REQ_HEADER>(GetArena());
    header_ = p;
  }
  return header_;
}
inline ::gorm::GORM_PB_REQ_HEADER* GORM_PB_REPLACE_REQ::mutable_header() {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_REPLACE_REQ.Header)
  return _internal_mutable_header();
}
inline void GORM_PB_REPLACE_REQ::set_allocated_header(::gorm::GORM_PB_REQ_HEADER* header) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete header_;
  }
  if (header) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(header);
    if (message_arena != submessage_arena) {
      header = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:gorm.GORM_PB_REPLACE_REQ.Header)
}

// repeated .gorm.GORM_PB_TABLE Tables = 2;
inline int GORM_PB_REPLACE_REQ::_internal_tables_size() const {
  return tables_.size();
}
inline int GORM_PB_REPLACE_REQ::tables_size() const {
  return _internal_tables_size();
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_REPLACE_REQ::mutable_tables(int index) {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_REPLACE_REQ.Tables)
  return tables_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >*
GORM_PB_REPLACE_REQ::mutable_tables() {
  // @@protoc_insertion_point(field_mutable_list:gorm.GORM_PB_REPLACE_REQ.Tables)
  return &tables_;
}
inline const ::gorm::GORM_PB_TABLE& GORM_PB_REPLACE_REQ::_internal_tables(int index) const {
  return tables_.Get(index);
}
inline const ::gorm::GORM_PB_TABLE& GORM_PB_REPLACE_REQ::tables(int index) const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_REPLACE_REQ.Tables)
  return _internal_tables(index);
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_REPLACE_REQ::_internal_add_tables() {
  return tables_.Add();
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_REPLACE_REQ::add_tables() {
  // @@protoc_insertion_point(field_add:gorm.GORM_PB_REPLACE_REQ.Tables)
  return _internal_add_tables();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >&
GORM_PB_REPLACE_REQ::tables() const {
  // @@protoc_insertion_point(field_list:gorm.GORM_PB_REPLACE_REQ.Tables)
  return tables_;
}

// -------------------------------------------------------------------

// GORM_PB_REPLACE_RSP

// .gorm.GORM_PB_Ret_Code RetCode = 1;
inline bool GORM_PB_REPLACE_RSP::_internal_has_retcode() const {
  return this != internal_default_instance() && retcode_ != nullptr;
}
inline bool GORM_PB_REPLACE_RSP::has_retcode() const {
  return _internal_has_retcode();
}
inline void GORM_PB_REPLACE_RSP::clear_retcode() {
  if (GetArena() == nullptr && retcode_ != nullptr) {
    delete retcode_;
  }
  retcode_ = nullptr;
}
inline const ::gorm::GORM_PB_Ret_Code& GORM_PB_REPLACE_RSP::_internal_retcode() const {
  const ::gorm::GORM_PB_Ret_Code* p = retcode_;
  return p != nullptr ? *p : *reinterpret_cast<const ::gorm::GORM_PB_Ret_Code*>(
      &::gorm::_GORM_PB_Ret_Code_default_instance_);
}
inline const ::gorm::GORM_PB_Ret_Code& GORM_PB_REPLACE_RSP::retcode() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_REPLACE_RSP.RetCode)
  return _internal_retcode();
}
inline void GORM_PB_REPLACE_RSP::unsafe_arena_set_allocated_retcode(
    ::gorm::GORM_PB_Ret_Code* retcode) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(retcode_);
  }
  retcode_ = retcode;
  if (retcode) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gorm.GORM_PB_REPLACE_RSP.RetCode)
}
inline ::gorm::GORM_PB_Ret_Code* GORM_PB_REPLACE_RSP::release_retcode() {
  auto temp = unsafe_arena_release_retcode();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::gorm::GORM_PB_Ret_Code* GORM_PB_REPLACE_RSP::unsafe_arena_release_retcode() {
  // @@protoc_insertion_point(field_release:gorm.GORM_PB_REPLACE_RSP.RetCode)
  
  ::gorm::GORM_PB_Ret_Code* temp = retcode_;
  retcode_ = nullptr;
  return temp;
}
inline ::gorm::GORM_PB_Ret_Code* GORM_PB_REPLACE_RSP::_internal_mutable_retcode() {
  
  if (retcode_ == nullptr) {
    auto* p = CreateMaybeMessage<::gorm::GORM_PB_Ret_Code>(GetArena());
    retcode_ = p;
  }
  return retcode_;
}
inline ::gorm::GORM_PB_Ret_Code* GORM_PB_REPLACE_RSP::mutable_retcode() {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_REPLACE_RSP.RetCode)
  return _internal_mutable_retcode();
}
inline void GORM_PB_REPLACE_RSP::set_allocated_retcode(::gorm::GORM_PB_Ret_Code* retcode) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete retcode_;
  }
  if (retcode) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(retcode);
    if (message_arena != submessage_arena) {
      retcode = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, retcode, submessage_arena);
    }
    
  } else {
    
  }
  retcode_ = retcode;
  // @@protoc_insertion_point(field_set_allocated:gorm.GORM_PB_REPLACE_RSP.RetCode)
}

// repeated .gorm.GORM_PB_TABLE Tables = 2;
inline int GORM_PB_REPLACE_RSP::_internal_tables_size() const {
  return tables_.size();
}
inline int GORM_PB_REPLACE_RSP::tables_size() const {
  return _internal_tables_size();
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_REPLACE_RSP::mutable_tables(int index) {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_REPLACE_RSP.Tables)
  return tables_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >*
GORM_PB_REPLACE_RSP::mutable_tables() {
  // @@protoc_insertion_point(field_mutable_list:gorm.GORM_PB_REPLACE_RSP.Tables)
  return &tables_;
}
inline const ::gorm::GORM_PB_TABLE& GORM_PB_REPLACE_RSP::_internal_tables(int index) const {
  return tables_.Get(index);
}
inline const ::gorm::GORM_PB_TABLE& GORM_PB_REPLACE_RSP::tables(int index) const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_REPLACE_RSP.Tables)
  return _internal_tables(index);
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_REPLACE_RSP::_internal_add_tables() {
  return tables_.Add();
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_REPLACE_RSP::add_tables() {
  // @@protoc_insertion_point(field_add:gorm.GORM_PB_REPLACE_RSP.Tables)
  return _internal_add_tables();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >&
GORM_PB_REPLACE_RSP::tables() const {
  // @@protoc_insertion_point(field_list:gorm.GORM_PB_REPLACE_RSP.Tables)
  return tables_;
}

// sfixed32 AffectedNum = 3;
inline void GORM_PB_REPLACE_RSP::clear_affectednum() {
  affectednum_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GORM_PB_REPLACE_RSP::_internal_affectednum() const {
  return affectednum_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GORM_PB_REPLACE_RSP::affectednum() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_REPLACE_RSP.AffectedNum)
  return _internal_affectednum();
}
inline void GORM_PB_REPLACE_RSP::_internal_set_affectednum(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  affectednum_ = value;
}
inline void GORM_PB_REPLACE_RSP::set_affectednum(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_affectednum(value);
  // @@protoc_insertion_point(field_set:gorm.GORM_PB_REPLACE_RSP.AffectedNum)
}

// -------------------------------------------------------------------

// GORM_PB_GET_REQ

// .gorm.GORM_PB_REQ_HEADER Header = 1;
inline bool GORM_PB_GET_REQ::_internal_has_header() const {
  return this != internal_default_instance() && header_ != nullptr;
}
inline bool GORM_PB_GET_REQ::has_header() const {
  return _internal_has_header();
}
inline void GORM_PB_GET_REQ::clear_header() {
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
}
inline const ::gorm::GORM_PB_REQ_HEADER& GORM_PB_GET_REQ::_internal_header() const {
  const ::gorm::GORM_PB_REQ_HEADER* p = header_;
  return p != nullptr ? *p : *reinterpret_cast<const ::gorm::GORM_PB_REQ_HEADER*>(
      &::gorm::_GORM_PB_REQ_HEADER_default_instance_);
}
inline const ::gorm::GORM_PB_REQ_HEADER& GORM_PB_GET_REQ::header() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_GET_REQ.Header)
  return _internal_header();
}
inline void GORM_PB_GET_REQ::unsafe_arena_set_allocated_header(
    ::gorm::GORM_PB_REQ_HEADER* header) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(header_);
  }
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gorm.GORM_PB_GET_REQ.Header)
}
inline ::gorm::GORM_PB_REQ_HEADER* GORM_PB_GET_REQ::release_header() {
  auto temp = unsafe_arena_release_header();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::gorm::GORM_PB_REQ_HEADER* GORM_PB_GET_REQ::unsafe_arena_release_header() {
  // @@protoc_insertion_point(field_release:gorm.GORM_PB_GET_REQ.Header)
  
  ::gorm::GORM_PB_REQ_HEADER* temp = header_;
  header_ = nullptr;
  return temp;
}
inline ::gorm::GORM_PB_REQ_HEADER* GORM_PB_GET_REQ::_internal_mutable_header() {
  
  if (header_ == nullptr) {
    auto* p = CreateMaybeMessage<::gorm::GORM_PB_REQ_HEADER>(GetArena());
    header_ = p;
  }
  return header_;
}
inline ::gorm::GORM_PB_REQ_HEADER* GORM_PB_GET_REQ::mutable_header() {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_GET_REQ.Header)
  return _internal_mutable_header();
}
inline void GORM_PB_GET_REQ::set_allocated_header(::gorm::GORM_PB_REQ_HEADER* header) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete header_;
  }
  if (header) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(header);
    if (message_arena != submessage_arena) {
      header = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:gorm.GORM_PB_GET_REQ.Header)
}

// .gorm.GORM_PB_TABLE Table = 2;
inline bool GORM_PB_GET_REQ::_internal_has_table() const {
  return this != internal_default_instance() && table_ != nullptr;
}
inline bool GORM_PB_GET_REQ::has_table() const {
  return _internal_has_table();
}
inline const ::gorm::GORM_PB_TABLE& GORM_PB_GET_REQ::_internal_table() const {
  const ::gorm::GORM_PB_TABLE* p = table_;
  return p != nullptr ? *p : *reinterpret_cast<const ::gorm::GORM_PB_TABLE*>(
      &::gorm::_GORM_PB_TABLE_default_instance_);
}
inline const ::gorm::GORM_PB_TABLE& GORM_PB_GET_REQ::table() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_GET_REQ.Table)
  return _internal_table();
}
inline void GORM_PB_GET_REQ::unsafe_arena_set_allocated_table(
    ::gorm::GORM_PB_TABLE* table) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(table_);
  }
  table_ = table;
  if (table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gorm.GORM_PB_GET_REQ.Table)
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_GET_REQ::release_table() {
  auto temp = unsafe_arena_release_table();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_GET_REQ::unsafe_arena_release_table() {
  // @@protoc_insertion_point(field_release:gorm.GORM_PB_GET_REQ.Table)
  
  ::gorm::GORM_PB_TABLE* temp = table_;
  table_ = nullptr;
  return temp;
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_GET_REQ::_internal_mutable_table() {
  
  if (table_ == nullptr) {
    auto* p = CreateMaybeMessage<::gorm::GORM_PB_TABLE>(GetArena());
    table_ = p;
  }
  return table_;
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_GET_REQ::mutable_table() {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_GET_REQ.Table)
  return _internal_mutable_table();
}
inline void GORM_PB_GET_REQ::set_allocated_table(::gorm::GORM_PB_TABLE* table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(table_);
  }
  if (table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(table)->GetArena();
    if (message_arena != submessage_arena) {
      table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, table, submessage_arena);
    }
    
  } else {
    
  }
  table_ = table;
  // @@protoc_insertion_point(field_set_allocated:gorm.GORM_PB_GET_REQ.Table)
}

// sfixed32 GetFlag = 3;
inline void GORM_PB_GET_REQ::clear_getflag() {
  getflag_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GORM_PB_GET_REQ::_internal_getflag() const {
  return getflag_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GORM_PB_GET_REQ::getflag() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_GET_REQ.GetFlag)
  return _internal_getflag();
}
inline void GORM_PB_GET_REQ::_internal_set_getflag(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  getflag_ = value;
}
inline void GORM_PB_GET_REQ::set_getflag(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_getflag(value);
  // @@protoc_insertion_point(field_set:gorm.GORM_PB_GET_REQ.GetFlag)
}

// -------------------------------------------------------------------

// GORM_PB_GET_RSP

// .gorm.GORM_PB_Ret_Code RetCode = 1;
inline bool GORM_PB_GET_RSP::_internal_has_retcode() const {
  return this != internal_default_instance() && retcode_ != nullptr;
}
inline bool GORM_PB_GET_RSP::has_retcode() const {
  return _internal_has_retcode();
}
inline void GORM_PB_GET_RSP::clear_retcode() {
  if (GetArena() == nullptr && retcode_ != nullptr) {
    delete retcode_;
  }
  retcode_ = nullptr;
}
inline const ::gorm::GORM_PB_Ret_Code& GORM_PB_GET_RSP::_internal_retcode() const {
  const ::gorm::GORM_PB_Ret_Code* p = retcode_;
  return p != nullptr ? *p : *reinterpret_cast<const ::gorm::GORM_PB_Ret_Code*>(
      &::gorm::_GORM_PB_Ret_Code_default_instance_);
}
inline const ::gorm::GORM_PB_Ret_Code& GORM_PB_GET_RSP::retcode() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_GET_RSP.RetCode)
  return _internal_retcode();
}
inline void GORM_PB_GET_RSP::unsafe_arena_set_allocated_retcode(
    ::gorm::GORM_PB_Ret_Code* retcode) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(retcode_);
  }
  retcode_ = retcode;
  if (retcode) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gorm.GORM_PB_GET_RSP.RetCode)
}
inline ::gorm::GORM_PB_Ret_Code* GORM_PB_GET_RSP::release_retcode() {
  auto temp = unsafe_arena_release_retcode();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::gorm::GORM_PB_Ret_Code* GORM_PB_GET_RSP::unsafe_arena_release_retcode() {
  // @@protoc_insertion_point(field_release:gorm.GORM_PB_GET_RSP.RetCode)
  
  ::gorm::GORM_PB_Ret_Code* temp = retcode_;
  retcode_ = nullptr;
  return temp;
}
inline ::gorm::GORM_PB_Ret_Code* GORM_PB_GET_RSP::_internal_mutable_retcode() {
  
  if (retcode_ == nullptr) {
    auto* p = CreateMaybeMessage<::gorm::GORM_PB_Ret_Code>(GetArena());
    retcode_ = p;
  }
  return retcode_;
}
inline ::gorm::GORM_PB_Ret_Code* GORM_PB_GET_RSP::mutable_retcode() {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_GET_RSP.RetCode)
  return _internal_mutable_retcode();
}
inline void GORM_PB_GET_RSP::set_allocated_retcode(::gorm::GORM_PB_Ret_Code* retcode) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete retcode_;
  }
  if (retcode) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(retcode);
    if (message_arena != submessage_arena) {
      retcode = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, retcode, submessage_arena);
    }
    
  } else {
    
  }
  retcode_ = retcode;
  // @@protoc_insertion_point(field_set_allocated:gorm.GORM_PB_GET_RSP.RetCode)
}

// .gorm.GORM_PB_TABLE Table = 2;
inline bool GORM_PB_GET_RSP::_internal_has_table() const {
  return this != internal_default_instance() && table_ != nullptr;
}
inline bool GORM_PB_GET_RSP::has_table() const {
  return _internal_has_table();
}
inline const ::gorm::GORM_PB_TABLE& GORM_PB_GET_RSP::_internal_table() const {
  const ::gorm::GORM_PB_TABLE* p = table_;
  return p != nullptr ? *p : *reinterpret_cast<const ::gorm::GORM_PB_TABLE*>(
      &::gorm::_GORM_PB_TABLE_default_instance_);
}
inline const ::gorm::GORM_PB_TABLE& GORM_PB_GET_RSP::table() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_GET_RSP.Table)
  return _internal_table();
}
inline void GORM_PB_GET_RSP::unsafe_arena_set_allocated_table(
    ::gorm::GORM_PB_TABLE* table) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(table_);
  }
  table_ = table;
  if (table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gorm.GORM_PB_GET_RSP.Table)
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_GET_RSP::release_table() {
  auto temp = unsafe_arena_release_table();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_GET_RSP::unsafe_arena_release_table() {
  // @@protoc_insertion_point(field_release:gorm.GORM_PB_GET_RSP.Table)
  
  ::gorm::GORM_PB_TABLE* temp = table_;
  table_ = nullptr;
  return temp;
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_GET_RSP::_internal_mutable_table() {
  
  if (table_ == nullptr) {
    auto* p = CreateMaybeMessage<::gorm::GORM_PB_TABLE>(GetArena());
    table_ = p;
  }
  return table_;
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_GET_RSP::mutable_table() {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_GET_RSP.Table)
  return _internal_mutable_table();
}
inline void GORM_PB_GET_RSP::set_allocated_table(::gorm::GORM_PB_TABLE* table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(table_);
  }
  if (table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(table)->GetArena();
    if (message_arena != submessage_arena) {
      table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, table, submessage_arena);
    }
    
  } else {
    
  }
  table_ = table;
  // @@protoc_insertion_point(field_set_allocated:gorm.GORM_PB_GET_RSP.Table)
}

// sfixed32 NewInsert = 3;
inline void GORM_PB_GET_RSP::clear_newinsert() {
  newinsert_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GORM_PB_GET_RSP::_internal_newinsert() const {
  return newinsert_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GORM_PB_GET_RSP::newinsert() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_GET_RSP.NewInsert)
  return _internal_newinsert();
}
inline void GORM_PB_GET_RSP::_internal_set_newinsert(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  newinsert_ = value;
}
inline void GORM_PB_GET_RSP::set_newinsert(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_newinsert(value);
  // @@protoc_insertion_point(field_set:gorm.GORM_PB_GET_RSP.NewInsert)
}

// fixed64 LastInsertId = 4;
inline void GORM_PB_GET_RSP::clear_lastinsertid() {
  lastinsertid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GORM_PB_GET_RSP::_internal_lastinsertid() const {
  return lastinsertid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GORM_PB_GET_RSP::lastinsertid() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_GET_RSP.LastInsertId)
  return _internal_lastinsertid();
}
inline void GORM_PB_GET_RSP::_internal_set_lastinsertid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  lastinsertid_ = value;
}
inline void GORM_PB_GET_RSP::set_lastinsertid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_lastinsertid(value);
  // @@protoc_insertion_point(field_set:gorm.GORM_PB_GET_RSP.LastInsertId)
}

// -------------------------------------------------------------------

// GORM_PB_BATCH_GET_REQ

// .gorm.GORM_PB_REQ_HEADER Header = 1;
inline bool GORM_PB_BATCH_GET_REQ::_internal_has_header() const {
  return this != internal_default_instance() && header_ != nullptr;
}
inline bool GORM_PB_BATCH_GET_REQ::has_header() const {
  return _internal_has_header();
}
inline void GORM_PB_BATCH_GET_REQ::clear_header() {
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
}
inline const ::gorm::GORM_PB_REQ_HEADER& GORM_PB_BATCH_GET_REQ::_internal_header() const {
  const ::gorm::GORM_PB_REQ_HEADER* p = header_;
  return p != nullptr ? *p : *reinterpret_cast<const ::gorm::GORM_PB_REQ_HEADER*>(
      &::gorm::_GORM_PB_REQ_HEADER_default_instance_);
}
inline const ::gorm::GORM_PB_REQ_HEADER& GORM_PB_BATCH_GET_REQ::header() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_BATCH_GET_REQ.Header)
  return _internal_header();
}
inline void GORM_PB_BATCH_GET_REQ::unsafe_arena_set_allocated_header(
    ::gorm::GORM_PB_REQ_HEADER* header) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(header_);
  }
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gorm.GORM_PB_BATCH_GET_REQ.Header)
}
inline ::gorm::GORM_PB_REQ_HEADER* GORM_PB_BATCH_GET_REQ::release_header() {
  auto temp = unsafe_arena_release_header();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::gorm::GORM_PB_REQ_HEADER* GORM_PB_BATCH_GET_REQ::unsafe_arena_release_header() {
  // @@protoc_insertion_point(field_release:gorm.GORM_PB_BATCH_GET_REQ.Header)
  
  ::gorm::GORM_PB_REQ_HEADER* temp = header_;
  header_ = nullptr;
  return temp;
}
inline ::gorm::GORM_PB_REQ_HEADER* GORM_PB_BATCH_GET_REQ::_internal_mutable_header() {
  
  if (header_ == nullptr) {
    auto* p = CreateMaybeMessage<::gorm::GORM_PB_REQ_HEADER>(GetArena());
    header_ = p;
  }
  return header_;
}
inline ::gorm::GORM_PB_REQ_HEADER* GORM_PB_BATCH_GET_REQ::mutable_header() {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_BATCH_GET_REQ.Header)
  return _internal_mutable_header();
}
inline void GORM_PB_BATCH_GET_REQ::set_allocated_header(::gorm::GORM_PB_REQ_HEADER* header) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete header_;
  }
  if (header) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(header);
    if (message_arena != submessage_arena) {
      header = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:gorm.GORM_PB_BATCH_GET_REQ.Header)
}

// repeated .gorm.GORM_PB_TABLE Tables = 2;
inline int GORM_PB_BATCH_GET_REQ::_internal_tables_size() const {
  return tables_.size();
}
inline int GORM_PB_BATCH_GET_REQ::tables_size() const {
  return _internal_tables_size();
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_BATCH_GET_REQ::mutable_tables(int index) {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_BATCH_GET_REQ.Tables)
  return tables_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >*
GORM_PB_BATCH_GET_REQ::mutable_tables() {
  // @@protoc_insertion_point(field_mutable_list:gorm.GORM_PB_BATCH_GET_REQ.Tables)
  return &tables_;
}
inline const ::gorm::GORM_PB_TABLE& GORM_PB_BATCH_GET_REQ::_internal_tables(int index) const {
  return tables_.Get(index);
}
inline const ::gorm::GORM_PB_TABLE& GORM_PB_BATCH_GET_REQ::tables(int index) const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_BATCH_GET_REQ.Tables)
  return _internal_tables(index);
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_BATCH_GET_REQ::_internal_add_tables() {
  return tables_.Add();
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_BATCH_GET_REQ::add_tables() {
  // @@protoc_insertion_point(field_add:gorm.GORM_PB_BATCH_GET_REQ.Tables)
  return _internal_add_tables();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >&
GORM_PB_BATCH_GET_REQ::tables() const {
  // @@protoc_insertion_point(field_list:gorm.GORM_PB_BATCH_GET_REQ.Tables)
  return tables_;
}

// -------------------------------------------------------------------

// GORM_PB_BATCH_GET_RSP

// .gorm.GORM_PB_Ret_Code RetCode = 1;
inline bool GORM_PB_BATCH_GET_RSP::_internal_has_retcode() const {
  return this != internal_default_instance() && retcode_ != nullptr;
}
inline bool GORM_PB_BATCH_GET_RSP::has_retcode() const {
  return _internal_has_retcode();
}
inline void GORM_PB_BATCH_GET_RSP::clear_retcode() {
  if (GetArena() == nullptr && retcode_ != nullptr) {
    delete retcode_;
  }
  retcode_ = nullptr;
}
inline const ::gorm::GORM_PB_Ret_Code& GORM_PB_BATCH_GET_RSP::_internal_retcode() const {
  const ::gorm::GORM_PB_Ret_Code* p = retcode_;
  return p != nullptr ? *p : *reinterpret_cast<const ::gorm::GORM_PB_Ret_Code*>(
      &::gorm::_GORM_PB_Ret_Code_default_instance_);
}
inline const ::gorm::GORM_PB_Ret_Code& GORM_PB_BATCH_GET_RSP::retcode() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_BATCH_GET_RSP.RetCode)
  return _internal_retcode();
}
inline void GORM_PB_BATCH_GET_RSP::unsafe_arena_set_allocated_retcode(
    ::gorm::GORM_PB_Ret_Code* retcode) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(retcode_);
  }
  retcode_ = retcode;
  if (retcode) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gorm.GORM_PB_BATCH_GET_RSP.RetCode)
}
inline ::gorm::GORM_PB_Ret_Code* GORM_PB_BATCH_GET_RSP::release_retcode() {
  auto temp = unsafe_arena_release_retcode();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::gorm::GORM_PB_Ret_Code* GORM_PB_BATCH_GET_RSP::unsafe_arena_release_retcode() {
  // @@protoc_insertion_point(field_release:gorm.GORM_PB_BATCH_GET_RSP.RetCode)
  
  ::gorm::GORM_PB_Ret_Code* temp = retcode_;
  retcode_ = nullptr;
  return temp;
}
inline ::gorm::GORM_PB_Ret_Code* GORM_PB_BATCH_GET_RSP::_internal_mutable_retcode() {
  
  if (retcode_ == nullptr) {
    auto* p = CreateMaybeMessage<::gorm::GORM_PB_Ret_Code>(GetArena());
    retcode_ = p;
  }
  return retcode_;
}
inline ::gorm::GORM_PB_Ret_Code* GORM_PB_BATCH_GET_RSP::mutable_retcode() {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_BATCH_GET_RSP.RetCode)
  return _internal_mutable_retcode();
}
inline void GORM_PB_BATCH_GET_RSP::set_allocated_retcode(::gorm::GORM_PB_Ret_Code* retcode) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete retcode_;
  }
  if (retcode) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(retcode);
    if (message_arena != submessage_arena) {
      retcode = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, retcode, submessage_arena);
    }
    
  } else {
    
  }
  retcode_ = retcode;
  // @@protoc_insertion_point(field_set_allocated:gorm.GORM_PB_BATCH_GET_RSP.RetCode)
}

// repeated .gorm.GORM_PB_TABLE Tables = 2;
inline int GORM_PB_BATCH_GET_RSP::_internal_tables_size() const {
  return tables_.size();
}
inline int GORM_PB_BATCH_GET_RSP::tables_size() const {
  return _internal_tables_size();
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_BATCH_GET_RSP::mutable_tables(int index) {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_BATCH_GET_RSP.Tables)
  return tables_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >*
GORM_PB_BATCH_GET_RSP::mutable_tables() {
  // @@protoc_insertion_point(field_mutable_list:gorm.GORM_PB_BATCH_GET_RSP.Tables)
  return &tables_;
}
inline const ::gorm::GORM_PB_TABLE& GORM_PB_BATCH_GET_RSP::_internal_tables(int index) const {
  return tables_.Get(index);
}
inline const ::gorm::GORM_PB_TABLE& GORM_PB_BATCH_GET_RSP::tables(int index) const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_BATCH_GET_RSP.Tables)
  return _internal_tables(index);
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_BATCH_GET_RSP::_internal_add_tables() {
  return tables_.Add();
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_BATCH_GET_RSP::add_tables() {
  // @@protoc_insertion_point(field_add:gorm.GORM_PB_BATCH_GET_RSP.Tables)
  return _internal_add_tables();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >&
GORM_PB_BATCH_GET_RSP::tables() const {
  // @@protoc_insertion_point(field_list:gorm.GORM_PB_BATCH_GET_RSP.Tables)
  return tables_;
}

// -------------------------------------------------------------------

// GORM_PB_INCREASE_REQ

// .gorm.GORM_PB_REQ_HEADER Header = 1;
inline bool GORM_PB_INCREASE_REQ::_internal_has_header() const {
  return this != internal_default_instance() && header_ != nullptr;
}
inline bool GORM_PB_INCREASE_REQ::has_header() const {
  return _internal_has_header();
}
inline void GORM_PB_INCREASE_REQ::clear_header() {
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
}
inline const ::gorm::GORM_PB_REQ_HEADER& GORM_PB_INCREASE_REQ::_internal_header() const {
  const ::gorm::GORM_PB_REQ_HEADER* p = header_;
  return p != nullptr ? *p : *reinterpret_cast<const ::gorm::GORM_PB_REQ_HEADER*>(
      &::gorm::_GORM_PB_REQ_HEADER_default_instance_);
}
inline const ::gorm::GORM_PB_REQ_HEADER& GORM_PB_INCREASE_REQ::header() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_INCREASE_REQ.Header)
  return _internal_header();
}
inline void GORM_PB_INCREASE_REQ::unsafe_arena_set_allocated_header(
    ::gorm::GORM_PB_REQ_HEADER* header) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(header_);
  }
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gorm.GORM_PB_INCREASE_REQ.Header)
}
inline ::gorm::GORM_PB_REQ_HEADER* GORM_PB_INCREASE_REQ::release_header() {
  auto temp = unsafe_arena_release_header();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::gorm::GORM_PB_REQ_HEADER* GORM_PB_INCREASE_REQ::unsafe_arena_release_header() {
  // @@protoc_insertion_point(field_release:gorm.GORM_PB_INCREASE_REQ.Header)
  
  ::gorm::GORM_PB_REQ_HEADER* temp = header_;
  header_ = nullptr;
  return temp;
}
inline ::gorm::GORM_PB_REQ_HEADER* GORM_PB_INCREASE_REQ::_internal_mutable_header() {
  
  if (header_ == nullptr) {
    auto* p = CreateMaybeMessage<::gorm::GORM_PB_REQ_HEADER>(GetArena());
    header_ = p;
  }
  return header_;
}
inline ::gorm::GORM_PB_REQ_HEADER* GORM_PB_INCREASE_REQ::mutable_header() {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_INCREASE_REQ.Header)
  return _internal_mutable_header();
}
inline void GORM_PB_INCREASE_REQ::set_allocated_header(::gorm::GORM_PB_REQ_HEADER* header) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete header_;
  }
  if (header) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(header);
    if (message_arena != submessage_arena) {
      header = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:gorm.GORM_PB_INCREASE_REQ.Header)
}

// repeated .gorm.GORM_PB_TABLE Tables = 2;
inline int GORM_PB_INCREASE_REQ::_internal_tables_size() const {
  return tables_.size();
}
inline int GORM_PB_INCREASE_REQ::tables_size() const {
  return _internal_tables_size();
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_INCREASE_REQ::mutable_tables(int index) {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_INCREASE_REQ.Tables)
  return tables_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >*
GORM_PB_INCREASE_REQ::mutable_tables() {
  // @@protoc_insertion_point(field_mutable_list:gorm.GORM_PB_INCREASE_REQ.Tables)
  return &tables_;
}
inline const ::gorm::GORM_PB_TABLE& GORM_PB_INCREASE_REQ::_internal_tables(int index) const {
  return tables_.Get(index);
}
inline const ::gorm::GORM_PB_TABLE& GORM_PB_INCREASE_REQ::tables(int index) const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_INCREASE_REQ.Tables)
  return _internal_tables(index);
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_INCREASE_REQ::_internal_add_tables() {
  return tables_.Add();
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_INCREASE_REQ::add_tables() {
  // @@protoc_insertion_point(field_add:gorm.GORM_PB_INCREASE_REQ.Tables)
  return _internal_add_tables();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >&
GORM_PB_INCREASE_REQ::tables() const {
  // @@protoc_insertion_point(field_list:gorm.GORM_PB_INCREASE_REQ.Tables)
  return tables_;
}

// string PlusColumns = 3;
inline void GORM_PB_INCREASE_REQ::clear_pluscolumns() {
  pluscolumns_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& GORM_PB_INCREASE_REQ::pluscolumns() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_INCREASE_REQ.PlusColumns)
  return _internal_pluscolumns();
}
inline void GORM_PB_INCREASE_REQ::set_pluscolumns(const std::string& value) {
  _internal_set_pluscolumns(value);
  // @@protoc_insertion_point(field_set:gorm.GORM_PB_INCREASE_REQ.PlusColumns)
}
inline std::string* GORM_PB_INCREASE_REQ::mutable_pluscolumns() {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_INCREASE_REQ.PlusColumns)
  return _internal_mutable_pluscolumns();
}
inline const std::string& GORM_PB_INCREASE_REQ::_internal_pluscolumns() const {
  return pluscolumns_.Get();
}
inline void GORM_PB_INCREASE_REQ::_internal_set_pluscolumns(const std::string& value) {
  
  pluscolumns_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void GORM_PB_INCREASE_REQ::set_pluscolumns(std::string&& value) {
  
  pluscolumns_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:gorm.GORM_PB_INCREASE_REQ.PlusColumns)
}
inline void GORM_PB_INCREASE_REQ::set_pluscolumns(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  pluscolumns_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:gorm.GORM_PB_INCREASE_REQ.PlusColumns)
}
inline void GORM_PB_INCREASE_REQ::set_pluscolumns(const char* value,
    size_t size) {
  
  pluscolumns_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:gorm.GORM_PB_INCREASE_REQ.PlusColumns)
}
inline std::string* GORM_PB_INCREASE_REQ::_internal_mutable_pluscolumns() {
  
  return pluscolumns_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* GORM_PB_INCREASE_REQ::release_pluscolumns() {
  // @@protoc_insertion_point(field_release:gorm.GORM_PB_INCREASE_REQ.PlusColumns)
  return pluscolumns_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GORM_PB_INCREASE_REQ::set_allocated_pluscolumns(std::string* pluscolumns) {
  if (pluscolumns != nullptr) {
    
  } else {
    
  }
  pluscolumns_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), pluscolumns,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:gorm.GORM_PB_INCREASE_REQ.PlusColumns)
}
inline std::string* GORM_PB_INCREASE_REQ::unsafe_arena_release_pluscolumns() {
  // @@protoc_insertion_point(field_unsafe_arena_release:gorm.GORM_PB_INCREASE_REQ.PlusColumns)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return pluscolumns_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void GORM_PB_INCREASE_REQ::unsafe_arena_set_allocated_pluscolumns(
    std::string* pluscolumns) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (pluscolumns != nullptr) {
    
  } else {
    
  }
  pluscolumns_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      pluscolumns, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gorm.GORM_PB_INCREASE_REQ.PlusColumns)
}

// string MinusColumns = 4;
inline void GORM_PB_INCREASE_REQ::clear_minuscolumns() {
  minuscolumns_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& GORM_PB_INCREASE_REQ::minuscolumns() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_INCREASE_REQ.MinusColumns)
  return _internal_minuscolumns();
}
inline void GORM_PB_INCREASE_REQ::set_minuscolumns(const std::string& value) {
  _internal_set_minuscolumns(value);
  // @@protoc_insertion_point(field_set:gorm.GORM_PB_INCREASE_REQ.MinusColumns)
}
inline std::string* GORM_PB_INCREASE_REQ::mutable_minuscolumns() {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_INCREASE_REQ.MinusColumns)
  return _internal_mutable_minuscolumns();
}
inline const std::string& GORM_PB_INCREASE_REQ::_internal_minuscolumns() const {
  return minuscolumns_.Get();
}
inline void GORM_PB_INCREASE_REQ::_internal_set_minuscolumns(const std::string& value) {
  
  minuscolumns_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void GORM_PB_INCREASE_REQ::set_minuscolumns(std::string&& value) {
  
  minuscolumns_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:gorm.GORM_PB_INCREASE_REQ.MinusColumns)
}
inline void GORM_PB_INCREASE_REQ::set_minuscolumns(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  minuscolumns_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:gorm.GORM_PB_INCREASE_REQ.MinusColumns)
}
inline void GORM_PB_INCREASE_REQ::set_minuscolumns(const char* value,
    size_t size) {
  
  minuscolumns_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:gorm.GORM_PB_INCREASE_REQ.MinusColumns)
}
inline std::string* GORM_PB_INCREASE_REQ::_internal_mutable_minuscolumns() {
  
  return minuscolumns_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* GORM_PB_INCREASE_REQ::release_minuscolumns() {
  // @@protoc_insertion_point(field_release:gorm.GORM_PB_INCREASE_REQ.MinusColumns)
  return minuscolumns_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GORM_PB_INCREASE_REQ::set_allocated_minuscolumns(std::string* minuscolumns) {
  if (minuscolumns != nullptr) {
    
  } else {
    
  }
  minuscolumns_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), minuscolumns,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:gorm.GORM_PB_INCREASE_REQ.MinusColumns)
}
inline std::string* GORM_PB_INCREASE_REQ::unsafe_arena_release_minuscolumns() {
  // @@protoc_insertion_point(field_unsafe_arena_release:gorm.GORM_PB_INCREASE_REQ.MinusColumns)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return minuscolumns_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void GORM_PB_INCREASE_REQ::unsafe_arena_set_allocated_minuscolumns(
    std::string* minuscolumns) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (minuscolumns != nullptr) {
    
  } else {
    
  }
  minuscolumns_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      minuscolumns, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gorm.GORM_PB_INCREASE_REQ.MinusColumns)
}

// -------------------------------------------------------------------

// GORM_PB_INCREASE_RSP

// .gorm.GORM_PB_Ret_Code RetCode = 1;
inline bool GORM_PB_INCREASE_RSP::_internal_has_retcode() const {
  return this != internal_default_instance() && retcode_ != nullptr;
}
inline bool GORM_PB_INCREASE_RSP::has_retcode() const {
  return _internal_has_retcode();
}
inline void GORM_PB_INCREASE_RSP::clear_retcode() {
  if (GetArena() == nullptr && retcode_ != nullptr) {
    delete retcode_;
  }
  retcode_ = nullptr;
}
inline const ::gorm::GORM_PB_Ret_Code& GORM_PB_INCREASE_RSP::_internal_retcode() const {
  const ::gorm::GORM_PB_Ret_Code* p = retcode_;
  return p != nullptr ? *p : *reinterpret_cast<const ::gorm::GORM_PB_Ret_Code*>(
      &::gorm::_GORM_PB_Ret_Code_default_instance_);
}
inline const ::gorm::GORM_PB_Ret_Code& GORM_PB_INCREASE_RSP::retcode() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_INCREASE_RSP.RetCode)
  return _internal_retcode();
}
inline void GORM_PB_INCREASE_RSP::unsafe_arena_set_allocated_retcode(
    ::gorm::GORM_PB_Ret_Code* retcode) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(retcode_);
  }
  retcode_ = retcode;
  if (retcode) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gorm.GORM_PB_INCREASE_RSP.RetCode)
}
inline ::gorm::GORM_PB_Ret_Code* GORM_PB_INCREASE_RSP::release_retcode() {
  auto temp = unsafe_arena_release_retcode();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::gorm::GORM_PB_Ret_Code* GORM_PB_INCREASE_RSP::unsafe_arena_release_retcode() {
  // @@protoc_insertion_point(field_release:gorm.GORM_PB_INCREASE_RSP.RetCode)
  
  ::gorm::GORM_PB_Ret_Code* temp = retcode_;
  retcode_ = nullptr;
  return temp;
}
inline ::gorm::GORM_PB_Ret_Code* GORM_PB_INCREASE_RSP::_internal_mutable_retcode() {
  
  if (retcode_ == nullptr) {
    auto* p = CreateMaybeMessage<::gorm::GORM_PB_Ret_Code>(GetArena());
    retcode_ = p;
  }
  return retcode_;
}
inline ::gorm::GORM_PB_Ret_Code* GORM_PB_INCREASE_RSP::mutable_retcode() {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_INCREASE_RSP.RetCode)
  return _internal_mutable_retcode();
}
inline void GORM_PB_INCREASE_RSP::set_allocated_retcode(::gorm::GORM_PB_Ret_Code* retcode) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete retcode_;
  }
  if (retcode) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(retcode);
    if (message_arena != submessage_arena) {
      retcode = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, retcode, submessage_arena);
    }
    
  } else {
    
  }
  retcode_ = retcode;
  // @@protoc_insertion_point(field_set_allocated:gorm.GORM_PB_INCREASE_RSP.RetCode)
}

// repeated .gorm.GORM_PB_TABLE Tables = 2;
inline int GORM_PB_INCREASE_RSP::_internal_tables_size() const {
  return tables_.size();
}
inline int GORM_PB_INCREASE_RSP::tables_size() const {
  return _internal_tables_size();
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_INCREASE_RSP::mutable_tables(int index) {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_INCREASE_RSP.Tables)
  return tables_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >*
GORM_PB_INCREASE_RSP::mutable_tables() {
  // @@protoc_insertion_point(field_mutable_list:gorm.GORM_PB_INCREASE_RSP.Tables)
  return &tables_;
}
inline const ::gorm::GORM_PB_TABLE& GORM_PB_INCREASE_RSP::_internal_tables(int index) const {
  return tables_.Get(index);
}
inline const ::gorm::GORM_PB_TABLE& GORM_PB_INCREASE_RSP::tables(int index) const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_INCREASE_RSP.Tables)
  return _internal_tables(index);
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_INCREASE_RSP::_internal_add_tables() {
  return tables_.Add();
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_INCREASE_RSP::add_tables() {
  // @@protoc_insertion_point(field_add:gorm.GORM_PB_INCREASE_RSP.Tables)
  return _internal_add_tables();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >&
GORM_PB_INCREASE_RSP::tables() const {
  // @@protoc_insertion_point(field_list:gorm.GORM_PB_INCREASE_RSP.Tables)
  return tables_;
}

// sfixed32 AffectedNum = 3;
inline void GORM_PB_INCREASE_RSP::clear_affectednum() {
  affectednum_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GORM_PB_INCREASE_RSP::_internal_affectednum() const {
  return affectednum_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GORM_PB_INCREASE_RSP::affectednum() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_INCREASE_RSP.AffectedNum)
  return _internal_affectednum();
}
inline void GORM_PB_INCREASE_RSP::_internal_set_affectednum(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  affectednum_ = value;
}
inline void GORM_PB_INCREASE_RSP::set_affectednum(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_affectednum(value);
  // @@protoc_insertion_point(field_set:gorm.GORM_PB_INCREASE_RSP.AffectedNum)
}

// -------------------------------------------------------------------

// GORM_PB_DELETE_REQ

// .gorm.GORM_PB_REQ_HEADER Header = 1;
inline bool GORM_PB_DELETE_REQ::_internal_has_header() const {
  return this != internal_default_instance() && header_ != nullptr;
}
inline bool GORM_PB_DELETE_REQ::has_header() const {
  return _internal_has_header();
}
inline void GORM_PB_DELETE_REQ::clear_header() {
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
}
inline const ::gorm::GORM_PB_REQ_HEADER& GORM_PB_DELETE_REQ::_internal_header() const {
  const ::gorm::GORM_PB_REQ_HEADER* p = header_;
  return p != nullptr ? *p : *reinterpret_cast<const ::gorm::GORM_PB_REQ_HEADER*>(
      &::gorm::_GORM_PB_REQ_HEADER_default_instance_);
}
inline const ::gorm::GORM_PB_REQ_HEADER& GORM_PB_DELETE_REQ::header() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_DELETE_REQ.Header)
  return _internal_header();
}
inline void GORM_PB_DELETE_REQ::unsafe_arena_set_allocated_header(
    ::gorm::GORM_PB_REQ_HEADER* header) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(header_);
  }
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gorm.GORM_PB_DELETE_REQ.Header)
}
inline ::gorm::GORM_PB_REQ_HEADER* GORM_PB_DELETE_REQ::release_header() {
  auto temp = unsafe_arena_release_header();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::gorm::GORM_PB_REQ_HEADER* GORM_PB_DELETE_REQ::unsafe_arena_release_header() {
  // @@protoc_insertion_point(field_release:gorm.GORM_PB_DELETE_REQ.Header)
  
  ::gorm::GORM_PB_REQ_HEADER* temp = header_;
  header_ = nullptr;
  return temp;
}
inline ::gorm::GORM_PB_REQ_HEADER* GORM_PB_DELETE_REQ::_internal_mutable_header() {
  
  if (header_ == nullptr) {
    auto* p = CreateMaybeMessage<::gorm::GORM_PB_REQ_HEADER>(GetArena());
    header_ = p;
  }
  return header_;
}
inline ::gorm::GORM_PB_REQ_HEADER* GORM_PB_DELETE_REQ::mutable_header() {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_DELETE_REQ.Header)
  return _internal_mutable_header();
}
inline void GORM_PB_DELETE_REQ::set_allocated_header(::gorm::GORM_PB_REQ_HEADER* header) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete header_;
  }
  if (header) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(header);
    if (message_arena != submessage_arena) {
      header = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:gorm.GORM_PB_DELETE_REQ.Header)
}

// .gorm.GORM_PB_TABLE Table = 2;
inline bool GORM_PB_DELETE_REQ::_internal_has_table() const {
  return this != internal_default_instance() && table_ != nullptr;
}
inline bool GORM_PB_DELETE_REQ::has_table() const {
  return _internal_has_table();
}
inline const ::gorm::GORM_PB_TABLE& GORM_PB_DELETE_REQ::_internal_table() const {
  const ::gorm::GORM_PB_TABLE* p = table_;
  return p != nullptr ? *p : *reinterpret_cast<const ::gorm::GORM_PB_TABLE*>(
      &::gorm::_GORM_PB_TABLE_default_instance_);
}
inline const ::gorm::GORM_PB_TABLE& GORM_PB_DELETE_REQ::table() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_DELETE_REQ.Table)
  return _internal_table();
}
inline void GORM_PB_DELETE_REQ::unsafe_arena_set_allocated_table(
    ::gorm::GORM_PB_TABLE* table) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(table_);
  }
  table_ = table;
  if (table) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gorm.GORM_PB_DELETE_REQ.Table)
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_DELETE_REQ::release_table() {
  auto temp = unsafe_arena_release_table();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_DELETE_REQ::unsafe_arena_release_table() {
  // @@protoc_insertion_point(field_release:gorm.GORM_PB_DELETE_REQ.Table)
  
  ::gorm::GORM_PB_TABLE* temp = table_;
  table_ = nullptr;
  return temp;
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_DELETE_REQ::_internal_mutable_table() {
  
  if (table_ == nullptr) {
    auto* p = CreateMaybeMessage<::gorm::GORM_PB_TABLE>(GetArena());
    table_ = p;
  }
  return table_;
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_DELETE_REQ::mutable_table() {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_DELETE_REQ.Table)
  return _internal_mutable_table();
}
inline void GORM_PB_DELETE_REQ::set_allocated_table(::gorm::GORM_PB_TABLE* table) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(table_);
  }
  if (table) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(table)->GetArena();
    if (message_arena != submessage_arena) {
      table = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, table, submessage_arena);
    }
    
  } else {
    
  }
  table_ = table;
  // @@protoc_insertion_point(field_set_allocated:gorm.GORM_PB_DELETE_REQ.Table)
}

// -------------------------------------------------------------------

// GORM_PB_DELETE_RSP

// .gorm.GORM_PB_Ret_Code RetCode = 1;
inline bool GORM_PB_DELETE_RSP::_internal_has_retcode() const {
  return this != internal_default_instance() && retcode_ != nullptr;
}
inline bool GORM_PB_DELETE_RSP::has_retcode() const {
  return _internal_has_retcode();
}
inline void GORM_PB_DELETE_RSP::clear_retcode() {
  if (GetArena() == nullptr && retcode_ != nullptr) {
    delete retcode_;
  }
  retcode_ = nullptr;
}
inline const ::gorm::GORM_PB_Ret_Code& GORM_PB_DELETE_RSP::_internal_retcode() const {
  const ::gorm::GORM_PB_Ret_Code* p = retcode_;
  return p != nullptr ? *p : *reinterpret_cast<const ::gorm::GORM_PB_Ret_Code*>(
      &::gorm::_GORM_PB_Ret_Code_default_instance_);
}
inline const ::gorm::GORM_PB_Ret_Code& GORM_PB_DELETE_RSP::retcode() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_DELETE_RSP.RetCode)
  return _internal_retcode();
}
inline void GORM_PB_DELETE_RSP::unsafe_arena_set_allocated_retcode(
    ::gorm::GORM_PB_Ret_Code* retcode) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(retcode_);
  }
  retcode_ = retcode;
  if (retcode) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gorm.GORM_PB_DELETE_RSP.RetCode)
}
inline ::gorm::GORM_PB_Ret_Code* GORM_PB_DELETE_RSP::release_retcode() {
  auto temp = unsafe_arena_release_retcode();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::gorm::GORM_PB_Ret_Code* GORM_PB_DELETE_RSP::unsafe_arena_release_retcode() {
  // @@protoc_insertion_point(field_release:gorm.GORM_PB_DELETE_RSP.RetCode)
  
  ::gorm::GORM_PB_Ret_Code* temp = retcode_;
  retcode_ = nullptr;
  return temp;
}
inline ::gorm::GORM_PB_Ret_Code* GORM_PB_DELETE_RSP::_internal_mutable_retcode() {
  
  if (retcode_ == nullptr) {
    auto* p = CreateMaybeMessage<::gorm::GORM_PB_Ret_Code>(GetArena());
    retcode_ = p;
  }
  return retcode_;
}
inline ::gorm::GORM_PB_Ret_Code* GORM_PB_DELETE_RSP::mutable_retcode() {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_DELETE_RSP.RetCode)
  return _internal_mutable_retcode();
}
inline void GORM_PB_DELETE_RSP::set_allocated_retcode(::gorm::GORM_PB_Ret_Code* retcode) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete retcode_;
  }
  if (retcode) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(retcode);
    if (message_arena != submessage_arena) {
      retcode = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, retcode, submessage_arena);
    }
    
  } else {
    
  }
  retcode_ = retcode;
  // @@protoc_insertion_point(field_set_allocated:gorm.GORM_PB_DELETE_RSP.RetCode)
}

// sfixed32 AffectedNum = 2;
inline void GORM_PB_DELETE_RSP::clear_affectednum() {
  affectednum_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GORM_PB_DELETE_RSP::_internal_affectednum() const {
  return affectednum_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GORM_PB_DELETE_RSP::affectednum() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_DELETE_RSP.AffectedNum)
  return _internal_affectednum();
}
inline void GORM_PB_DELETE_RSP::_internal_set_affectednum(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  affectednum_ = value;
}
inline void GORM_PB_DELETE_RSP::set_affectednum(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_affectednum(value);
  // @@protoc_insertion_point(field_set:gorm.GORM_PB_DELETE_RSP.AffectedNum)
}

// -------------------------------------------------------------------

// GORM_PB_GET_BY_PARTKEY_REQ

// .gorm.GORM_PB_REQ_HEADER Header = 1;
inline bool GORM_PB_GET_BY_PARTKEY_REQ::_internal_has_header() const {
  return this != internal_default_instance() && header_ != nullptr;
}
inline bool GORM_PB_GET_BY_PARTKEY_REQ::has_header() const {
  return _internal_has_header();
}
inline void GORM_PB_GET_BY_PARTKEY_REQ::clear_header() {
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
}
inline const ::gorm::GORM_PB_REQ_HEADER& GORM_PB_GET_BY_PARTKEY_REQ::_internal_header() const {
  const ::gorm::GORM_PB_REQ_HEADER* p = header_;
  return p != nullptr ? *p : *reinterpret_cast<const ::gorm::GORM_PB_REQ_HEADER*>(
      &::gorm::_GORM_PB_REQ_HEADER_default_instance_);
}
inline const ::gorm::GORM_PB_REQ_HEADER& GORM_PB_GET_BY_PARTKEY_REQ::header() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_GET_BY_PARTKEY_REQ.Header)
  return _internal_header();
}
inline void GORM_PB_GET_BY_PARTKEY_REQ::unsafe_arena_set_allocated_header(
    ::gorm::GORM_PB_REQ_HEADER* header) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(header_);
  }
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gorm.GORM_PB_GET_BY_PARTKEY_REQ.Header)
}
inline ::gorm::GORM_PB_REQ_HEADER* GORM_PB_GET_BY_PARTKEY_REQ::release_header() {
  auto temp = unsafe_arena_release_header();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::gorm::GORM_PB_REQ_HEADER* GORM_PB_GET_BY_PARTKEY_REQ::unsafe_arena_release_header() {
  // @@protoc_insertion_point(field_release:gorm.GORM_PB_GET_BY_PARTKEY_REQ.Header)
  
  ::gorm::GORM_PB_REQ_HEADER* temp = header_;
  header_ = nullptr;
  return temp;
}
inline ::gorm::GORM_PB_REQ_HEADER* GORM_PB_GET_BY_PARTKEY_REQ::_internal_mutable_header() {
  
  if (header_ == nullptr) {
    auto* p = CreateMaybeMessage<::gorm::GORM_PB_REQ_HEADER>(GetArena());
    header_ = p;
  }
  return header_;
}
inline ::gorm::GORM_PB_REQ_HEADER* GORM_PB_GET_BY_PARTKEY_REQ::mutable_header() {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_GET_BY_PARTKEY_REQ.Header)
  return _internal_mutable_header();
}
inline void GORM_PB_GET_BY_PARTKEY_REQ::set_allocated_header(::gorm::GORM_PB_REQ_HEADER* header) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete header_;
  }
  if (header) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(header);
    if (message_arena != submessage_arena) {
      header = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:gorm.GORM_PB_GET_BY_PARTKEY_REQ.Header)
}

// repeated .gorm.GORM_PB_TABLE Tables = 2;
inline int GORM_PB_GET_BY_PARTKEY_REQ::_internal_tables_size() const {
  return tables_.size();
}
inline int GORM_PB_GET_BY_PARTKEY_REQ::tables_size() const {
  return _internal_tables_size();
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_GET_BY_PARTKEY_REQ::mutable_tables(int index) {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_GET_BY_PARTKEY_REQ.Tables)
  return tables_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >*
GORM_PB_GET_BY_PARTKEY_REQ::mutable_tables() {
  // @@protoc_insertion_point(field_mutable_list:gorm.GORM_PB_GET_BY_PARTKEY_REQ.Tables)
  return &tables_;
}
inline const ::gorm::GORM_PB_TABLE& GORM_PB_GET_BY_PARTKEY_REQ::_internal_tables(int index) const {
  return tables_.Get(index);
}
inline const ::gorm::GORM_PB_TABLE& GORM_PB_GET_BY_PARTKEY_REQ::tables(int index) const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_GET_BY_PARTKEY_REQ.Tables)
  return _internal_tables(index);
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_GET_BY_PARTKEY_REQ::_internal_add_tables() {
  return tables_.Add();
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_GET_BY_PARTKEY_REQ::add_tables() {
  // @@protoc_insertion_point(field_add:gorm.GORM_PB_GET_BY_PARTKEY_REQ.Tables)
  return _internal_add_tables();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >&
GORM_PB_GET_BY_PARTKEY_REQ::tables() const {
  // @@protoc_insertion_point(field_list:gorm.GORM_PB_GET_BY_PARTKEY_REQ.Tables)
  return tables_;
}

// -------------------------------------------------------------------

// GORM_PB_GET_BY_PARTKEY_RSP

// .gorm.GORM_PB_Ret_Code RetCode = 1;
inline bool GORM_PB_GET_BY_PARTKEY_RSP::_internal_has_retcode() const {
  return this != internal_default_instance() && retcode_ != nullptr;
}
inline bool GORM_PB_GET_BY_PARTKEY_RSP::has_retcode() const {
  return _internal_has_retcode();
}
inline void GORM_PB_GET_BY_PARTKEY_RSP::clear_retcode() {
  if (GetArena() == nullptr && retcode_ != nullptr) {
    delete retcode_;
  }
  retcode_ = nullptr;
}
inline const ::gorm::GORM_PB_Ret_Code& GORM_PB_GET_BY_PARTKEY_RSP::_internal_retcode() const {
  const ::gorm::GORM_PB_Ret_Code* p = retcode_;
  return p != nullptr ? *p : *reinterpret_cast<const ::gorm::GORM_PB_Ret_Code*>(
      &::gorm::_GORM_PB_Ret_Code_default_instance_);
}
inline const ::gorm::GORM_PB_Ret_Code& GORM_PB_GET_BY_PARTKEY_RSP::retcode() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_GET_BY_PARTKEY_RSP.RetCode)
  return _internal_retcode();
}
inline void GORM_PB_GET_BY_PARTKEY_RSP::unsafe_arena_set_allocated_retcode(
    ::gorm::GORM_PB_Ret_Code* retcode) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(retcode_);
  }
  retcode_ = retcode;
  if (retcode) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gorm.GORM_PB_GET_BY_PARTKEY_RSP.RetCode)
}
inline ::gorm::GORM_PB_Ret_Code* GORM_PB_GET_BY_PARTKEY_RSP::release_retcode() {
  auto temp = unsafe_arena_release_retcode();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::gorm::GORM_PB_Ret_Code* GORM_PB_GET_BY_PARTKEY_RSP::unsafe_arena_release_retcode() {
  // @@protoc_insertion_point(field_release:gorm.GORM_PB_GET_BY_PARTKEY_RSP.RetCode)
  
  ::gorm::GORM_PB_Ret_Code* temp = retcode_;
  retcode_ = nullptr;
  return temp;
}
inline ::gorm::GORM_PB_Ret_Code* GORM_PB_GET_BY_PARTKEY_RSP::_internal_mutable_retcode() {
  
  if (retcode_ == nullptr) {
    auto* p = CreateMaybeMessage<::gorm::GORM_PB_Ret_Code>(GetArena());
    retcode_ = p;
  }
  return retcode_;
}
inline ::gorm::GORM_PB_Ret_Code* GORM_PB_GET_BY_PARTKEY_RSP::mutable_retcode() {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_GET_BY_PARTKEY_RSP.RetCode)
  return _internal_mutable_retcode();
}
inline void GORM_PB_GET_BY_PARTKEY_RSP::set_allocated_retcode(::gorm::GORM_PB_Ret_Code* retcode) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete retcode_;
  }
  if (retcode) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(retcode);
    if (message_arena != submessage_arena) {
      retcode = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, retcode, submessage_arena);
    }
    
  } else {
    
  }
  retcode_ = retcode;
  // @@protoc_insertion_point(field_set_allocated:gorm.GORM_PB_GET_BY_PARTKEY_RSP.RetCode)
}

// repeated .gorm.GORM_PB_TABLE Tables = 2;
inline int GORM_PB_GET_BY_PARTKEY_RSP::_internal_tables_size() const {
  return tables_.size();
}
inline int GORM_PB_GET_BY_PARTKEY_RSP::tables_size() const {
  return _internal_tables_size();
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_GET_BY_PARTKEY_RSP::mutable_tables(int index) {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_GET_BY_PARTKEY_RSP.Tables)
  return tables_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >*
GORM_PB_GET_BY_PARTKEY_RSP::mutable_tables() {
  // @@protoc_insertion_point(field_mutable_list:gorm.GORM_PB_GET_BY_PARTKEY_RSP.Tables)
  return &tables_;
}
inline const ::gorm::GORM_PB_TABLE& GORM_PB_GET_BY_PARTKEY_RSP::_internal_tables(int index) const {
  return tables_.Get(index);
}
inline const ::gorm::GORM_PB_TABLE& GORM_PB_GET_BY_PARTKEY_RSP::tables(int index) const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_GET_BY_PARTKEY_RSP.Tables)
  return _internal_tables(index);
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_GET_BY_PARTKEY_RSP::_internal_add_tables() {
  return tables_.Add();
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_GET_BY_PARTKEY_RSP::add_tables() {
  // @@protoc_insertion_point(field_add:gorm.GORM_PB_GET_BY_PARTKEY_RSP.Tables)
  return _internal_add_tables();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >&
GORM_PB_GET_BY_PARTKEY_RSP::tables() const {
  // @@protoc_insertion_point(field_list:gorm.GORM_PB_GET_BY_PARTKEY_RSP.Tables)
  return tables_;
}

// -------------------------------------------------------------------

// GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ

// .gorm.GORM_PB_REQ_HEADER Header = 1;
inline bool GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ::_internal_has_header() const {
  return this != internal_default_instance() && header_ != nullptr;
}
inline bool GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ::has_header() const {
  return _internal_has_header();
}
inline void GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ::clear_header() {
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
}
inline const ::gorm::GORM_PB_REQ_HEADER& GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ::_internal_header() const {
  const ::gorm::GORM_PB_REQ_HEADER* p = header_;
  return p != nullptr ? *p : *reinterpret_cast<const ::gorm::GORM_PB_REQ_HEADER*>(
      &::gorm::_GORM_PB_REQ_HEADER_default_instance_);
}
inline const ::gorm::GORM_PB_REQ_HEADER& GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ::header() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ.Header)
  return _internal_header();
}
inline void GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ::unsafe_arena_set_allocated_header(
    ::gorm::GORM_PB_REQ_HEADER* header) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(header_);
  }
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ.Header)
}
inline ::gorm::GORM_PB_REQ_HEADER* GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ::release_header() {
  auto temp = unsafe_arena_release_header();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::gorm::GORM_PB_REQ_HEADER* GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ::unsafe_arena_release_header() {
  // @@protoc_insertion_point(field_release:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ.Header)
  
  ::gorm::GORM_PB_REQ_HEADER* temp = header_;
  header_ = nullptr;
  return temp;
}
inline ::gorm::GORM_PB_REQ_HEADER* GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ::_internal_mutable_header() {
  
  if (header_ == nullptr) {
    auto* p = CreateMaybeMessage<::gorm::GORM_PB_REQ_HEADER>(GetArena());
    header_ = p;
  }
  return header_;
}
inline ::gorm::GORM_PB_REQ_HEADER* GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ::mutable_header() {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ.Header)
  return _internal_mutable_header();
}
inline void GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ::set_allocated_header(::gorm::GORM_PB_REQ_HEADER* header) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete header_;
  }
  if (header) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(header);
    if (message_arena != submessage_arena) {
      header = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, header, submessage_arena);
    }
    
  } else {
    
  }
  header_ = header;
  // @@protoc_insertion_point(field_set_allocated:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ.Header)
}

// repeated .gorm.GORM_PB_TABLE Tables = 2;
inline int GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ::_internal_tables_size() const {
  return tables_.size();
}
inline int GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ::tables_size() const {
  return _internal_tables_size();
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ::mutable_tables(int index) {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ.Tables)
  return tables_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >*
GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ::mutable_tables() {
  // @@protoc_insertion_point(field_mutable_list:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ.Tables)
  return &tables_;
}
inline const ::gorm::GORM_PB_TABLE& GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ::_internal_tables(int index) const {
  return tables_.Get(index);
}
inline const ::gorm::GORM_PB_TABLE& GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ::tables(int index) const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ.Tables)
  return _internal_tables(index);
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ::_internal_add_tables() {
  return tables_.Add();
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ::add_tables() {
  // @@protoc_insertion_point(field_add:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ.Tables)
  return _internal_add_tables();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >&
GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ::tables() const {
  // @@protoc_insertion_point(field_list:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ.Tables)
  return tables_;
}

// -------------------------------------------------------------------

// GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP

// .gorm.GORM_PB_Ret_Code RetCode = 1;
inline bool GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP::_internal_has_retcode() const {
  return this != internal_default_instance() && retcode_ != nullptr;
}
inline bool GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP::has_retcode() const {
  return _internal_has_retcode();
}
inline void GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP::clear_retcode() {
  if (GetArena() == nullptr && retcode_ != nullptr) {
    delete retcode_;
  }
  retcode_ = nullptr;
}
inline const ::gorm::GORM_PB_Ret_Code& GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP::_internal_retcode() const {
  const ::gorm::GORM_PB_Ret_Code* p = retcode_;
  return p != nullptr ? *p : *reinterpret_cast<const ::gorm::GORM_PB_Ret_Code*>(
      &::gorm::_GORM_PB_Ret_Code_default_instance_);
}
inline const ::gorm::GORM_PB_Ret_Code& GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP::retcode() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP.RetCode)
  return _internal_retcode();
}
inline void GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP::unsafe_arena_set_allocated_retcode(
    ::gorm::GORM_PB_Ret_Code* retcode) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(retcode_);
  }
  retcode_ = retcode;
  if (retcode) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP.RetCode)
}
inline ::gorm::GORM_PB_Ret_Code* GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP::release_retcode() {
  auto temp = unsafe_arena_release_retcode();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::gorm::GORM_PB_Ret_Code* GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP::unsafe_arena_release_retcode() {
  // @@protoc_insertion_point(field_release:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP.RetCode)
  
  ::gorm::GORM_PB_Ret_Code* temp = retcode_;
  retcode_ = nullptr;
  return temp;
}
inline ::gorm::GORM_PB_Ret_Code* GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP::_internal_mutable_retcode() {
  
  if (retcode_ == nullptr) {
    auto* p = CreateMaybeMessage<::gorm::GORM_PB_Ret_Code>(GetArena());
    retcode_ = p;
  }
  return retcode_;
}
inline ::gorm::GORM_PB_Ret_Code* GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP::mutable_retcode() {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP.RetCode)
  return _internal_mutable_retcode();
}
inline void GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP::set_allocated_retcode(::gorm::GORM_PB_Ret_Code* retcode) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete retcode_;
  }
  if (retcode) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(retcode);
    if (message_arena != submessage_arena) {
      retcode = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, retcode, submessage_arena);
    }
    
  } else {
    
  }
  retcode_ = retcode;
  // @@protoc_insertion_point(field_set_allocated:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP.RetCode)
}

// repeated .gorm.GORM_PB_TABLE Tables = 2;
inline int GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP::_internal_tables_size() const {
  return tables_.size();
}
inline int GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP::tables_size() const {
  return _internal_tables_size();
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP::mutable_tables(int index) {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP.Tables)
  return tables_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >*
GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP::mutable_tables() {
  // @@protoc_insertion_point(field_mutable_list:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP.Tables)
  return &tables_;
}
inline const ::gorm::GORM_PB_TABLE& GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP::_internal_tables(int index) const {
  return tables_.Get(index);
}
inline const ::gorm::GORM_PB_TABLE& GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP::tables(int index) const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP.Tables)
  return _internal_tables(index);
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP::_internal_add_tables() {
  return tables_.Add();
}
inline ::gorm::GORM_PB_TABLE* GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP::add_tables() {
  // @@protoc_insertion_point(field_add:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP.Tables)
  return _internal_add_tables();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_TABLE >&
GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP::tables() const {
  // @@protoc_insertion_point(field_list:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP.Tables)
  return tables_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace gorm

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::gorm::GORM_CODE> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::gorm::GORM_CODE>() {
  return ::gorm::GORM_CODE_descriptor();
}
template <> struct is_proto_enum< ::gorm::GORM_CMD> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::gorm::GORM_CMD>() {
  return ::gorm::GORM_CMD_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_gorm_5fpb_5fproto_2eproto
