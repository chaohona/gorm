// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gorm-db.proto

#include "gorm-db.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace gorm {
class GORM_PB_Table_roleDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GORM_PB_Table_role> _instance;
} _GORM_PB_Table_role_default_instance_;
}  // namespace gorm
static void InitDefaultsscc_info_GORM_PB_Table_role_gorm_2ddb_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gorm::_GORM_PB_Table_role_default_instance_;
    new (ptr) ::gorm::GORM_PB_Table_role();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gorm::GORM_PB_Table_role::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GORM_PB_Table_role_gorm_2ddb_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GORM_PB_Table_role_gorm_2ddb_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_gorm_2ddb_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_gorm_2ddb_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_gorm_2ddb_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_gorm_2ddb_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_Table_role, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_Table_role, version_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_Table_role, roleid_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_Table_role, rolename_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_Table_role, level_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_Table_role, exp_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_Table_role, characterid_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_Table_role, gold_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_Table_role, offlinetime_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_Table_role, inited_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_Table_role, createtime_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_Table_role, face_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_Table_role, online_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::gorm::GORM_PB_Table_role)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gorm::_GORM_PB_Table_role_default_instance_),
};

const char descriptor_table_protodef_gorm_2ddb_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rgorm-db.proto\022\004gorm\"\335\001\n\022GORM_PB_Table_"
  "role\022\017\n\007version\030\001 \001(\004\022\016\n\006roleid\030\002 \001(\003\022\020\n"
  "\010rolename\030\003 \001(\t\022\r\n\005level\030\004 \001(\005\022\013\n\003exp\030\005 "
  "\001(\003\022\023\n\013characterid\030\006 \001(\005\022\014\n\004gold\030\007 \001(\005\022\023"
  "\n\013offlinetime\030\010 \001(\003\022\016\n\006inited\030\t \001(\005\022\022\n\nc"
  "reatetime\030\n \001(\003\022\014\n\004face\030\013 \001(\t\022\016\n\006online\030"
  "\014 \001(\003B\013Z\tgorm/gormb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_gorm_2ddb_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_gorm_2ddb_2eproto_sccs[1] = {
  &scc_info_GORM_PB_Table_role_gorm_2ddb_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_gorm_2ddb_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_gorm_2ddb_2eproto = {
  false, false, descriptor_table_protodef_gorm_2ddb_2eproto, "gorm-db.proto", 266,
  &descriptor_table_gorm_2ddb_2eproto_once, descriptor_table_gorm_2ddb_2eproto_sccs, descriptor_table_gorm_2ddb_2eproto_deps, 1, 0,
  schemas, file_default_instances, TableStruct_gorm_2ddb_2eproto::offsets,
  file_level_metadata_gorm_2ddb_2eproto, 1, file_level_enum_descriptors_gorm_2ddb_2eproto, file_level_service_descriptors_gorm_2ddb_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_gorm_2ddb_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_gorm_2ddb_2eproto)), true);
namespace gorm {

// ===================================================================

void GORM_PB_Table_role::InitAsDefaultInstance() {
}
class GORM_PB_Table_role::_Internal {
 public:
};

GORM_PB_Table_role::GORM_PB_Table_role(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gorm.GORM_PB_Table_role)
}
GORM_PB_Table_role::GORM_PB_Table_role(const GORM_PB_Table_role& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  rolename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_rolename().empty()) {
    rolename_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_rolename(),
      GetArena());
  }
  face_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_face().empty()) {
    face_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_face(),
      GetArena());
  }
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&online_) -
    reinterpret_cast<char*>(&version_)) + sizeof(online_));
  // @@protoc_insertion_point(copy_constructor:gorm.GORM_PB_Table_role)
}

void GORM_PB_Table_role::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GORM_PB_Table_role_gorm_2ddb_2eproto.base);
  rolename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  face_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&online_) -
      reinterpret_cast<char*>(&version_)) + sizeof(online_));
}

GORM_PB_Table_role::~GORM_PB_Table_role() {
  // @@protoc_insertion_point(destructor:gorm.GORM_PB_Table_role)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GORM_PB_Table_role::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  rolename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  face_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GORM_PB_Table_role::ArenaDtor(void* object) {
  GORM_PB_Table_role* _this = reinterpret_cast< GORM_PB_Table_role* >(object);
  (void)_this;
}
void GORM_PB_Table_role::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GORM_PB_Table_role::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GORM_PB_Table_role& GORM_PB_Table_role::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GORM_PB_Table_role_gorm_2ddb_2eproto.base);
  return *internal_default_instance();
}


void GORM_PB_Table_role::Clear() {
// @@protoc_insertion_point(message_clear_start:gorm.GORM_PB_Table_role)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rolename_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  face_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&online_) -
      reinterpret_cast<char*>(&version_)) + sizeof(online_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GORM_PB_Table_role::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 roleid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          roleid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string rolename = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_rolename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gorm.GORM_PB_Table_role.rolename"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 level = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 exp = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          exp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 characterid = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          characterid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 gold = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          gold_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 offlinetime = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          offlinetime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 inited = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          inited_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 createtime = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          createtime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string face = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          auto str = _internal_mutable_face();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gorm.GORM_PB_Table_role.face"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 online = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          online_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GORM_PB_Table_role::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gorm.GORM_PB_Table_role)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 version = 1;
  if (this->version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_version(), target);
  }

  // int64 roleid = 2;
  if (this->roleid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_roleid(), target);
  }

  // string rolename = 3;
  if (this->rolename().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_rolename().data(), static_cast<int>(this->_internal_rolename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gorm.GORM_PB_Table_role.rolename");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_rolename(), target);
  }

  // int32 level = 4;
  if (this->level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_level(), target);
  }

  // int64 exp = 5;
  if (this->exp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_exp(), target);
  }

  // int32 characterid = 6;
  if (this->characterid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_characterid(), target);
  }

  // int32 gold = 7;
  if (this->gold() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_gold(), target);
  }

  // int64 offlinetime = 8;
  if (this->offlinetime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(8, this->_internal_offlinetime(), target);
  }

  // int32 inited = 9;
  if (this->inited() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(9, this->_internal_inited(), target);
  }

  // int64 createtime = 10;
  if (this->createtime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(10, this->_internal_createtime(), target);
  }

  // string face = 11;
  if (this->face().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_face().data(), static_cast<int>(this->_internal_face().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gorm.GORM_PB_Table_role.face");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_face(), target);
  }

  // int64 online = 12;
  if (this->online() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(12, this->_internal_online(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gorm.GORM_PB_Table_role)
  return target;
}

size_t GORM_PB_Table_role::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gorm.GORM_PB_Table_role)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string rolename = 3;
  if (this->rolename().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_rolename());
  }

  // string face = 11;
  if (this->face().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_face());
  }

  // uint64 version = 1;
  if (this->version() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_version());
  }

  // int64 roleid = 2;
  if (this->roleid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_roleid());
  }

  // int64 exp = 5;
  if (this->exp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_exp());
  }

  // int32 level = 4;
  if (this->level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_level());
  }

  // int32 characterid = 6;
  if (this->characterid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_characterid());
  }

  // int64 offlinetime = 8;
  if (this->offlinetime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_offlinetime());
  }

  // int32 gold = 7;
  if (this->gold() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_gold());
  }

  // int32 inited = 9;
  if (this->inited() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_inited());
  }

  // int64 createtime = 10;
  if (this->createtime() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_createtime());
  }

  // int64 online = 12;
  if (this->online() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_online());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GORM_PB_Table_role::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gorm.GORM_PB_Table_role)
  GOOGLE_DCHECK_NE(&from, this);
  const GORM_PB_Table_role* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GORM_PB_Table_role>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gorm.GORM_PB_Table_role)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gorm.GORM_PB_Table_role)
    MergeFrom(*source);
  }
}

void GORM_PB_Table_role::MergeFrom(const GORM_PB_Table_role& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gorm.GORM_PB_Table_role)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rolename().size() > 0) {
    _internal_set_rolename(from._internal_rolename());
  }
  if (from.face().size() > 0) {
    _internal_set_face(from._internal_face());
  }
  if (from.version() != 0) {
    _internal_set_version(from._internal_version());
  }
  if (from.roleid() != 0) {
    _internal_set_roleid(from._internal_roleid());
  }
  if (from.exp() != 0) {
    _internal_set_exp(from._internal_exp());
  }
  if (from.level() != 0) {
    _internal_set_level(from._internal_level());
  }
  if (from.characterid() != 0) {
    _internal_set_characterid(from._internal_characterid());
  }
  if (from.offlinetime() != 0) {
    _internal_set_offlinetime(from._internal_offlinetime());
  }
  if (from.gold() != 0) {
    _internal_set_gold(from._internal_gold());
  }
  if (from.inited() != 0) {
    _internal_set_inited(from._internal_inited());
  }
  if (from.createtime() != 0) {
    _internal_set_createtime(from._internal_createtime());
  }
  if (from.online() != 0) {
    _internal_set_online(from._internal_online());
  }
}

void GORM_PB_Table_role::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gorm.GORM_PB_Table_role)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GORM_PB_Table_role::CopyFrom(const GORM_PB_Table_role& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gorm.GORM_PB_Table_role)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GORM_PB_Table_role::IsInitialized() const {
  return true;
}

void GORM_PB_Table_role::InternalSwap(GORM_PB_Table_role* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  rolename_.Swap(&other->rolename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  face_.Swap(&other->face_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GORM_PB_Table_role, online_)
      + sizeof(GORM_PB_Table_role::online_)
      - PROTOBUF_FIELD_OFFSET(GORM_PB_Table_role, version_)>(
          reinterpret_cast<char*>(&version_),
          reinterpret_cast<char*>(&other->version_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GORM_PB_Table_role::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace gorm
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::gorm::GORM_PB_Table_role* Arena::CreateMaybeMessage< ::gorm::GORM_PB_Table_role >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gorm::GORM_PB_Table_role >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
