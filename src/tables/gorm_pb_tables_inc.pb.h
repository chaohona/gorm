// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gorm_pb_tables_inc.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_gorm_5fpb_5ftables_5finc_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_gorm_5fpb_5ftables_5finc_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3012000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3012000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "gorm-db.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_gorm_5fpb_5ftables_5finc_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_gorm_5fpb_5ftables_5finc_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[5]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_gorm_5fpb_5ftables_5finc_2eproto;
namespace gorm {
class GORM_PB_COLUMN;
class GORM_PB_COLUMNDefaultTypeInternal;
extern GORM_PB_COLUMNDefaultTypeInternal _GORM_PB_COLUMN_default_instance_;
class GORM_PB_COLUMN_VALUE;
class GORM_PB_COLUMN_VALUEDefaultTypeInternal;
extern GORM_PB_COLUMN_VALUEDefaultTypeInternal _GORM_PB_COLUMN_VALUE_default_instance_;
class GORM_PB_CUSTEM_COLUMNS;
class GORM_PB_CUSTEM_COLUMNSDefaultTypeInternal;
extern GORM_PB_CUSTEM_COLUMNSDefaultTypeInternal _GORM_PB_CUSTEM_COLUMNS_default_instance_;
class GORM_PB_TABLE;
class GORM_PB_TABLEDefaultTypeInternal;
extern GORM_PB_TABLEDefaultTypeInternal _GORM_PB_TABLE_default_instance_;
class GORM_PB_TABLES;
class GORM_PB_TABLESDefaultTypeInternal;
extern GORM_PB_TABLESDefaultTypeInternal _GORM_PB_TABLES_default_instance_;
}  // namespace gorm
PROTOBUF_NAMESPACE_OPEN
template<> ::gorm::GORM_PB_COLUMN* Arena::CreateMaybeMessage<::gorm::GORM_PB_COLUMN>(Arena*);
template<> ::gorm::GORM_PB_COLUMN_VALUE* Arena::CreateMaybeMessage<::gorm::GORM_PB_COLUMN_VALUE>(Arena*);
template<> ::gorm::GORM_PB_CUSTEM_COLUMNS* Arena::CreateMaybeMessage<::gorm::GORM_PB_CUSTEM_COLUMNS>(Arena*);
template<> ::gorm::GORM_PB_TABLE* Arena::CreateMaybeMessage<::gorm::GORM_PB_TABLE>(Arena*);
template<> ::gorm::GORM_PB_TABLES* Arena::CreateMaybeMessage<::gorm::GORM_PB_TABLES>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace gorm {

enum GORM_PB_TABLE_INDEX : int {
  GORM_PB_TABLE_IDX_MIN__ = 0,
  GORM_PB_TABLE_IDX_ROLE = 1,
  GORM_PB_TABLE_IDX_MAX__ = 2,
  GORM_PB_TABLE_INDEX_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  GORM_PB_TABLE_INDEX_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool GORM_PB_TABLE_INDEX_IsValid(int value);
constexpr GORM_PB_TABLE_INDEX GORM_PB_TABLE_INDEX_MIN = GORM_PB_TABLE_IDX_MIN__;
constexpr GORM_PB_TABLE_INDEX GORM_PB_TABLE_INDEX_MAX = GORM_PB_TABLE_IDX_MAX__;
constexpr int GORM_PB_TABLE_INDEX_ARRAYSIZE = GORM_PB_TABLE_INDEX_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GORM_PB_TABLE_INDEX_descriptor();
template<typename T>
inline const std::string& GORM_PB_TABLE_INDEX_Name(T enum_t_value) {
  static_assert(::std::is_same<T, GORM_PB_TABLE_INDEX>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function GORM_PB_TABLE_INDEX_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    GORM_PB_TABLE_INDEX_descriptor(), enum_t_value);
}
inline bool GORM_PB_TABLE_INDEX_Parse(
    const std::string& name, GORM_PB_TABLE_INDEX* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<GORM_PB_TABLE_INDEX>(
    GORM_PB_TABLE_INDEX_descriptor(), name, value);
}
enum GORM_PB_ROLE_FIELD_INDEX : int {
  GORM_PB_FIELD_ROLE_VERSION = 0,
  GORM_PB_FIELD_ROLE_ROLEID = 1,
  GORM_PB_FIELD_ROLE_ROLENAME = 2,
  GORM_PB_FIELD_ROLE_LEVEL = 3,
  GORM_PB_FIELD_ROLE_EXP = 4,
  GORM_PB_FIELD_ROLE_CHARACTERID = 5,
  GORM_PB_FIELD_ROLE_GOLD = 6,
  GORM_PB_FIELD_ROLE_OFFLINETIME = 7,
  GORM_PB_FIELD_ROLE_INITED = 8,
  GORM_PB_FIELD_ROLE_CREATETIME = 9,
  GORM_PB_FIELD_ROLE_FACE = 10,
  GORM_PB_FIELD_ROLE_ONLINE = 11,
  GORM_PB_ROLE_FIELD_INDEX_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  GORM_PB_ROLE_FIELD_INDEX_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool GORM_PB_ROLE_FIELD_INDEX_IsValid(int value);
constexpr GORM_PB_ROLE_FIELD_INDEX GORM_PB_ROLE_FIELD_INDEX_MIN = GORM_PB_FIELD_ROLE_VERSION;
constexpr GORM_PB_ROLE_FIELD_INDEX GORM_PB_ROLE_FIELD_INDEX_MAX = GORM_PB_FIELD_ROLE_ONLINE;
constexpr int GORM_PB_ROLE_FIELD_INDEX_ARRAYSIZE = GORM_PB_ROLE_FIELD_INDEX_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GORM_PB_ROLE_FIELD_INDEX_descriptor();
template<typename T>
inline const std::string& GORM_PB_ROLE_FIELD_INDEX_Name(T enum_t_value) {
  static_assert(::std::is_same<T, GORM_PB_ROLE_FIELD_INDEX>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function GORM_PB_ROLE_FIELD_INDEX_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    GORM_PB_ROLE_FIELD_INDEX_descriptor(), enum_t_value);
}
inline bool GORM_PB_ROLE_FIELD_INDEX_Parse(
    const std::string& name, GORM_PB_ROLE_FIELD_INDEX* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<GORM_PB_ROLE_FIELD_INDEX>(
    GORM_PB_ROLE_FIELD_INDEX_descriptor(), name, value);
}
enum GORM_PB_COLUMN_TYPE : int {
  GORM_PB_COLUMN_TYPE_INVALID = 0,
  GORM_PB_COLUMN_TYPE_INT = 1,
  GORM_PB_COLUMN_TYPE_UINT = 2,
  GORM_PB_COLUMN_TYPE_DOUBLE = 3,
  GORM_PB_COLUMN_TYPE_STRING = 4,
  GORM_PB_COLUMN_TYPE_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  GORM_PB_COLUMN_TYPE_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool GORM_PB_COLUMN_TYPE_IsValid(int value);
constexpr GORM_PB_COLUMN_TYPE GORM_PB_COLUMN_TYPE_MIN = GORM_PB_COLUMN_TYPE_INVALID;
constexpr GORM_PB_COLUMN_TYPE GORM_PB_COLUMN_TYPE_MAX = GORM_PB_COLUMN_TYPE_STRING;
constexpr int GORM_PB_COLUMN_TYPE_ARRAYSIZE = GORM_PB_COLUMN_TYPE_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GORM_PB_COLUMN_TYPE_descriptor();
template<typename T>
inline const std::string& GORM_PB_COLUMN_TYPE_Name(T enum_t_value) {
  static_assert(::std::is_same<T, GORM_PB_COLUMN_TYPE>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function GORM_PB_COLUMN_TYPE_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    GORM_PB_COLUMN_TYPE_descriptor(), enum_t_value);
}
inline bool GORM_PB_COLUMN_TYPE_Parse(
    const std::string& name, GORM_PB_COLUMN_TYPE* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<GORM_PB_COLUMN_TYPE>(
    GORM_PB_COLUMN_TYPE_descriptor(), name, value);
}
// ===================================================================

class GORM_PB_COLUMN_VALUE PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:gorm.GORM_PB_COLUMN_VALUE) */ {
 public:
  inline GORM_PB_COLUMN_VALUE() : GORM_PB_COLUMN_VALUE(nullptr) {};
  virtual ~GORM_PB_COLUMN_VALUE();

  GORM_PB_COLUMN_VALUE(const GORM_PB_COLUMN_VALUE& from);
  GORM_PB_COLUMN_VALUE(GORM_PB_COLUMN_VALUE&& from) noexcept
    : GORM_PB_COLUMN_VALUE() {
    *this = ::std::move(from);
  }

  inline GORM_PB_COLUMN_VALUE& operator=(const GORM_PB_COLUMN_VALUE& from) {
    CopyFrom(from);
    return *this;
  }
  inline GORM_PB_COLUMN_VALUE& operator=(GORM_PB_COLUMN_VALUE&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GORM_PB_COLUMN_VALUE& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GORM_PB_COLUMN_VALUE* internal_default_instance() {
    return reinterpret_cast<const GORM_PB_COLUMN_VALUE*>(
               &_GORM_PB_COLUMN_VALUE_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GORM_PB_COLUMN_VALUE& a, GORM_PB_COLUMN_VALUE& b) {
    a.Swap(&b);
  }
  inline void Swap(GORM_PB_COLUMN_VALUE* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GORM_PB_COLUMN_VALUE* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GORM_PB_COLUMN_VALUE* New() const final {
    return CreateMaybeMessage<GORM_PB_COLUMN_VALUE>(nullptr);
  }

  GORM_PB_COLUMN_VALUE* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GORM_PB_COLUMN_VALUE>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GORM_PB_COLUMN_VALUE& from);
  void MergeFrom(const GORM_PB_COLUMN_VALUE& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GORM_PB_COLUMN_VALUE* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "gorm.GORM_PB_COLUMN_VALUE";
  }
  protected:
  explicit GORM_PB_COLUMN_VALUE(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gorm_5fpb_5ftables_5finc_2eproto);
    return ::descriptor_table_gorm_5fpb_5ftables_5finc_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStringvalueFieldNumber = 5,
    kUintvalueFieldNumber = 2,
    kIntvalueFieldNumber = 3,
    kDoublevalueFieldNumber = 4,
    kTypeFieldNumber = 1,
  };
  // string stringvalue = 5;
  void clear_stringvalue();
  const std::string& stringvalue() const;
  void set_stringvalue(const std::string& value);
  void set_stringvalue(std::string&& value);
  void set_stringvalue(const char* value);
  void set_stringvalue(const char* value, size_t size);
  std::string* mutable_stringvalue();
  std::string* release_stringvalue();
  void set_allocated_stringvalue(std::string* stringvalue);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_stringvalue();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_stringvalue(
      std::string* stringvalue);
  private:
  const std::string& _internal_stringvalue() const;
  void _internal_set_stringvalue(const std::string& value);
  std::string* _internal_mutable_stringvalue();
  public:

  // uint64 uintvalue = 2;
  void clear_uintvalue();
  ::PROTOBUF_NAMESPACE_ID::uint64 uintvalue() const;
  void set_uintvalue(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_uintvalue() const;
  void _internal_set_uintvalue(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // int64 intvalue = 3;
  void clear_intvalue();
  ::PROTOBUF_NAMESPACE_ID::int64 intvalue() const;
  void set_intvalue(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_intvalue() const;
  void _internal_set_intvalue(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // double doublevalue = 4;
  void clear_doublevalue();
  double doublevalue() const;
  void set_doublevalue(double value);
  private:
  double _internal_doublevalue() const;
  void _internal_set_doublevalue(double value);
  public:

  // .gorm.GORM_PB_COLUMN_TYPE type = 1;
  void clear_type();
  ::gorm::GORM_PB_COLUMN_TYPE type() const;
  void set_type(::gorm::GORM_PB_COLUMN_TYPE value);
  private:
  ::gorm::GORM_PB_COLUMN_TYPE _internal_type() const;
  void _internal_set_type(::gorm::GORM_PB_COLUMN_TYPE value);
  public:

  // @@protoc_insertion_point(class_scope:gorm.GORM_PB_COLUMN_VALUE)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr stringvalue_;
  ::PROTOBUF_NAMESPACE_ID::uint64 uintvalue_;
  ::PROTOBUF_NAMESPACE_ID::int64 intvalue_;
  double doublevalue_;
  int type_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gorm_5fpb_5ftables_5finc_2eproto;
};
// -------------------------------------------------------------------

class GORM_PB_COLUMN PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:gorm.GORM_PB_COLUMN) */ {
 public:
  inline GORM_PB_COLUMN() : GORM_PB_COLUMN(nullptr) {};
  virtual ~GORM_PB_COLUMN();

  GORM_PB_COLUMN(const GORM_PB_COLUMN& from);
  GORM_PB_COLUMN(GORM_PB_COLUMN&& from) noexcept
    : GORM_PB_COLUMN() {
    *this = ::std::move(from);
  }

  inline GORM_PB_COLUMN& operator=(const GORM_PB_COLUMN& from) {
    CopyFrom(from);
    return *this;
  }
  inline GORM_PB_COLUMN& operator=(GORM_PB_COLUMN&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GORM_PB_COLUMN& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GORM_PB_COLUMN* internal_default_instance() {
    return reinterpret_cast<const GORM_PB_COLUMN*>(
               &_GORM_PB_COLUMN_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(GORM_PB_COLUMN& a, GORM_PB_COLUMN& b) {
    a.Swap(&b);
  }
  inline void Swap(GORM_PB_COLUMN* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GORM_PB_COLUMN* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GORM_PB_COLUMN* New() const final {
    return CreateMaybeMessage<GORM_PB_COLUMN>(nullptr);
  }

  GORM_PB_COLUMN* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GORM_PB_COLUMN>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GORM_PB_COLUMN& from);
  void MergeFrom(const GORM_PB_COLUMN& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GORM_PB_COLUMN* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "gorm.GORM_PB_COLUMN";
  }
  protected:
  explicit GORM_PB_COLUMN(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gorm_5fpb_5ftables_5finc_2eproto);
    return ::descriptor_table_gorm_5fpb_5ftables_5finc_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // string name = 1;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  std::string* unsafe_arena_release_name();
  GOOGLE_PROTOBUF_RUNTIME_DEPRECATED("The unsafe_arena_ accessors for"
  "    string fields are deprecated and will be removed in a"
  "    future release.")
  void unsafe_arena_set_allocated_name(
      std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // .gorm.GORM_PB_COLUMN_VALUE value = 2;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const ::gorm::GORM_PB_COLUMN_VALUE& value() const;
  ::gorm::GORM_PB_COLUMN_VALUE* release_value();
  ::gorm::GORM_PB_COLUMN_VALUE* mutable_value();
  void set_allocated_value(::gorm::GORM_PB_COLUMN_VALUE* value);
  private:
  const ::gorm::GORM_PB_COLUMN_VALUE& _internal_value() const;
  ::gorm::GORM_PB_COLUMN_VALUE* _internal_mutable_value();
  public:
  void unsafe_arena_set_allocated_value(
      ::gorm::GORM_PB_COLUMN_VALUE* value);
  ::gorm::GORM_PB_COLUMN_VALUE* unsafe_arena_release_value();

  // @@protoc_insertion_point(class_scope:gorm.GORM_PB_COLUMN)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::gorm::GORM_PB_COLUMN_VALUE* value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gorm_5fpb_5ftables_5finc_2eproto;
};
// -------------------------------------------------------------------

class GORM_PB_CUSTEM_COLUMNS PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:gorm.GORM_PB_CUSTEM_COLUMNS) */ {
 public:
  inline GORM_PB_CUSTEM_COLUMNS() : GORM_PB_CUSTEM_COLUMNS(nullptr) {};
  virtual ~GORM_PB_CUSTEM_COLUMNS();

  GORM_PB_CUSTEM_COLUMNS(const GORM_PB_CUSTEM_COLUMNS& from);
  GORM_PB_CUSTEM_COLUMNS(GORM_PB_CUSTEM_COLUMNS&& from) noexcept
    : GORM_PB_CUSTEM_COLUMNS() {
    *this = ::std::move(from);
  }

  inline GORM_PB_CUSTEM_COLUMNS& operator=(const GORM_PB_CUSTEM_COLUMNS& from) {
    CopyFrom(from);
    return *this;
  }
  inline GORM_PB_CUSTEM_COLUMNS& operator=(GORM_PB_CUSTEM_COLUMNS&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GORM_PB_CUSTEM_COLUMNS& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GORM_PB_CUSTEM_COLUMNS* internal_default_instance() {
    return reinterpret_cast<const GORM_PB_CUSTEM_COLUMNS*>(
               &_GORM_PB_CUSTEM_COLUMNS_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(GORM_PB_CUSTEM_COLUMNS& a, GORM_PB_CUSTEM_COLUMNS& b) {
    a.Swap(&b);
  }
  inline void Swap(GORM_PB_CUSTEM_COLUMNS* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GORM_PB_CUSTEM_COLUMNS* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GORM_PB_CUSTEM_COLUMNS* New() const final {
    return CreateMaybeMessage<GORM_PB_CUSTEM_COLUMNS>(nullptr);
  }

  GORM_PB_CUSTEM_COLUMNS* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GORM_PB_CUSTEM_COLUMNS>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GORM_PB_CUSTEM_COLUMNS& from);
  void MergeFrom(const GORM_PB_CUSTEM_COLUMNS& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GORM_PB_CUSTEM_COLUMNS* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "gorm.GORM_PB_CUSTEM_COLUMNS";
  }
  protected:
  explicit GORM_PB_CUSTEM_COLUMNS(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gorm_5fpb_5ftables_5finc_2eproto);
    return ::descriptor_table_gorm_5fpb_5ftables_5finc_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kColumnsFieldNumber = 1,
  };
  // repeated .gorm.GORM_PB_COLUMN columns = 1;
  int columns_size() const;
  private:
  int _internal_columns_size() const;
  public:
  void clear_columns();
  ::gorm::GORM_PB_COLUMN* mutable_columns(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_COLUMN >*
      mutable_columns();
  private:
  const ::gorm::GORM_PB_COLUMN& _internal_columns(int index) const;
  ::gorm::GORM_PB_COLUMN* _internal_add_columns();
  public:
  const ::gorm::GORM_PB_COLUMN& columns(int index) const;
  ::gorm::GORM_PB_COLUMN* add_columns();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_COLUMN >&
      columns() const;

  // @@protoc_insertion_point(class_scope:gorm.GORM_PB_CUSTEM_COLUMNS)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_COLUMN > columns_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gorm_5fpb_5ftables_5finc_2eproto;
};
// -------------------------------------------------------------------

class GORM_PB_TABLE PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:gorm.GORM_PB_TABLE) */ {
 public:
  inline GORM_PB_TABLE() : GORM_PB_TABLE(nullptr) {};
  virtual ~GORM_PB_TABLE();

  GORM_PB_TABLE(const GORM_PB_TABLE& from);
  GORM_PB_TABLE(GORM_PB_TABLE&& from) noexcept
    : GORM_PB_TABLE() {
    *this = ::std::move(from);
  }

  inline GORM_PB_TABLE& operator=(const GORM_PB_TABLE& from) {
    CopyFrom(from);
    return *this;
  }
  inline GORM_PB_TABLE& operator=(GORM_PB_TABLE&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GORM_PB_TABLE& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GORM_PB_TABLE* internal_default_instance() {
    return reinterpret_cast<const GORM_PB_TABLE*>(
               &_GORM_PB_TABLE_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(GORM_PB_TABLE& a, GORM_PB_TABLE& b) {
    a.Swap(&b);
  }
  inline void Swap(GORM_PB_TABLE* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GORM_PB_TABLE* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GORM_PB_TABLE* New() const final {
    return CreateMaybeMessage<GORM_PB_TABLE>(nullptr);
  }

  GORM_PB_TABLE* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GORM_PB_TABLE>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GORM_PB_TABLE& from);
  void MergeFrom(const GORM_PB_TABLE& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GORM_PB_TABLE* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "gorm.GORM_PB_TABLE";
  }
  protected:
  explicit GORM_PB_TABLE(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gorm_5fpb_5ftables_5finc_2eproto);
    return ::descriptor_table_gorm_5fpb_5ftables_5finc_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCustomColumnsFieldNumber = 2,
    kRoleFieldNumber = 3,
    kTableIdFieldNumber = 1,
  };
  // .gorm.GORM_PB_CUSTEM_COLUMNS custom_columns = 2;
  bool has_custom_columns() const;
  private:
  bool _internal_has_custom_columns() const;
  public:
  void clear_custom_columns();
  const ::gorm::GORM_PB_CUSTEM_COLUMNS& custom_columns() const;
  ::gorm::GORM_PB_CUSTEM_COLUMNS* release_custom_columns();
  ::gorm::GORM_PB_CUSTEM_COLUMNS* mutable_custom_columns();
  void set_allocated_custom_columns(::gorm::GORM_PB_CUSTEM_COLUMNS* custom_columns);
  private:
  const ::gorm::GORM_PB_CUSTEM_COLUMNS& _internal_custom_columns() const;
  ::gorm::GORM_PB_CUSTEM_COLUMNS* _internal_mutable_custom_columns();
  public:
  void unsafe_arena_set_allocated_custom_columns(
      ::gorm::GORM_PB_CUSTEM_COLUMNS* custom_columns);
  ::gorm::GORM_PB_CUSTEM_COLUMNS* unsafe_arena_release_custom_columns();

  // .gorm.GORM_PB_Table_role role = 3;
  bool has_role() const;
  private:
  bool _internal_has_role() const;
  public:
  void clear_role();
  const ::gorm::GORM_PB_Table_role& role() const;
  ::gorm::GORM_PB_Table_role* release_role();
  ::gorm::GORM_PB_Table_role* mutable_role();
  void set_allocated_role(::gorm::GORM_PB_Table_role* role);
  private:
  const ::gorm::GORM_PB_Table_role& _internal_role() const;
  ::gorm::GORM_PB_Table_role* _internal_mutable_role();
  public:
  void unsafe_arena_set_allocated_role(
      ::gorm::GORM_PB_Table_role* role);
  ::gorm::GORM_PB_Table_role* unsafe_arena_release_role();

  // int32 TableId = 1;
  void clear_tableid();
  ::PROTOBUF_NAMESPACE_ID::int32 tableid() const;
  void set_tableid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_tableid() const;
  void _internal_set_tableid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:gorm.GORM_PB_TABLE)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::gorm::GORM_PB_CUSTEM_COLUMNS* custom_columns_;
  ::gorm::GORM_PB_Table_role* role_;
  ::PROTOBUF_NAMESPACE_ID::int32 tableid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gorm_5fpb_5ftables_5finc_2eproto;
};
// -------------------------------------------------------------------

class GORM_PB_TABLES PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:gorm.GORM_PB_TABLES) */ {
 public:
  inline GORM_PB_TABLES() : GORM_PB_TABLES(nullptr) {};
  virtual ~GORM_PB_TABLES();

  GORM_PB_TABLES(const GORM_PB_TABLES& from);
  GORM_PB_TABLES(GORM_PB_TABLES&& from) noexcept
    : GORM_PB_TABLES() {
    *this = ::std::move(from);
  }

  inline GORM_PB_TABLES& operator=(const GORM_PB_TABLES& from) {
    CopyFrom(from);
    return *this;
  }
  inline GORM_PB_TABLES& operator=(GORM_PB_TABLES&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const GORM_PB_TABLES& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GORM_PB_TABLES* internal_default_instance() {
    return reinterpret_cast<const GORM_PB_TABLES*>(
               &_GORM_PB_TABLES_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(GORM_PB_TABLES& a, GORM_PB_TABLES& b) {
    a.Swap(&b);
  }
  inline void Swap(GORM_PB_TABLES* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GORM_PB_TABLES* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline GORM_PB_TABLES* New() const final {
    return CreateMaybeMessage<GORM_PB_TABLES>(nullptr);
  }

  GORM_PB_TABLES* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<GORM_PB_TABLES>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const GORM_PB_TABLES& from);
  void MergeFrom(const GORM_PB_TABLES& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GORM_PB_TABLES* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "gorm.GORM_PB_TABLES";
  }
  protected:
  explicit GORM_PB_TABLES(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_gorm_5fpb_5ftables_5finc_2eproto);
    return ::descriptor_table_gorm_5fpb_5ftables_5finc_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRoleFieldNumber = 1,
  };
  // repeated .gorm.GORM_PB_Table_role role = 1;
  int role_size() const;
  private:
  int _internal_role_size() const;
  public:
  void clear_role();
  ::gorm::GORM_PB_Table_role* mutable_role(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_Table_role >*
      mutable_role();
  private:
  const ::gorm::GORM_PB_Table_role& _internal_role(int index) const;
  ::gorm::GORM_PB_Table_role* _internal_add_role();
  public:
  const ::gorm::GORM_PB_Table_role& role(int index) const;
  ::gorm::GORM_PB_Table_role* add_role();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_Table_role >&
      role() const;

  // @@protoc_insertion_point(class_scope:gorm.GORM_PB_TABLES)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_Table_role > role_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_gorm_5fpb_5ftables_5finc_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GORM_PB_COLUMN_VALUE

// .gorm.GORM_PB_COLUMN_TYPE type = 1;
inline void GORM_PB_COLUMN_VALUE::clear_type() {
  type_ = 0;
}
inline ::gorm::GORM_PB_COLUMN_TYPE GORM_PB_COLUMN_VALUE::_internal_type() const {
  return static_cast< ::gorm::GORM_PB_COLUMN_TYPE >(type_);
}
inline ::gorm::GORM_PB_COLUMN_TYPE GORM_PB_COLUMN_VALUE::type() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_COLUMN_VALUE.type)
  return _internal_type();
}
inline void GORM_PB_COLUMN_VALUE::_internal_set_type(::gorm::GORM_PB_COLUMN_TYPE value) {
  
  type_ = value;
}
inline void GORM_PB_COLUMN_VALUE::set_type(::gorm::GORM_PB_COLUMN_TYPE value) {
  _internal_set_type(value);
  // @@protoc_insertion_point(field_set:gorm.GORM_PB_COLUMN_VALUE.type)
}

// uint64 uintvalue = 2;
inline void GORM_PB_COLUMN_VALUE::clear_uintvalue() {
  uintvalue_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GORM_PB_COLUMN_VALUE::_internal_uintvalue() const {
  return uintvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 GORM_PB_COLUMN_VALUE::uintvalue() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_COLUMN_VALUE.uintvalue)
  return _internal_uintvalue();
}
inline void GORM_PB_COLUMN_VALUE::_internal_set_uintvalue(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  uintvalue_ = value;
}
inline void GORM_PB_COLUMN_VALUE::set_uintvalue(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_uintvalue(value);
  // @@protoc_insertion_point(field_set:gorm.GORM_PB_COLUMN_VALUE.uintvalue)
}

// int64 intvalue = 3;
inline void GORM_PB_COLUMN_VALUE::clear_intvalue() {
  intvalue_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 GORM_PB_COLUMN_VALUE::_internal_intvalue() const {
  return intvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 GORM_PB_COLUMN_VALUE::intvalue() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_COLUMN_VALUE.intvalue)
  return _internal_intvalue();
}
inline void GORM_PB_COLUMN_VALUE::_internal_set_intvalue(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  intvalue_ = value;
}
inline void GORM_PB_COLUMN_VALUE::set_intvalue(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_intvalue(value);
  // @@protoc_insertion_point(field_set:gorm.GORM_PB_COLUMN_VALUE.intvalue)
}

// double doublevalue = 4;
inline void GORM_PB_COLUMN_VALUE::clear_doublevalue() {
  doublevalue_ = 0;
}
inline double GORM_PB_COLUMN_VALUE::_internal_doublevalue() const {
  return doublevalue_;
}
inline double GORM_PB_COLUMN_VALUE::doublevalue() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_COLUMN_VALUE.doublevalue)
  return _internal_doublevalue();
}
inline void GORM_PB_COLUMN_VALUE::_internal_set_doublevalue(double value) {
  
  doublevalue_ = value;
}
inline void GORM_PB_COLUMN_VALUE::set_doublevalue(double value) {
  _internal_set_doublevalue(value);
  // @@protoc_insertion_point(field_set:gorm.GORM_PB_COLUMN_VALUE.doublevalue)
}

// string stringvalue = 5;
inline void GORM_PB_COLUMN_VALUE::clear_stringvalue() {
  stringvalue_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& GORM_PB_COLUMN_VALUE::stringvalue() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_COLUMN_VALUE.stringvalue)
  return _internal_stringvalue();
}
inline void GORM_PB_COLUMN_VALUE::set_stringvalue(const std::string& value) {
  _internal_set_stringvalue(value);
  // @@protoc_insertion_point(field_set:gorm.GORM_PB_COLUMN_VALUE.stringvalue)
}
inline std::string* GORM_PB_COLUMN_VALUE::mutable_stringvalue() {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_COLUMN_VALUE.stringvalue)
  return _internal_mutable_stringvalue();
}
inline const std::string& GORM_PB_COLUMN_VALUE::_internal_stringvalue() const {
  return stringvalue_.Get();
}
inline void GORM_PB_COLUMN_VALUE::_internal_set_stringvalue(const std::string& value) {
  
  stringvalue_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void GORM_PB_COLUMN_VALUE::set_stringvalue(std::string&& value) {
  
  stringvalue_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:gorm.GORM_PB_COLUMN_VALUE.stringvalue)
}
inline void GORM_PB_COLUMN_VALUE::set_stringvalue(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  stringvalue_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:gorm.GORM_PB_COLUMN_VALUE.stringvalue)
}
inline void GORM_PB_COLUMN_VALUE::set_stringvalue(const char* value,
    size_t size) {
  
  stringvalue_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:gorm.GORM_PB_COLUMN_VALUE.stringvalue)
}
inline std::string* GORM_PB_COLUMN_VALUE::_internal_mutable_stringvalue() {
  
  return stringvalue_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* GORM_PB_COLUMN_VALUE::release_stringvalue() {
  // @@protoc_insertion_point(field_release:gorm.GORM_PB_COLUMN_VALUE.stringvalue)
  return stringvalue_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GORM_PB_COLUMN_VALUE::set_allocated_stringvalue(std::string* stringvalue) {
  if (stringvalue != nullptr) {
    
  } else {
    
  }
  stringvalue_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), stringvalue,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:gorm.GORM_PB_COLUMN_VALUE.stringvalue)
}
inline std::string* GORM_PB_COLUMN_VALUE::unsafe_arena_release_stringvalue() {
  // @@protoc_insertion_point(field_unsafe_arena_release:gorm.GORM_PB_COLUMN_VALUE.stringvalue)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return stringvalue_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void GORM_PB_COLUMN_VALUE::unsafe_arena_set_allocated_stringvalue(
    std::string* stringvalue) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (stringvalue != nullptr) {
    
  } else {
    
  }
  stringvalue_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      stringvalue, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gorm.GORM_PB_COLUMN_VALUE.stringvalue)
}

// -------------------------------------------------------------------

// GORM_PB_COLUMN

// string name = 1;
inline void GORM_PB_COLUMN::clear_name() {
  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline const std::string& GORM_PB_COLUMN::name() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_COLUMN.name)
  return _internal_name();
}
inline void GORM_PB_COLUMN::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:gorm.GORM_PB_COLUMN.name)
}
inline std::string* GORM_PB_COLUMN::mutable_name() {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_COLUMN.name)
  return _internal_mutable_name();
}
inline const std::string& GORM_PB_COLUMN::_internal_name() const {
  return name_.Get();
}
inline void GORM_PB_COLUMN::_internal_set_name(const std::string& value) {
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value, GetArena());
}
inline void GORM_PB_COLUMN::set_name(std::string&& value) {
  
  name_.Set(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:gorm.GORM_PB_COLUMN.name)
}
inline void GORM_PB_COLUMN::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value),
              GetArena());
  // @@protoc_insertion_point(field_set_char:gorm.GORM_PB_COLUMN.name)
}
inline void GORM_PB_COLUMN::set_name(const char* value,
    size_t size) {
  
  name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:gorm.GORM_PB_COLUMN.name)
}
inline std::string* GORM_PB_COLUMN::_internal_mutable_name() {
  
  return name_.Mutable(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline std::string* GORM_PB_COLUMN::release_name() {
  // @@protoc_insertion_point(field_release:gorm.GORM_PB_COLUMN.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void GORM_PB_COLUMN::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:gorm.GORM_PB_COLUMN.name)
}
inline std::string* GORM_PB_COLUMN::unsafe_arena_release_name() {
  // @@protoc_insertion_point(field_unsafe_arena_release:gorm.GORM_PB_COLUMN.name)
  GOOGLE_DCHECK(GetArena() != nullptr);
  
  return name_.UnsafeArenaRelease(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      GetArena());
}
inline void GORM_PB_COLUMN::unsafe_arena_set_allocated_name(
    std::string* name) {
  GOOGLE_DCHECK(GetArena() != nullptr);
  if (name != nullptr) {
    
  } else {
    
  }
  name_.UnsafeArenaSetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      name, GetArena());
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gorm.GORM_PB_COLUMN.name)
}

// .gorm.GORM_PB_COLUMN_VALUE value = 2;
inline bool GORM_PB_COLUMN::_internal_has_value() const {
  return this != internal_default_instance() && value_ != nullptr;
}
inline bool GORM_PB_COLUMN::has_value() const {
  return _internal_has_value();
}
inline void GORM_PB_COLUMN::clear_value() {
  if (GetArena() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
}
inline const ::gorm::GORM_PB_COLUMN_VALUE& GORM_PB_COLUMN::_internal_value() const {
  const ::gorm::GORM_PB_COLUMN_VALUE* p = value_;
  return p != nullptr ? *p : *reinterpret_cast<const ::gorm::GORM_PB_COLUMN_VALUE*>(
      &::gorm::_GORM_PB_COLUMN_VALUE_default_instance_);
}
inline const ::gorm::GORM_PB_COLUMN_VALUE& GORM_PB_COLUMN::value() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_COLUMN.value)
  return _internal_value();
}
inline void GORM_PB_COLUMN::unsafe_arena_set_allocated_value(
    ::gorm::GORM_PB_COLUMN_VALUE* value) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(value_);
  }
  value_ = value;
  if (value) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gorm.GORM_PB_COLUMN.value)
}
inline ::gorm::GORM_PB_COLUMN_VALUE* GORM_PB_COLUMN::release_value() {
  auto temp = unsafe_arena_release_value();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::gorm::GORM_PB_COLUMN_VALUE* GORM_PB_COLUMN::unsafe_arena_release_value() {
  // @@protoc_insertion_point(field_release:gorm.GORM_PB_COLUMN.value)
  
  ::gorm::GORM_PB_COLUMN_VALUE* temp = value_;
  value_ = nullptr;
  return temp;
}
inline ::gorm::GORM_PB_COLUMN_VALUE* GORM_PB_COLUMN::_internal_mutable_value() {
  
  if (value_ == nullptr) {
    auto* p = CreateMaybeMessage<::gorm::GORM_PB_COLUMN_VALUE>(GetArena());
    value_ = p;
  }
  return value_;
}
inline ::gorm::GORM_PB_COLUMN_VALUE* GORM_PB_COLUMN::mutable_value() {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_COLUMN.value)
  return _internal_mutable_value();
}
inline void GORM_PB_COLUMN::set_allocated_value(::gorm::GORM_PB_COLUMN_VALUE* value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete value_;
  }
  if (value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(value);
    if (message_arena != submessage_arena) {
      value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, value, submessage_arena);
    }
    
  } else {
    
  }
  value_ = value;
  // @@protoc_insertion_point(field_set_allocated:gorm.GORM_PB_COLUMN.value)
}

// -------------------------------------------------------------------

// GORM_PB_CUSTEM_COLUMNS

// repeated .gorm.GORM_PB_COLUMN columns = 1;
inline int GORM_PB_CUSTEM_COLUMNS::_internal_columns_size() const {
  return columns_.size();
}
inline int GORM_PB_CUSTEM_COLUMNS::columns_size() const {
  return _internal_columns_size();
}
inline void GORM_PB_CUSTEM_COLUMNS::clear_columns() {
  columns_.Clear();
}
inline ::gorm::GORM_PB_COLUMN* GORM_PB_CUSTEM_COLUMNS::mutable_columns(int index) {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_CUSTEM_COLUMNS.columns)
  return columns_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_COLUMN >*
GORM_PB_CUSTEM_COLUMNS::mutable_columns() {
  // @@protoc_insertion_point(field_mutable_list:gorm.GORM_PB_CUSTEM_COLUMNS.columns)
  return &columns_;
}
inline const ::gorm::GORM_PB_COLUMN& GORM_PB_CUSTEM_COLUMNS::_internal_columns(int index) const {
  return columns_.Get(index);
}
inline const ::gorm::GORM_PB_COLUMN& GORM_PB_CUSTEM_COLUMNS::columns(int index) const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_CUSTEM_COLUMNS.columns)
  return _internal_columns(index);
}
inline ::gorm::GORM_PB_COLUMN* GORM_PB_CUSTEM_COLUMNS::_internal_add_columns() {
  return columns_.Add();
}
inline ::gorm::GORM_PB_COLUMN* GORM_PB_CUSTEM_COLUMNS::add_columns() {
  // @@protoc_insertion_point(field_add:gorm.GORM_PB_CUSTEM_COLUMNS.columns)
  return _internal_add_columns();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_COLUMN >&
GORM_PB_CUSTEM_COLUMNS::columns() const {
  // @@protoc_insertion_point(field_list:gorm.GORM_PB_CUSTEM_COLUMNS.columns)
  return columns_;
}

// -------------------------------------------------------------------

// GORM_PB_TABLE

// int32 TableId = 1;
inline void GORM_PB_TABLE::clear_tableid() {
  tableid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GORM_PB_TABLE::_internal_tableid() const {
  return tableid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 GORM_PB_TABLE::tableid() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_TABLE.TableId)
  return _internal_tableid();
}
inline void GORM_PB_TABLE::_internal_set_tableid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  tableid_ = value;
}
inline void GORM_PB_TABLE::set_tableid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_tableid(value);
  // @@protoc_insertion_point(field_set:gorm.GORM_PB_TABLE.TableId)
}

// .gorm.GORM_PB_CUSTEM_COLUMNS custom_columns = 2;
inline bool GORM_PB_TABLE::_internal_has_custom_columns() const {
  return this != internal_default_instance() && custom_columns_ != nullptr;
}
inline bool GORM_PB_TABLE::has_custom_columns() const {
  return _internal_has_custom_columns();
}
inline void GORM_PB_TABLE::clear_custom_columns() {
  if (GetArena() == nullptr && custom_columns_ != nullptr) {
    delete custom_columns_;
  }
  custom_columns_ = nullptr;
}
inline const ::gorm::GORM_PB_CUSTEM_COLUMNS& GORM_PB_TABLE::_internal_custom_columns() const {
  const ::gorm::GORM_PB_CUSTEM_COLUMNS* p = custom_columns_;
  return p != nullptr ? *p : *reinterpret_cast<const ::gorm::GORM_PB_CUSTEM_COLUMNS*>(
      &::gorm::_GORM_PB_CUSTEM_COLUMNS_default_instance_);
}
inline const ::gorm::GORM_PB_CUSTEM_COLUMNS& GORM_PB_TABLE::custom_columns() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_TABLE.custom_columns)
  return _internal_custom_columns();
}
inline void GORM_PB_TABLE::unsafe_arena_set_allocated_custom_columns(
    ::gorm::GORM_PB_CUSTEM_COLUMNS* custom_columns) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(custom_columns_);
  }
  custom_columns_ = custom_columns;
  if (custom_columns) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gorm.GORM_PB_TABLE.custom_columns)
}
inline ::gorm::GORM_PB_CUSTEM_COLUMNS* GORM_PB_TABLE::release_custom_columns() {
  auto temp = unsafe_arena_release_custom_columns();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::gorm::GORM_PB_CUSTEM_COLUMNS* GORM_PB_TABLE::unsafe_arena_release_custom_columns() {
  // @@protoc_insertion_point(field_release:gorm.GORM_PB_TABLE.custom_columns)
  
  ::gorm::GORM_PB_CUSTEM_COLUMNS* temp = custom_columns_;
  custom_columns_ = nullptr;
  return temp;
}
inline ::gorm::GORM_PB_CUSTEM_COLUMNS* GORM_PB_TABLE::_internal_mutable_custom_columns() {
  
  if (custom_columns_ == nullptr) {
    auto* p = CreateMaybeMessage<::gorm::GORM_PB_CUSTEM_COLUMNS>(GetArena());
    custom_columns_ = p;
  }
  return custom_columns_;
}
inline ::gorm::GORM_PB_CUSTEM_COLUMNS* GORM_PB_TABLE::mutable_custom_columns() {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_TABLE.custom_columns)
  return _internal_mutable_custom_columns();
}
inline void GORM_PB_TABLE::set_allocated_custom_columns(::gorm::GORM_PB_CUSTEM_COLUMNS* custom_columns) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete custom_columns_;
  }
  if (custom_columns) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(custom_columns);
    if (message_arena != submessage_arena) {
      custom_columns = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, custom_columns, submessage_arena);
    }
    
  } else {
    
  }
  custom_columns_ = custom_columns;
  // @@protoc_insertion_point(field_set_allocated:gorm.GORM_PB_TABLE.custom_columns)
}

// .gorm.GORM_PB_Table_role role = 3;
inline bool GORM_PB_TABLE::_internal_has_role() const {
  return this != internal_default_instance() && role_ != nullptr;
}
inline bool GORM_PB_TABLE::has_role() const {
  return _internal_has_role();
}
inline const ::gorm::GORM_PB_Table_role& GORM_PB_TABLE::_internal_role() const {
  const ::gorm::GORM_PB_Table_role* p = role_;
  return p != nullptr ? *p : *reinterpret_cast<const ::gorm::GORM_PB_Table_role*>(
      &::gorm::_GORM_PB_Table_role_default_instance_);
}
inline const ::gorm::GORM_PB_Table_role& GORM_PB_TABLE::role() const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_TABLE.role)
  return _internal_role();
}
inline void GORM_PB_TABLE::unsafe_arena_set_allocated_role(
    ::gorm::GORM_PB_Table_role* role) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(role_);
  }
  role_ = role;
  if (role) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:gorm.GORM_PB_TABLE.role)
}
inline ::gorm::GORM_PB_Table_role* GORM_PB_TABLE::release_role() {
  auto temp = unsafe_arena_release_role();
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::gorm::GORM_PB_Table_role* GORM_PB_TABLE::unsafe_arena_release_role() {
  // @@protoc_insertion_point(field_release:gorm.GORM_PB_TABLE.role)
  
  ::gorm::GORM_PB_Table_role* temp = role_;
  role_ = nullptr;
  return temp;
}
inline ::gorm::GORM_PB_Table_role* GORM_PB_TABLE::_internal_mutable_role() {
  
  if (role_ == nullptr) {
    auto* p = CreateMaybeMessage<::gorm::GORM_PB_Table_role>(GetArena());
    role_ = p;
  }
  return role_;
}
inline ::gorm::GORM_PB_Table_role* GORM_PB_TABLE::mutable_role() {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_TABLE.role)
  return _internal_mutable_role();
}
inline void GORM_PB_TABLE::set_allocated_role(::gorm::GORM_PB_Table_role* role) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(role_);
  }
  if (role) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(role)->GetArena();
    if (message_arena != submessage_arena) {
      role = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, role, submessage_arena);
    }
    
  } else {
    
  }
  role_ = role;
  // @@protoc_insertion_point(field_set_allocated:gorm.GORM_PB_TABLE.role)
}

// -------------------------------------------------------------------

// GORM_PB_TABLES

// repeated .gorm.GORM_PB_Table_role role = 1;
inline int GORM_PB_TABLES::_internal_role_size() const {
  return role_.size();
}
inline int GORM_PB_TABLES::role_size() const {
  return _internal_role_size();
}
inline ::gorm::GORM_PB_Table_role* GORM_PB_TABLES::mutable_role(int index) {
  // @@protoc_insertion_point(field_mutable:gorm.GORM_PB_TABLES.role)
  return role_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_Table_role >*
GORM_PB_TABLES::mutable_role() {
  // @@protoc_insertion_point(field_mutable_list:gorm.GORM_PB_TABLES.role)
  return &role_;
}
inline const ::gorm::GORM_PB_Table_role& GORM_PB_TABLES::_internal_role(int index) const {
  return role_.Get(index);
}
inline const ::gorm::GORM_PB_Table_role& GORM_PB_TABLES::role(int index) const {
  // @@protoc_insertion_point(field_get:gorm.GORM_PB_TABLES.role)
  return _internal_role(index);
}
inline ::gorm::GORM_PB_Table_role* GORM_PB_TABLES::_internal_add_role() {
  return role_.Add();
}
inline ::gorm::GORM_PB_Table_role* GORM_PB_TABLES::add_role() {
  // @@protoc_insertion_point(field_add:gorm.GORM_PB_TABLES.role)
  return _internal_add_role();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::gorm::GORM_PB_Table_role >&
GORM_PB_TABLES::role() const {
  // @@protoc_insertion_point(field_list:gorm.GORM_PB_TABLES.role)
  return role_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace gorm

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::gorm::GORM_PB_TABLE_INDEX> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::gorm::GORM_PB_TABLE_INDEX>() {
  return ::gorm::GORM_PB_TABLE_INDEX_descriptor();
}
template <> struct is_proto_enum< ::gorm::GORM_PB_ROLE_FIELD_INDEX> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::gorm::GORM_PB_ROLE_FIELD_INDEX>() {
  return ::gorm::GORM_PB_ROLE_FIELD_INDEX_descriptor();
}
template <> struct is_proto_enum< ::gorm::GORM_PB_COLUMN_TYPE> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::gorm::GORM_PB_COLUMN_TYPE>() {
  return ::gorm::GORM_PB_COLUMN_TYPE_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_gorm_5fpb_5ftables_5finc_2eproto
