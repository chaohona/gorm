// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gorm_pb_tables_inc.proto

#include "gorm_pb_tables_inc.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_gorm_5fpb_5ftables_5finc_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GORM_PB_COLUMN_gorm_5fpb_5ftables_5finc_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_gorm_5fpb_5ftables_5finc_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GORM_PB_COLUMN_VALUE_gorm_5fpb_5ftables_5finc_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_gorm_5fpb_5ftables_5finc_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GORM_PB_CUSTEM_COLUMNS_gorm_5fpb_5ftables_5finc_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_gorm_2ddb_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GORM_PB_Table_role_gorm_2ddb_2eproto;
namespace gorm {
class GORM_PB_COLUMN_VALUEDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GORM_PB_COLUMN_VALUE> _instance;
} _GORM_PB_COLUMN_VALUE_default_instance_;
class GORM_PB_COLUMNDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GORM_PB_COLUMN> _instance;
} _GORM_PB_COLUMN_default_instance_;
class GORM_PB_CUSTEM_COLUMNSDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GORM_PB_CUSTEM_COLUMNS> _instance;
} _GORM_PB_CUSTEM_COLUMNS_default_instance_;
class GORM_PB_TABLEDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GORM_PB_TABLE> _instance;
} _GORM_PB_TABLE_default_instance_;
class GORM_PB_TABLESDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GORM_PB_TABLES> _instance;
} _GORM_PB_TABLES_default_instance_;
}  // namespace gorm
static void InitDefaultsscc_info_GORM_PB_COLUMN_gorm_5fpb_5ftables_5finc_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gorm::_GORM_PB_COLUMN_default_instance_;
    new (ptr) ::gorm::GORM_PB_COLUMN();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gorm::GORM_PB_COLUMN::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GORM_PB_COLUMN_gorm_5fpb_5ftables_5finc_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GORM_PB_COLUMN_gorm_5fpb_5ftables_5finc_2eproto}, {
      &scc_info_GORM_PB_COLUMN_VALUE_gorm_5fpb_5ftables_5finc_2eproto.base,}};

static void InitDefaultsscc_info_GORM_PB_COLUMN_VALUE_gorm_5fpb_5ftables_5finc_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gorm::_GORM_PB_COLUMN_VALUE_default_instance_;
    new (ptr) ::gorm::GORM_PB_COLUMN_VALUE();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gorm::GORM_PB_COLUMN_VALUE::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GORM_PB_COLUMN_VALUE_gorm_5fpb_5ftables_5finc_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GORM_PB_COLUMN_VALUE_gorm_5fpb_5ftables_5finc_2eproto}, {}};

static void InitDefaultsscc_info_GORM_PB_CUSTEM_COLUMNS_gorm_5fpb_5ftables_5finc_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gorm::_GORM_PB_CUSTEM_COLUMNS_default_instance_;
    new (ptr) ::gorm::GORM_PB_CUSTEM_COLUMNS();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gorm::GORM_PB_CUSTEM_COLUMNS::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GORM_PB_CUSTEM_COLUMNS_gorm_5fpb_5ftables_5finc_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GORM_PB_CUSTEM_COLUMNS_gorm_5fpb_5ftables_5finc_2eproto}, {
      &scc_info_GORM_PB_COLUMN_gorm_5fpb_5ftables_5finc_2eproto.base,}};

static void InitDefaultsscc_info_GORM_PB_TABLE_gorm_5fpb_5ftables_5finc_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gorm::_GORM_PB_TABLE_default_instance_;
    new (ptr) ::gorm::GORM_PB_TABLE();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gorm::GORM_PB_TABLE::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GORM_PB_TABLE_gorm_5fpb_5ftables_5finc_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GORM_PB_TABLE_gorm_5fpb_5ftables_5finc_2eproto}, {
      &scc_info_GORM_PB_CUSTEM_COLUMNS_gorm_5fpb_5ftables_5finc_2eproto.base,
      &scc_info_GORM_PB_Table_role_gorm_2ddb_2eproto.base,}};

static void InitDefaultsscc_info_GORM_PB_TABLES_gorm_5fpb_5ftables_5finc_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gorm::_GORM_PB_TABLES_default_instance_;
    new (ptr) ::gorm::GORM_PB_TABLES();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gorm::GORM_PB_TABLES::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GORM_PB_TABLES_gorm_5fpb_5ftables_5finc_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GORM_PB_TABLES_gorm_5fpb_5ftables_5finc_2eproto}, {
      &scc_info_GORM_PB_Table_role_gorm_2ddb_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_gorm_5fpb_5ftables_5finc_2eproto[5];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_gorm_5fpb_5ftables_5finc_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_gorm_5fpb_5ftables_5finc_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_gorm_5fpb_5ftables_5finc_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_COLUMN_VALUE, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_COLUMN_VALUE, type_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_COLUMN_VALUE, uintvalue_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_COLUMN_VALUE, intvalue_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_COLUMN_VALUE, doublevalue_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_COLUMN_VALUE, stringvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_COLUMN, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_COLUMN, name_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_COLUMN, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_CUSTEM_COLUMNS, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_CUSTEM_COLUMNS, columns_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_TABLE, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_TABLE, tableid_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_TABLE, custom_columns_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_TABLE, role_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_TABLES, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_TABLES, role_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::gorm::GORM_PB_COLUMN_VALUE)},
  { 10, -1, sizeof(::gorm::GORM_PB_COLUMN)},
  { 17, -1, sizeof(::gorm::GORM_PB_CUSTEM_COLUMNS)},
  { 23, -1, sizeof(::gorm::GORM_PB_TABLE)},
  { 31, -1, sizeof(::gorm::GORM_PB_TABLES)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gorm::_GORM_PB_COLUMN_VALUE_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gorm::_GORM_PB_COLUMN_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gorm::_GORM_PB_CUSTEM_COLUMNS_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gorm::_GORM_PB_TABLE_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gorm::_GORM_PB_TABLES_default_instance_),
};

const char descriptor_table_protodef_gorm_5fpb_5ftables_5finc_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\030gorm_pb_tables_inc.proto\022\004gorm\032\rgorm-d"
  "b.proto\"\216\001\n\024GORM_PB_COLUMN_VALUE\022\'\n\004type"
  "\030\001 \001(\0162\031.gorm.GORM_PB_COLUMN_TYPE\022\021\n\tuin"
  "tvalue\030\002 \001(\004\022\020\n\010intvalue\030\003 \001(\003\022\023\n\013double"
  "value\030\004 \001(\001\022\023\n\013stringvalue\030\005 \001(\t\"I\n\016GORM"
  "_PB_COLUMN\022\014\n\004name\030\001 \001(\t\022)\n\005value\030\002 \001(\0132"
  "\032.gorm.GORM_PB_COLUMN_VALUE\"\?\n\026GORM_PB_C"
  "USTEM_COLUMNS\022%\n\007columns\030\001 \003(\0132\024.gorm.GO"
  "RM_PB_COLUMN\"~\n\rGORM_PB_TABLE\022\017\n\007TableId"
  "\030\001 \001(\005\0224\n\016custom_columns\030\002 \001(\0132\034.gorm.GO"
  "RM_PB_CUSTEM_COLUMNS\022&\n\004role\030\003 \001(\0132\030.gor"
  "m.GORM_PB_Table_role\"8\n\016GORM_PB_TABLES\022&"
  "\n\004role\030\001 \003(\0132\030.gorm.GORM_PB_Table_role*k"
  "\n\023GORM_PB_TABLE_INDEX\022\033\n\027GORM_PB_TABLE_I"
  "DX_MIN__\020\000\022\032\n\026GORM_PB_TABLE_IDX_ROLE\020\001\022\033"
  "\n\027GORM_PB_TABLE_IDX_MAX__\020\002*\227\003\n\030GORM_PB_"
  "ROLE_FIELD_INDEX\022\036\n\032GORM_PB_FIELD_ROLE_V"
  "ERSION\020\000\022\035\n\031GORM_PB_FIELD_ROLE_ROLEID\020\001\022"
  "\037\n\033GORM_PB_FIELD_ROLE_ROLENAME\020\002\022\034\n\030GORM"
  "_PB_FIELD_ROLE_LEVEL\020\003\022\032\n\026GORM_PB_FIELD_"
  "ROLE_EXP\020\004\022\"\n\036GORM_PB_FIELD_ROLE_CHARACT"
  "ERID\020\005\022\033\n\027GORM_PB_FIELD_ROLE_GOLD\020\006\022\"\n\036G"
  "ORM_PB_FIELD_ROLE_OFFLINETIME\020\007\022\035\n\031GORM_"
  "PB_FIELD_ROLE_INITED\020\010\022!\n\035GORM_PB_FIELD_"
  "ROLE_CREATETIME\020\t\022\033\n\027GORM_PB_FIELD_ROLE_"
  "FACE\020\n\022\035\n\031GORM_PB_FIELD_ROLE_ONLINE\020\013*\261\001"
  "\n\023GORM_PB_COLUMN_TYPE\022\037\n\033GORM_PB_COLUMN_"
  "TYPE_INVALID\020\000\022\033\n\027GORM_PB_COLUMN_TYPE_IN"
  "T\020\001\022\034\n\030GORM_PB_COLUMN_TYPE_UINT\020\002\022\036\n\032GOR"
  "M_PB_COLUMN_TYPE_DOUBLE\020\003\022\036\n\032GORM_PB_COL"
  "UMN_TYPE_STRING\020\004B\013Z\tgorm/gormb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_gorm_5fpb_5ftables_5finc_2eproto_deps[1] = {
  &::descriptor_table_gorm_2ddb_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_gorm_5fpb_5ftables_5finc_2eproto_sccs[5] = {
  &scc_info_GORM_PB_COLUMN_gorm_5fpb_5ftables_5finc_2eproto.base,
  &scc_info_GORM_PB_COLUMN_VALUE_gorm_5fpb_5ftables_5finc_2eproto.base,
  &scc_info_GORM_PB_CUSTEM_COLUMNS_gorm_5fpb_5ftables_5finc_2eproto.base,
  &scc_info_GORM_PB_TABLE_gorm_5fpb_5ftables_5finc_2eproto.base,
  &scc_info_GORM_PB_TABLES_gorm_5fpb_5ftables_5finc_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_gorm_5fpb_5ftables_5finc_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_gorm_5fpb_5ftables_5finc_2eproto = {
  false, false, descriptor_table_protodef_gorm_5fpb_5ftables_5finc_2eproto, "gorm_pb_tables_inc.proto", 1238,
  &descriptor_table_gorm_5fpb_5ftables_5finc_2eproto_once, descriptor_table_gorm_5fpb_5ftables_5finc_2eproto_sccs, descriptor_table_gorm_5fpb_5ftables_5finc_2eproto_deps, 5, 1,
  schemas, file_default_instances, TableStruct_gorm_5fpb_5ftables_5finc_2eproto::offsets,
  file_level_metadata_gorm_5fpb_5ftables_5finc_2eproto, 5, file_level_enum_descriptors_gorm_5fpb_5ftables_5finc_2eproto, file_level_service_descriptors_gorm_5fpb_5ftables_5finc_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_gorm_5fpb_5ftables_5finc_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_gorm_5fpb_5ftables_5finc_2eproto)), true);
namespace gorm {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GORM_PB_TABLE_INDEX_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_gorm_5fpb_5ftables_5finc_2eproto);
  return file_level_enum_descriptors_gorm_5fpb_5ftables_5finc_2eproto[0];
}
bool GORM_PB_TABLE_INDEX_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GORM_PB_ROLE_FIELD_INDEX_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_gorm_5fpb_5ftables_5finc_2eproto);
  return file_level_enum_descriptors_gorm_5fpb_5ftables_5finc_2eproto[1];
}
bool GORM_PB_ROLE_FIELD_INDEX_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GORM_PB_COLUMN_TYPE_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_gorm_5fpb_5ftables_5finc_2eproto);
  return file_level_enum_descriptors_gorm_5fpb_5ftables_5finc_2eproto[2];
}
bool GORM_PB_COLUMN_TYPE_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void GORM_PB_COLUMN_VALUE::InitAsDefaultInstance() {
}
class GORM_PB_COLUMN_VALUE::_Internal {
 public:
};

GORM_PB_COLUMN_VALUE::GORM_PB_COLUMN_VALUE(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gorm.GORM_PB_COLUMN_VALUE)
}
GORM_PB_COLUMN_VALUE::GORM_PB_COLUMN_VALUE(const GORM_PB_COLUMN_VALUE& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  stringvalue_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_stringvalue().empty()) {
    stringvalue_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_stringvalue(),
      GetArena());
  }
  ::memcpy(&uintvalue_, &from.uintvalue_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&uintvalue_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:gorm.GORM_PB_COLUMN_VALUE)
}

void GORM_PB_COLUMN_VALUE::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GORM_PB_COLUMN_VALUE_gorm_5fpb_5ftables_5finc_2eproto.base);
  stringvalue_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&uintvalue_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&uintvalue_)) + sizeof(type_));
}

GORM_PB_COLUMN_VALUE::~GORM_PB_COLUMN_VALUE() {
  // @@protoc_insertion_point(destructor:gorm.GORM_PB_COLUMN_VALUE)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GORM_PB_COLUMN_VALUE::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  stringvalue_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GORM_PB_COLUMN_VALUE::ArenaDtor(void* object) {
  GORM_PB_COLUMN_VALUE* _this = reinterpret_cast< GORM_PB_COLUMN_VALUE* >(object);
  (void)_this;
}
void GORM_PB_COLUMN_VALUE::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GORM_PB_COLUMN_VALUE::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GORM_PB_COLUMN_VALUE& GORM_PB_COLUMN_VALUE::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GORM_PB_COLUMN_VALUE_gorm_5fpb_5ftables_5finc_2eproto.base);
  return *internal_default_instance();
}


void GORM_PB_COLUMN_VALUE::Clear() {
// @@protoc_insertion_point(message_clear_start:gorm.GORM_PB_COLUMN_VALUE)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stringvalue_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&uintvalue_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&uintvalue_)) + sizeof(type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GORM_PB_COLUMN_VALUE::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .gorm.GORM_PB_COLUMN_TYPE type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::gorm::GORM_PB_COLUMN_TYPE>(val));
        } else goto handle_unusual;
        continue;
      // uint64 uintvalue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          uintvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 intvalue = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          intvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double doublevalue = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          doublevalue_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // string stringvalue = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_stringvalue();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gorm.GORM_PB_COLUMN_VALUE.stringvalue"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GORM_PB_COLUMN_VALUE::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gorm.GORM_PB_COLUMN_VALUE)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gorm.GORM_PB_COLUMN_TYPE type = 1;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  // uint64 uintvalue = 2;
  if (this->uintvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_uintvalue(), target);
  }

  // int64 intvalue = 3;
  if (this->intvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_intvalue(), target);
  }

  // double doublevalue = 4;
  if (!(this->doublevalue() <= 0 && this->doublevalue() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(4, this->_internal_doublevalue(), target);
  }

  // string stringvalue = 5;
  if (this->stringvalue().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_stringvalue().data(), static_cast<int>(this->_internal_stringvalue().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gorm.GORM_PB_COLUMN_VALUE.stringvalue");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_stringvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gorm.GORM_PB_COLUMN_VALUE)
  return target;
}

size_t GORM_PB_COLUMN_VALUE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gorm.GORM_PB_COLUMN_VALUE)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string stringvalue = 5;
  if (this->stringvalue().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_stringvalue());
  }

  // uint64 uintvalue = 2;
  if (this->uintvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_uintvalue());
  }

  // int64 intvalue = 3;
  if (this->intvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_intvalue());
  }

  // double doublevalue = 4;
  if (!(this->doublevalue() <= 0 && this->doublevalue() >= 0)) {
    total_size += 1 + 8;
  }

  // .gorm.GORM_PB_COLUMN_TYPE type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GORM_PB_COLUMN_VALUE::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gorm.GORM_PB_COLUMN_VALUE)
  GOOGLE_DCHECK_NE(&from, this);
  const GORM_PB_COLUMN_VALUE* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GORM_PB_COLUMN_VALUE>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gorm.GORM_PB_COLUMN_VALUE)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gorm.GORM_PB_COLUMN_VALUE)
    MergeFrom(*source);
  }
}

void GORM_PB_COLUMN_VALUE::MergeFrom(const GORM_PB_COLUMN_VALUE& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gorm.GORM_PB_COLUMN_VALUE)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.stringvalue().size() > 0) {
    _internal_set_stringvalue(from._internal_stringvalue());
  }
  if (from.uintvalue() != 0) {
    _internal_set_uintvalue(from._internal_uintvalue());
  }
  if (from.intvalue() != 0) {
    _internal_set_intvalue(from._internal_intvalue());
  }
  if (!(from.doublevalue() <= 0 && from.doublevalue() >= 0)) {
    _internal_set_doublevalue(from._internal_doublevalue());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
}

void GORM_PB_COLUMN_VALUE::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gorm.GORM_PB_COLUMN_VALUE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GORM_PB_COLUMN_VALUE::CopyFrom(const GORM_PB_COLUMN_VALUE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gorm.GORM_PB_COLUMN_VALUE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GORM_PB_COLUMN_VALUE::IsInitialized() const {
  return true;
}

void GORM_PB_COLUMN_VALUE::InternalSwap(GORM_PB_COLUMN_VALUE* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  stringvalue_.Swap(&other->stringvalue_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GORM_PB_COLUMN_VALUE, type_)
      + sizeof(GORM_PB_COLUMN_VALUE::type_)
      - PROTOBUF_FIELD_OFFSET(GORM_PB_COLUMN_VALUE, uintvalue_)>(
          reinterpret_cast<char*>(&uintvalue_),
          reinterpret_cast<char*>(&other->uintvalue_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GORM_PB_COLUMN_VALUE::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GORM_PB_COLUMN::InitAsDefaultInstance() {
  ::gorm::_GORM_PB_COLUMN_default_instance_._instance.get_mutable()->value_ = const_cast< ::gorm::GORM_PB_COLUMN_VALUE*>(
      ::gorm::GORM_PB_COLUMN_VALUE::internal_default_instance());
}
class GORM_PB_COLUMN::_Internal {
 public:
  static const ::gorm::GORM_PB_COLUMN_VALUE& value(const GORM_PB_COLUMN* msg);
};

const ::gorm::GORM_PB_COLUMN_VALUE&
GORM_PB_COLUMN::_Internal::value(const GORM_PB_COLUMN* msg) {
  return *msg->value_;
}
GORM_PB_COLUMN::GORM_PB_COLUMN(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gorm.GORM_PB_COLUMN)
}
GORM_PB_COLUMN::GORM_PB_COLUMN(const GORM_PB_COLUMN& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  if (from._internal_has_value()) {
    value_ = new ::gorm::GORM_PB_COLUMN_VALUE(*from.value_);
  } else {
    value_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:gorm.GORM_PB_COLUMN)
}

void GORM_PB_COLUMN::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GORM_PB_COLUMN_gorm_5fpb_5ftables_5finc_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_ = nullptr;
}

GORM_PB_COLUMN::~GORM_PB_COLUMN() {
  // @@protoc_insertion_point(destructor:gorm.GORM_PB_COLUMN)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GORM_PB_COLUMN::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete value_;
}

void GORM_PB_COLUMN::ArenaDtor(void* object) {
  GORM_PB_COLUMN* _this = reinterpret_cast< GORM_PB_COLUMN* >(object);
  (void)_this;
}
void GORM_PB_COLUMN::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GORM_PB_COLUMN::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GORM_PB_COLUMN& GORM_PB_COLUMN::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GORM_PB_COLUMN_gorm_5fpb_5ftables_5finc_2eproto.base);
  return *internal_default_instance();
}


void GORM_PB_COLUMN::Clear() {
// @@protoc_insertion_point(message_clear_start:gorm.GORM_PB_COLUMN)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GORM_PB_COLUMN::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gorm.GORM_PB_COLUMN.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .gorm.GORM_PB_COLUMN_VALUE value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GORM_PB_COLUMN::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gorm.GORM_PB_COLUMN)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gorm.GORM_PB_COLUMN.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .gorm.GORM_PB_COLUMN_VALUE value = 2;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gorm.GORM_PB_COLUMN)
  return target;
}

size_t GORM_PB_COLUMN::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gorm.GORM_PB_COLUMN)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .gorm.GORM_PB_COLUMN_VALUE value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GORM_PB_COLUMN::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gorm.GORM_PB_COLUMN)
  GOOGLE_DCHECK_NE(&from, this);
  const GORM_PB_COLUMN* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GORM_PB_COLUMN>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gorm.GORM_PB_COLUMN)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gorm.GORM_PB_COLUMN)
    MergeFrom(*source);
  }
}

void GORM_PB_COLUMN::MergeFrom(const GORM_PB_COLUMN& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gorm.GORM_PB_COLUMN)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.has_value()) {
    _internal_mutable_value()->::gorm::GORM_PB_COLUMN_VALUE::MergeFrom(from._internal_value());
  }
}

void GORM_PB_COLUMN::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gorm.GORM_PB_COLUMN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GORM_PB_COLUMN::CopyFrom(const GORM_PB_COLUMN& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gorm.GORM_PB_COLUMN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GORM_PB_COLUMN::IsInitialized() const {
  return true;
}

void GORM_PB_COLUMN::InternalSwap(GORM_PB_COLUMN* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GORM_PB_COLUMN::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GORM_PB_CUSTEM_COLUMNS::InitAsDefaultInstance() {
}
class GORM_PB_CUSTEM_COLUMNS::_Internal {
 public:
};

GORM_PB_CUSTEM_COLUMNS::GORM_PB_CUSTEM_COLUMNS(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  columns_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gorm.GORM_PB_CUSTEM_COLUMNS)
}
GORM_PB_CUSTEM_COLUMNS::GORM_PB_CUSTEM_COLUMNS(const GORM_PB_CUSTEM_COLUMNS& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      columns_(from.columns_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gorm.GORM_PB_CUSTEM_COLUMNS)
}

void GORM_PB_CUSTEM_COLUMNS::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GORM_PB_CUSTEM_COLUMNS_gorm_5fpb_5ftables_5finc_2eproto.base);
}

GORM_PB_CUSTEM_COLUMNS::~GORM_PB_CUSTEM_COLUMNS() {
  // @@protoc_insertion_point(destructor:gorm.GORM_PB_CUSTEM_COLUMNS)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GORM_PB_CUSTEM_COLUMNS::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GORM_PB_CUSTEM_COLUMNS::ArenaDtor(void* object) {
  GORM_PB_CUSTEM_COLUMNS* _this = reinterpret_cast< GORM_PB_CUSTEM_COLUMNS* >(object);
  (void)_this;
}
void GORM_PB_CUSTEM_COLUMNS::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GORM_PB_CUSTEM_COLUMNS::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GORM_PB_CUSTEM_COLUMNS& GORM_PB_CUSTEM_COLUMNS::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GORM_PB_CUSTEM_COLUMNS_gorm_5fpb_5ftables_5finc_2eproto.base);
  return *internal_default_instance();
}


void GORM_PB_CUSTEM_COLUMNS::Clear() {
// @@protoc_insertion_point(message_clear_start:gorm.GORM_PB_CUSTEM_COLUMNS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  columns_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GORM_PB_CUSTEM_COLUMNS::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .gorm.GORM_PB_COLUMN columns = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_columns(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GORM_PB_CUSTEM_COLUMNS::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gorm.GORM_PB_CUSTEM_COLUMNS)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .gorm.GORM_PB_COLUMN columns = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_columns_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_columns(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gorm.GORM_PB_CUSTEM_COLUMNS)
  return target;
}

size_t GORM_PB_CUSTEM_COLUMNS::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gorm.GORM_PB_CUSTEM_COLUMNS)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .gorm.GORM_PB_COLUMN columns = 1;
  total_size += 1UL * this->_internal_columns_size();
  for (const auto& msg : this->columns_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GORM_PB_CUSTEM_COLUMNS::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gorm.GORM_PB_CUSTEM_COLUMNS)
  GOOGLE_DCHECK_NE(&from, this);
  const GORM_PB_CUSTEM_COLUMNS* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GORM_PB_CUSTEM_COLUMNS>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gorm.GORM_PB_CUSTEM_COLUMNS)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gorm.GORM_PB_CUSTEM_COLUMNS)
    MergeFrom(*source);
  }
}

void GORM_PB_CUSTEM_COLUMNS::MergeFrom(const GORM_PB_CUSTEM_COLUMNS& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gorm.GORM_PB_CUSTEM_COLUMNS)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  columns_.MergeFrom(from.columns_);
}

void GORM_PB_CUSTEM_COLUMNS::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gorm.GORM_PB_CUSTEM_COLUMNS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GORM_PB_CUSTEM_COLUMNS::CopyFrom(const GORM_PB_CUSTEM_COLUMNS& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gorm.GORM_PB_CUSTEM_COLUMNS)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GORM_PB_CUSTEM_COLUMNS::IsInitialized() const {
  return true;
}

void GORM_PB_CUSTEM_COLUMNS::InternalSwap(GORM_PB_CUSTEM_COLUMNS* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  columns_.InternalSwap(&other->columns_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GORM_PB_CUSTEM_COLUMNS::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GORM_PB_TABLE::InitAsDefaultInstance() {
  ::gorm::_GORM_PB_TABLE_default_instance_._instance.get_mutable()->custom_columns_ = const_cast< ::gorm::GORM_PB_CUSTEM_COLUMNS*>(
      ::gorm::GORM_PB_CUSTEM_COLUMNS::internal_default_instance());
  ::gorm::_GORM_PB_TABLE_default_instance_._instance.get_mutable()->role_ = const_cast< ::gorm::GORM_PB_Table_role*>(
      ::gorm::GORM_PB_Table_role::internal_default_instance());
}
class GORM_PB_TABLE::_Internal {
 public:
  static const ::gorm::GORM_PB_CUSTEM_COLUMNS& custom_columns(const GORM_PB_TABLE* msg);
  static const ::gorm::GORM_PB_Table_role& role(const GORM_PB_TABLE* msg);
};

const ::gorm::GORM_PB_CUSTEM_COLUMNS&
GORM_PB_TABLE::_Internal::custom_columns(const GORM_PB_TABLE* msg) {
  return *msg->custom_columns_;
}
const ::gorm::GORM_PB_Table_role&
GORM_PB_TABLE::_Internal::role(const GORM_PB_TABLE* msg) {
  return *msg->role_;
}
void GORM_PB_TABLE::clear_role() {
  if (GetArena() == nullptr && role_ != nullptr) {
    delete role_;
  }
  role_ = nullptr;
}
GORM_PB_TABLE::GORM_PB_TABLE(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gorm.GORM_PB_TABLE)
}
GORM_PB_TABLE::GORM_PB_TABLE(const GORM_PB_TABLE& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_custom_columns()) {
    custom_columns_ = new ::gorm::GORM_PB_CUSTEM_COLUMNS(*from.custom_columns_);
  } else {
    custom_columns_ = nullptr;
  }
  if (from._internal_has_role()) {
    role_ = new ::gorm::GORM_PB_Table_role(*from.role_);
  } else {
    role_ = nullptr;
  }
  tableid_ = from.tableid_;
  // @@protoc_insertion_point(copy_constructor:gorm.GORM_PB_TABLE)
}

void GORM_PB_TABLE::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GORM_PB_TABLE_gorm_5fpb_5ftables_5finc_2eproto.base);
  ::memset(&custom_columns_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tableid_) -
      reinterpret_cast<char*>(&custom_columns_)) + sizeof(tableid_));
}

GORM_PB_TABLE::~GORM_PB_TABLE() {
  // @@protoc_insertion_point(destructor:gorm.GORM_PB_TABLE)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GORM_PB_TABLE::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete custom_columns_;
  if (this != internal_default_instance()) delete role_;
}

void GORM_PB_TABLE::ArenaDtor(void* object) {
  GORM_PB_TABLE* _this = reinterpret_cast< GORM_PB_TABLE* >(object);
  (void)_this;
}
void GORM_PB_TABLE::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GORM_PB_TABLE::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GORM_PB_TABLE& GORM_PB_TABLE::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GORM_PB_TABLE_gorm_5fpb_5ftables_5finc_2eproto.base);
  return *internal_default_instance();
}


void GORM_PB_TABLE::Clear() {
// @@protoc_insertion_point(message_clear_start:gorm.GORM_PB_TABLE)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && custom_columns_ != nullptr) {
    delete custom_columns_;
  }
  custom_columns_ = nullptr;
  if (GetArena() == nullptr && role_ != nullptr) {
    delete role_;
  }
  role_ = nullptr;
  tableid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GORM_PB_TABLE::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 TableId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          tableid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .gorm.GORM_PB_CUSTEM_COLUMNS custom_columns = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_custom_columns(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .gorm.GORM_PB_Table_role role = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_role(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GORM_PB_TABLE::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gorm.GORM_PB_TABLE)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 TableId = 1;
  if (this->tableid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_tableid(), target);
  }

  // .gorm.GORM_PB_CUSTEM_COLUMNS custom_columns = 2;
  if (this->has_custom_columns()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::custom_columns(this), target, stream);
  }

  // .gorm.GORM_PB_Table_role role = 3;
  if (this->has_role()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::role(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gorm.GORM_PB_TABLE)
  return target;
}

size_t GORM_PB_TABLE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gorm.GORM_PB_TABLE)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .gorm.GORM_PB_CUSTEM_COLUMNS custom_columns = 2;
  if (this->has_custom_columns()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *custom_columns_);
  }

  // .gorm.GORM_PB_Table_role role = 3;
  if (this->has_role()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *role_);
  }

  // int32 TableId = 1;
  if (this->tableid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_tableid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GORM_PB_TABLE::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gorm.GORM_PB_TABLE)
  GOOGLE_DCHECK_NE(&from, this);
  const GORM_PB_TABLE* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GORM_PB_TABLE>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gorm.GORM_PB_TABLE)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gorm.GORM_PB_TABLE)
    MergeFrom(*source);
  }
}

void GORM_PB_TABLE::MergeFrom(const GORM_PB_TABLE& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gorm.GORM_PB_TABLE)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_custom_columns()) {
    _internal_mutable_custom_columns()->::gorm::GORM_PB_CUSTEM_COLUMNS::MergeFrom(from._internal_custom_columns());
  }
  if (from.has_role()) {
    _internal_mutable_role()->::gorm::GORM_PB_Table_role::MergeFrom(from._internal_role());
  }
  if (from.tableid() != 0) {
    _internal_set_tableid(from._internal_tableid());
  }
}

void GORM_PB_TABLE::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gorm.GORM_PB_TABLE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GORM_PB_TABLE::CopyFrom(const GORM_PB_TABLE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gorm.GORM_PB_TABLE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GORM_PB_TABLE::IsInitialized() const {
  return true;
}

void GORM_PB_TABLE::InternalSwap(GORM_PB_TABLE* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GORM_PB_TABLE, tableid_)
      + sizeof(GORM_PB_TABLE::tableid_)
      - PROTOBUF_FIELD_OFFSET(GORM_PB_TABLE, custom_columns_)>(
          reinterpret_cast<char*>(&custom_columns_),
          reinterpret_cast<char*>(&other->custom_columns_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GORM_PB_TABLE::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GORM_PB_TABLES::InitAsDefaultInstance() {
}
class GORM_PB_TABLES::_Internal {
 public:
};

void GORM_PB_TABLES::clear_role() {
  role_.Clear();
}
GORM_PB_TABLES::GORM_PB_TABLES(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  role_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gorm.GORM_PB_TABLES)
}
GORM_PB_TABLES::GORM_PB_TABLES(const GORM_PB_TABLES& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      role_(from.role_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gorm.GORM_PB_TABLES)
}

void GORM_PB_TABLES::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GORM_PB_TABLES_gorm_5fpb_5ftables_5finc_2eproto.base);
}

GORM_PB_TABLES::~GORM_PB_TABLES() {
  // @@protoc_insertion_point(destructor:gorm.GORM_PB_TABLES)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GORM_PB_TABLES::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GORM_PB_TABLES::ArenaDtor(void* object) {
  GORM_PB_TABLES* _this = reinterpret_cast< GORM_PB_TABLES* >(object);
  (void)_this;
}
void GORM_PB_TABLES::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GORM_PB_TABLES::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GORM_PB_TABLES& GORM_PB_TABLES::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GORM_PB_TABLES_gorm_5fpb_5ftables_5finc_2eproto.base);
  return *internal_default_instance();
}


void GORM_PB_TABLES::Clear() {
// @@protoc_insertion_point(message_clear_start:gorm.GORM_PB_TABLES)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  role_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GORM_PB_TABLES::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .gorm.GORM_PB_Table_role role = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_role(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GORM_PB_TABLES::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gorm.GORM_PB_TABLES)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .gorm.GORM_PB_Table_role role = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_role_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_role(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gorm.GORM_PB_TABLES)
  return target;
}

size_t GORM_PB_TABLES::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gorm.GORM_PB_TABLES)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .gorm.GORM_PB_Table_role role = 1;
  total_size += 1UL * this->_internal_role_size();
  for (const auto& msg : this->role_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GORM_PB_TABLES::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gorm.GORM_PB_TABLES)
  GOOGLE_DCHECK_NE(&from, this);
  const GORM_PB_TABLES* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GORM_PB_TABLES>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gorm.GORM_PB_TABLES)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gorm.GORM_PB_TABLES)
    MergeFrom(*source);
  }
}

void GORM_PB_TABLES::MergeFrom(const GORM_PB_TABLES& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gorm.GORM_PB_TABLES)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  role_.MergeFrom(from.role_);
}

void GORM_PB_TABLES::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gorm.GORM_PB_TABLES)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GORM_PB_TABLES::CopyFrom(const GORM_PB_TABLES& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gorm.GORM_PB_TABLES)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GORM_PB_TABLES::IsInitialized() const {
  return true;
}

void GORM_PB_TABLES::InternalSwap(GORM_PB_TABLES* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  role_.InternalSwap(&other->role_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GORM_PB_TABLES::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace gorm
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::gorm::GORM_PB_COLUMN_VALUE* Arena::CreateMaybeMessage< ::gorm::GORM_PB_COLUMN_VALUE >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gorm::GORM_PB_COLUMN_VALUE >(arena);
}
template<> PROTOBUF_NOINLINE ::gorm::GORM_PB_COLUMN* Arena::CreateMaybeMessage< ::gorm::GORM_PB_COLUMN >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gorm::GORM_PB_COLUMN >(arena);
}
template<> PROTOBUF_NOINLINE ::gorm::GORM_PB_CUSTEM_COLUMNS* Arena::CreateMaybeMessage< ::gorm::GORM_PB_CUSTEM_COLUMNS >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gorm::GORM_PB_CUSTEM_COLUMNS >(arena);
}
template<> PROTOBUF_NOINLINE ::gorm::GORM_PB_TABLE* Arena::CreateMaybeMessage< ::gorm::GORM_PB_TABLE >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gorm::GORM_PB_TABLE >(arena);
}
template<> PROTOBUF_NOINLINE ::gorm::GORM_PB_TABLES* Arena::CreateMaybeMessage< ::gorm::GORM_PB_TABLES >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gorm::GORM_PB_TABLES >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
