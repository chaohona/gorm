// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gorm_pb_proto.proto

#include "gorm_pb_proto.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_gorm_5fpb_5fproto_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GORM_PB_REQ_HEADER_gorm_5fpb_5fproto_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_gorm_5fpb_5fproto_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GORM_PB_Ret_Code_gorm_5fpb_5fproto_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_gorm_5fpb_5fproto_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GORM_PB_SPLIT_INFO_gorm_5fpb_5fproto_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_gorm_5fpb_5fproto_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE_gorm_5fpb_5fproto_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_gorm_5fpb_5ftables_5finc_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<15> scc_info_GORM_PB_TABLE_gorm_5fpb_5ftables_5finc_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_gorm_5fpb_5fproto_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GORM_PB_TABLE_SCHEMA_INFO_gorm_5fpb_5fproto_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_gorm_5fpb_5fproto_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GORM_PB_TABLE_SCHEMA_INFO_COLUMN_gorm_5fpb_5fproto_2eproto;
namespace gorm {
class GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUEDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE> _instance;
} _GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE_default_instance_;
class GORM_PB_SPLIT_INFODefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GORM_PB_SPLIT_INFO> _instance;
} _GORM_PB_SPLIT_INFO_default_instance_;
class GORM_PB_Ret_CodeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GORM_PB_Ret_Code> _instance;
} _GORM_PB_Ret_Code_default_instance_;
class GORM_PB_RELOAD_TABLE_REQDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GORM_PB_RELOAD_TABLE_REQ> _instance;
} _GORM_PB_RELOAD_TABLE_REQ_default_instance_;
class GORM_PB_RELOAD_TABLE_RSPDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GORM_PB_RELOAD_TABLE_RSP> _instance;
} _GORM_PB_RELOAD_TABLE_RSP_default_instance_;
class GORM_PB_REQ_HEADERDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GORM_PB_REQ_HEADER> _instance;
} _GORM_PB_REQ_HEADER_default_instance_;
class GORM_PB_HEART_REQDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GORM_PB_HEART_REQ> _instance;
} _GORM_PB_HEART_REQ_default_instance_;
class GORM_PB_HEART_RSPDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GORM_PB_HEART_RSP> _instance;
} _GORM_PB_HEART_RSP_default_instance_;
class GORM_PB_TABLE_SCHEMA_INFO_COLUMNDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GORM_PB_TABLE_SCHEMA_INFO_COLUMN> _instance;
} _GORM_PB_TABLE_SCHEMA_INFO_COLUMN_default_instance_;
class GORM_PB_TABLE_SCHEMA_INFODefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GORM_PB_TABLE_SCHEMA_INFO> _instance;
} _GORM_PB_TABLE_SCHEMA_INFO_default_instance_;
class GORM_PB_HAND_SHAKE_REQDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GORM_PB_HAND_SHAKE_REQ> _instance;
} _GORM_PB_HAND_SHAKE_REQ_default_instance_;
class GORM_PB_INSERT_REQDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GORM_PB_INSERT_REQ> _instance;
} _GORM_PB_INSERT_REQ_default_instance_;
class GORM_PB_INSERT_RSPDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GORM_PB_INSERT_RSP> _instance;
} _GORM_PB_INSERT_RSP_default_instance_;
class GORM_PB_UPDATE_REQDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GORM_PB_UPDATE_REQ> _instance;
} _GORM_PB_UPDATE_REQ_default_instance_;
class GORM_PB_UPDATE_RSPDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GORM_PB_UPDATE_RSP> _instance;
} _GORM_PB_UPDATE_RSP_default_instance_;
class GORM_PB_REPLACE_REQDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GORM_PB_REPLACE_REQ> _instance;
} _GORM_PB_REPLACE_REQ_default_instance_;
class GORM_PB_REPLACE_RSPDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GORM_PB_REPLACE_RSP> _instance;
} _GORM_PB_REPLACE_RSP_default_instance_;
class GORM_PB_GET_REQDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GORM_PB_GET_REQ> _instance;
} _GORM_PB_GET_REQ_default_instance_;
class GORM_PB_GET_RSPDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GORM_PB_GET_RSP> _instance;
} _GORM_PB_GET_RSP_default_instance_;
class GORM_PB_BATCH_GET_REQDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GORM_PB_BATCH_GET_REQ> _instance;
} _GORM_PB_BATCH_GET_REQ_default_instance_;
class GORM_PB_BATCH_GET_RSPDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GORM_PB_BATCH_GET_RSP> _instance;
} _GORM_PB_BATCH_GET_RSP_default_instance_;
class GORM_PB_INCREASE_REQDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GORM_PB_INCREASE_REQ> _instance;
} _GORM_PB_INCREASE_REQ_default_instance_;
class GORM_PB_INCREASE_RSPDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GORM_PB_INCREASE_RSP> _instance;
} _GORM_PB_INCREASE_RSP_default_instance_;
class GORM_PB_DELETE_REQDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GORM_PB_DELETE_REQ> _instance;
} _GORM_PB_DELETE_REQ_default_instance_;
class GORM_PB_DELETE_RSPDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GORM_PB_DELETE_RSP> _instance;
} _GORM_PB_DELETE_RSP_default_instance_;
class GORM_PB_GET_BY_PARTKEY_REQDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GORM_PB_GET_BY_PARTKEY_REQ> _instance;
} _GORM_PB_GET_BY_PARTKEY_REQ_default_instance_;
class GORM_PB_GET_BY_PARTKEY_RSPDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GORM_PB_GET_BY_PARTKEY_RSP> _instance;
} _GORM_PB_GET_BY_PARTKEY_RSP_default_instance_;
class GORM_PB_GET_BY_NON_PRIMARY_KEY_REQDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ> _instance;
} _GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ_default_instance_;
class GORM_PB_GET_BY_NON_PRIMARY_KEY_RSPDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP> _instance;
} _GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP_default_instance_;
}  // namespace gorm
static void InitDefaultsscc_info_GORM_PB_BATCH_GET_REQ_gorm_5fpb_5fproto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gorm::_GORM_PB_BATCH_GET_REQ_default_instance_;
    new (ptr) ::gorm::GORM_PB_BATCH_GET_REQ();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gorm::GORM_PB_BATCH_GET_REQ::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GORM_PB_BATCH_GET_REQ_gorm_5fpb_5fproto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GORM_PB_BATCH_GET_REQ_gorm_5fpb_5fproto_2eproto}, {
      &scc_info_GORM_PB_REQ_HEADER_gorm_5fpb_5fproto_2eproto.base,
      &scc_info_GORM_PB_TABLE_gorm_5fpb_5ftables_5finc_2eproto.base,}};

static void InitDefaultsscc_info_GORM_PB_BATCH_GET_RSP_gorm_5fpb_5fproto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gorm::_GORM_PB_BATCH_GET_RSP_default_instance_;
    new (ptr) ::gorm::GORM_PB_BATCH_GET_RSP();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gorm::GORM_PB_BATCH_GET_RSP::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GORM_PB_BATCH_GET_RSP_gorm_5fpb_5fproto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GORM_PB_BATCH_GET_RSP_gorm_5fpb_5fproto_2eproto}, {
      &scc_info_GORM_PB_Ret_Code_gorm_5fpb_5fproto_2eproto.base,
      &scc_info_GORM_PB_TABLE_gorm_5fpb_5ftables_5finc_2eproto.base,}};

static void InitDefaultsscc_info_GORM_PB_DELETE_REQ_gorm_5fpb_5fproto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gorm::_GORM_PB_DELETE_REQ_default_instance_;
    new (ptr) ::gorm::GORM_PB_DELETE_REQ();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gorm::GORM_PB_DELETE_REQ::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GORM_PB_DELETE_REQ_gorm_5fpb_5fproto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GORM_PB_DELETE_REQ_gorm_5fpb_5fproto_2eproto}, {
      &scc_info_GORM_PB_REQ_HEADER_gorm_5fpb_5fproto_2eproto.base,
      &scc_info_GORM_PB_TABLE_gorm_5fpb_5ftables_5finc_2eproto.base,}};

static void InitDefaultsscc_info_GORM_PB_DELETE_RSP_gorm_5fpb_5fproto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gorm::_GORM_PB_DELETE_RSP_default_instance_;
    new (ptr) ::gorm::GORM_PB_DELETE_RSP();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gorm::GORM_PB_DELETE_RSP::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GORM_PB_DELETE_RSP_gorm_5fpb_5fproto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GORM_PB_DELETE_RSP_gorm_5fpb_5fproto_2eproto}, {
      &scc_info_GORM_PB_Ret_Code_gorm_5fpb_5fproto_2eproto.base,}};

static void InitDefaultsscc_info_GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ_gorm_5fpb_5fproto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gorm::_GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ_default_instance_;
    new (ptr) ::gorm::GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gorm::GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ_gorm_5fpb_5fproto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ_gorm_5fpb_5fproto_2eproto}, {
      &scc_info_GORM_PB_REQ_HEADER_gorm_5fpb_5fproto_2eproto.base,
      &scc_info_GORM_PB_TABLE_gorm_5fpb_5ftables_5finc_2eproto.base,}};

static void InitDefaultsscc_info_GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP_gorm_5fpb_5fproto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gorm::_GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP_default_instance_;
    new (ptr) ::gorm::GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gorm::GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP_gorm_5fpb_5fproto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP_gorm_5fpb_5fproto_2eproto}, {
      &scc_info_GORM_PB_Ret_Code_gorm_5fpb_5fproto_2eproto.base,
      &scc_info_GORM_PB_TABLE_gorm_5fpb_5ftables_5finc_2eproto.base,}};

static void InitDefaultsscc_info_GORM_PB_GET_BY_PARTKEY_REQ_gorm_5fpb_5fproto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gorm::_GORM_PB_GET_BY_PARTKEY_REQ_default_instance_;
    new (ptr) ::gorm::GORM_PB_GET_BY_PARTKEY_REQ();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gorm::GORM_PB_GET_BY_PARTKEY_REQ::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GORM_PB_GET_BY_PARTKEY_REQ_gorm_5fpb_5fproto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GORM_PB_GET_BY_PARTKEY_REQ_gorm_5fpb_5fproto_2eproto}, {
      &scc_info_GORM_PB_REQ_HEADER_gorm_5fpb_5fproto_2eproto.base,
      &scc_info_GORM_PB_TABLE_gorm_5fpb_5ftables_5finc_2eproto.base,}};

static void InitDefaultsscc_info_GORM_PB_GET_BY_PARTKEY_RSP_gorm_5fpb_5fproto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gorm::_GORM_PB_GET_BY_PARTKEY_RSP_default_instance_;
    new (ptr) ::gorm::GORM_PB_GET_BY_PARTKEY_RSP();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gorm::GORM_PB_GET_BY_PARTKEY_RSP::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GORM_PB_GET_BY_PARTKEY_RSP_gorm_5fpb_5fproto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GORM_PB_GET_BY_PARTKEY_RSP_gorm_5fpb_5fproto_2eproto}, {
      &scc_info_GORM_PB_Ret_Code_gorm_5fpb_5fproto_2eproto.base,
      &scc_info_GORM_PB_TABLE_gorm_5fpb_5ftables_5finc_2eproto.base,}};

static void InitDefaultsscc_info_GORM_PB_GET_REQ_gorm_5fpb_5fproto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gorm::_GORM_PB_GET_REQ_default_instance_;
    new (ptr) ::gorm::GORM_PB_GET_REQ();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gorm::GORM_PB_GET_REQ::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GORM_PB_GET_REQ_gorm_5fpb_5fproto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GORM_PB_GET_REQ_gorm_5fpb_5fproto_2eproto}, {
      &scc_info_GORM_PB_REQ_HEADER_gorm_5fpb_5fproto_2eproto.base,
      &scc_info_GORM_PB_TABLE_gorm_5fpb_5ftables_5finc_2eproto.base,}};

static void InitDefaultsscc_info_GORM_PB_GET_RSP_gorm_5fpb_5fproto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gorm::_GORM_PB_GET_RSP_default_instance_;
    new (ptr) ::gorm::GORM_PB_GET_RSP();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gorm::GORM_PB_GET_RSP::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GORM_PB_GET_RSP_gorm_5fpb_5fproto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GORM_PB_GET_RSP_gorm_5fpb_5fproto_2eproto}, {
      &scc_info_GORM_PB_Ret_Code_gorm_5fpb_5fproto_2eproto.base,
      &scc_info_GORM_PB_TABLE_gorm_5fpb_5ftables_5finc_2eproto.base,}};

static void InitDefaultsscc_info_GORM_PB_HAND_SHAKE_REQ_gorm_5fpb_5fproto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gorm::_GORM_PB_HAND_SHAKE_REQ_default_instance_;
    new (ptr) ::gorm::GORM_PB_HAND_SHAKE_REQ();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gorm::GORM_PB_HAND_SHAKE_REQ::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GORM_PB_HAND_SHAKE_REQ_gorm_5fpb_5fproto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GORM_PB_HAND_SHAKE_REQ_gorm_5fpb_5fproto_2eproto}, {
      &scc_info_GORM_PB_REQ_HEADER_gorm_5fpb_5fproto_2eproto.base,
      &scc_info_GORM_PB_TABLE_SCHEMA_INFO_gorm_5fpb_5fproto_2eproto.base,}};

static void InitDefaultsscc_info_GORM_PB_HEART_REQ_gorm_5fpb_5fproto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gorm::_GORM_PB_HEART_REQ_default_instance_;
    new (ptr) ::gorm::GORM_PB_HEART_REQ();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gorm::GORM_PB_HEART_REQ::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GORM_PB_HEART_REQ_gorm_5fpb_5fproto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GORM_PB_HEART_REQ_gorm_5fpb_5fproto_2eproto}, {
      &scc_info_GORM_PB_REQ_HEADER_gorm_5fpb_5fproto_2eproto.base,}};

static void InitDefaultsscc_info_GORM_PB_HEART_RSP_gorm_5fpb_5fproto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gorm::_GORM_PB_HEART_RSP_default_instance_;
    new (ptr) ::gorm::GORM_PB_HEART_RSP();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gorm::GORM_PB_HEART_RSP::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GORM_PB_HEART_RSP_gorm_5fpb_5fproto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GORM_PB_HEART_RSP_gorm_5fpb_5fproto_2eproto}, {
      &scc_info_GORM_PB_Ret_Code_gorm_5fpb_5fproto_2eproto.base,}};

static void InitDefaultsscc_info_GORM_PB_INCREASE_REQ_gorm_5fpb_5fproto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gorm::_GORM_PB_INCREASE_REQ_default_instance_;
    new (ptr) ::gorm::GORM_PB_INCREASE_REQ();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gorm::GORM_PB_INCREASE_REQ::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GORM_PB_INCREASE_REQ_gorm_5fpb_5fproto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GORM_PB_INCREASE_REQ_gorm_5fpb_5fproto_2eproto}, {
      &scc_info_GORM_PB_REQ_HEADER_gorm_5fpb_5fproto_2eproto.base,
      &scc_info_GORM_PB_TABLE_gorm_5fpb_5ftables_5finc_2eproto.base,}};

static void InitDefaultsscc_info_GORM_PB_INCREASE_RSP_gorm_5fpb_5fproto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gorm::_GORM_PB_INCREASE_RSP_default_instance_;
    new (ptr) ::gorm::GORM_PB_INCREASE_RSP();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gorm::GORM_PB_INCREASE_RSP::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GORM_PB_INCREASE_RSP_gorm_5fpb_5fproto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GORM_PB_INCREASE_RSP_gorm_5fpb_5fproto_2eproto}, {
      &scc_info_GORM_PB_Ret_Code_gorm_5fpb_5fproto_2eproto.base,
      &scc_info_GORM_PB_TABLE_gorm_5fpb_5ftables_5finc_2eproto.base,}};

static void InitDefaultsscc_info_GORM_PB_INSERT_REQ_gorm_5fpb_5fproto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gorm::_GORM_PB_INSERT_REQ_default_instance_;
    new (ptr) ::gorm::GORM_PB_INSERT_REQ();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gorm::GORM_PB_INSERT_REQ::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GORM_PB_INSERT_REQ_gorm_5fpb_5fproto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GORM_PB_INSERT_REQ_gorm_5fpb_5fproto_2eproto}, {
      &scc_info_GORM_PB_REQ_HEADER_gorm_5fpb_5fproto_2eproto.base,
      &scc_info_GORM_PB_TABLE_gorm_5fpb_5ftables_5finc_2eproto.base,}};

static void InitDefaultsscc_info_GORM_PB_INSERT_RSP_gorm_5fpb_5fproto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gorm::_GORM_PB_INSERT_RSP_default_instance_;
    new (ptr) ::gorm::GORM_PB_INSERT_RSP();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gorm::GORM_PB_INSERT_RSP::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GORM_PB_INSERT_RSP_gorm_5fpb_5fproto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GORM_PB_INSERT_RSP_gorm_5fpb_5fproto_2eproto}, {
      &scc_info_GORM_PB_Ret_Code_gorm_5fpb_5fproto_2eproto.base,
      &scc_info_GORM_PB_TABLE_gorm_5fpb_5ftables_5finc_2eproto.base,}};

static void InitDefaultsscc_info_GORM_PB_RELOAD_TABLE_REQ_gorm_5fpb_5fproto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gorm::_GORM_PB_RELOAD_TABLE_REQ_default_instance_;
    new (ptr) ::gorm::GORM_PB_RELOAD_TABLE_REQ();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gorm::GORM_PB_RELOAD_TABLE_REQ::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GORM_PB_RELOAD_TABLE_REQ_gorm_5fpb_5fproto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GORM_PB_RELOAD_TABLE_REQ_gorm_5fpb_5fproto_2eproto}, {
      &scc_info_GORM_PB_REQ_HEADER_gorm_5fpb_5fproto_2eproto.base,}};

static void InitDefaultsscc_info_GORM_PB_RELOAD_TABLE_RSP_gorm_5fpb_5fproto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gorm::_GORM_PB_RELOAD_TABLE_RSP_default_instance_;
    new (ptr) ::gorm::GORM_PB_RELOAD_TABLE_RSP();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gorm::GORM_PB_RELOAD_TABLE_RSP::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GORM_PB_RELOAD_TABLE_RSP_gorm_5fpb_5fproto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GORM_PB_RELOAD_TABLE_RSP_gorm_5fpb_5fproto_2eproto}, {
      &scc_info_GORM_PB_Ret_Code_gorm_5fpb_5fproto_2eproto.base,}};

static void InitDefaultsscc_info_GORM_PB_REPLACE_REQ_gorm_5fpb_5fproto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gorm::_GORM_PB_REPLACE_REQ_default_instance_;
    new (ptr) ::gorm::GORM_PB_REPLACE_REQ();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gorm::GORM_PB_REPLACE_REQ::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GORM_PB_REPLACE_REQ_gorm_5fpb_5fproto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GORM_PB_REPLACE_REQ_gorm_5fpb_5fproto_2eproto}, {
      &scc_info_GORM_PB_REQ_HEADER_gorm_5fpb_5fproto_2eproto.base,
      &scc_info_GORM_PB_TABLE_gorm_5fpb_5ftables_5finc_2eproto.base,}};

static void InitDefaultsscc_info_GORM_PB_REPLACE_RSP_gorm_5fpb_5fproto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gorm::_GORM_PB_REPLACE_RSP_default_instance_;
    new (ptr) ::gorm::GORM_PB_REPLACE_RSP();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gorm::GORM_PB_REPLACE_RSP::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GORM_PB_REPLACE_RSP_gorm_5fpb_5fproto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GORM_PB_REPLACE_RSP_gorm_5fpb_5fproto_2eproto}, {
      &scc_info_GORM_PB_Ret_Code_gorm_5fpb_5fproto_2eproto.base,
      &scc_info_GORM_PB_TABLE_gorm_5fpb_5ftables_5finc_2eproto.base,}};

static void InitDefaultsscc_info_GORM_PB_REQ_HEADER_gorm_5fpb_5fproto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gorm::_GORM_PB_REQ_HEADER_default_instance_;
    new (ptr) ::gorm::GORM_PB_REQ_HEADER();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gorm::GORM_PB_REQ_HEADER::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GORM_PB_REQ_HEADER_gorm_5fpb_5fproto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GORM_PB_REQ_HEADER_gorm_5fpb_5fproto_2eproto}, {
      &scc_info_GORM_PB_SPLIT_INFO_gorm_5fpb_5fproto_2eproto.base,}};

static void InitDefaultsscc_info_GORM_PB_Ret_Code_gorm_5fpb_5fproto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gorm::_GORM_PB_Ret_Code_default_instance_;
    new (ptr) ::gorm::GORM_PB_Ret_Code();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gorm::GORM_PB_Ret_Code::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GORM_PB_Ret_Code_gorm_5fpb_5fproto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GORM_PB_Ret_Code_gorm_5fpb_5fproto_2eproto}, {}};

static void InitDefaultsscc_info_GORM_PB_SPLIT_INFO_gorm_5fpb_5fproto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gorm::_GORM_PB_SPLIT_INFO_default_instance_;
    new (ptr) ::gorm::GORM_PB_SPLIT_INFO();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gorm::GORM_PB_SPLIT_INFO::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GORM_PB_SPLIT_INFO_gorm_5fpb_5fproto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GORM_PB_SPLIT_INFO_gorm_5fpb_5fproto_2eproto}, {
      &scc_info_GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE_gorm_5fpb_5fproto_2eproto.base,}};

static void InitDefaultsscc_info_GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE_gorm_5fpb_5fproto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gorm::_GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE_default_instance_;
    new (ptr) ::gorm::GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gorm::GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE_gorm_5fpb_5fproto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE_gorm_5fpb_5fproto_2eproto}, {}};

static void InitDefaultsscc_info_GORM_PB_TABLE_SCHEMA_INFO_gorm_5fpb_5fproto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gorm::_GORM_PB_TABLE_SCHEMA_INFO_default_instance_;
    new (ptr) ::gorm::GORM_PB_TABLE_SCHEMA_INFO();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gorm::GORM_PB_TABLE_SCHEMA_INFO::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GORM_PB_TABLE_SCHEMA_INFO_gorm_5fpb_5fproto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GORM_PB_TABLE_SCHEMA_INFO_gorm_5fpb_5fproto_2eproto}, {
      &scc_info_GORM_PB_TABLE_SCHEMA_INFO_COLUMN_gorm_5fpb_5fproto_2eproto.base,}};

static void InitDefaultsscc_info_GORM_PB_TABLE_SCHEMA_INFO_COLUMN_gorm_5fpb_5fproto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gorm::_GORM_PB_TABLE_SCHEMA_INFO_COLUMN_default_instance_;
    new (ptr) ::gorm::GORM_PB_TABLE_SCHEMA_INFO_COLUMN();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gorm::GORM_PB_TABLE_SCHEMA_INFO_COLUMN::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GORM_PB_TABLE_SCHEMA_INFO_COLUMN_gorm_5fpb_5fproto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GORM_PB_TABLE_SCHEMA_INFO_COLUMN_gorm_5fpb_5fproto_2eproto}, {}};

static void InitDefaultsscc_info_GORM_PB_UPDATE_REQ_gorm_5fpb_5fproto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gorm::_GORM_PB_UPDATE_REQ_default_instance_;
    new (ptr) ::gorm::GORM_PB_UPDATE_REQ();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gorm::GORM_PB_UPDATE_REQ::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GORM_PB_UPDATE_REQ_gorm_5fpb_5fproto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GORM_PB_UPDATE_REQ_gorm_5fpb_5fproto_2eproto}, {
      &scc_info_GORM_PB_REQ_HEADER_gorm_5fpb_5fproto_2eproto.base,
      &scc_info_GORM_PB_TABLE_gorm_5fpb_5ftables_5finc_2eproto.base,}};

static void InitDefaultsscc_info_GORM_PB_UPDATE_RSP_gorm_5fpb_5fproto_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::gorm::_GORM_PB_UPDATE_RSP_default_instance_;
    new (ptr) ::gorm::GORM_PB_UPDATE_RSP();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::gorm::GORM_PB_UPDATE_RSP::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GORM_PB_UPDATE_RSP_gorm_5fpb_5fproto_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GORM_PB_UPDATE_RSP_gorm_5fpb_5fproto_2eproto}, {
      &scc_info_GORM_PB_Ret_Code_gorm_5fpb_5fproto_2eproto.base,
      &scc_info_GORM_PB_TABLE_gorm_5fpb_5ftables_5finc_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_gorm_5fpb_5fproto_2eproto[29];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_gorm_5fpb_5fproto_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_gorm_5fpb_5fproto_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_gorm_5fpb_5fproto_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE, column_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_SPLIT_INFO, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_SPLIT_INFO, splitinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_Ret_Code, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_Ret_Code, code_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_Ret_Code, dbcode_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_Ret_Code, dberrinfo_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_Ret_Code, sucessnum_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_Ret_Code, totalnum_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_RELOAD_TABLE_REQ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_RELOAD_TABLE_REQ, header_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_RELOAD_TABLE_REQ, tableversion_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_RELOAD_TABLE_RSP, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_RELOAD_TABLE_RSP, retcode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_REQ_HEADER, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_REQ_HEADER, tableid_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_REQ_HEADER, businessid_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_REQ_HEADER, verpolice_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_REQ_HEADER, reqflag_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_REQ_HEADER, fieldmode_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_REQ_HEADER, splittableinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_HEART_REQ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_HEART_REQ, header_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_HEART_RSP, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_HEART_RSP, retcode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_TABLE_SCHEMA_INFO_COLUMN, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_TABLE_SCHEMA_INFO_COLUMN, version_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_TABLE_SCHEMA_INFO_COLUMN, name_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_TABLE_SCHEMA_INFO_COLUMN, typedesc_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_TABLE_SCHEMA_INFO_COLUMN, type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_TABLE_SCHEMA_INFO, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_TABLE_SCHEMA_INFO, version_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_TABLE_SCHEMA_INFO, tablename_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_TABLE_SCHEMA_INFO, tableidx_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_TABLE_SCHEMA_INFO, columns_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_HAND_SHAKE_REQ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_HAND_SHAKE_REQ, header_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_HAND_SHAKE_REQ, version_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_HAND_SHAKE_REQ, md5_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_HAND_SHAKE_REQ, schemas_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_INSERT_REQ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_INSERT_REQ, header_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_INSERT_REQ, tables_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_INSERT_RSP, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_INSERT_RSP, retcode_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_INSERT_RSP, tables_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_INSERT_RSP, lastinsertid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_UPDATE_REQ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_UPDATE_REQ, header_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_UPDATE_REQ, tables_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_UPDATE_RSP, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_UPDATE_RSP, retcode_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_UPDATE_RSP, tables_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_UPDATE_RSP, affectednum_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_REPLACE_REQ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_REPLACE_REQ, header_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_REPLACE_REQ, tables_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_REPLACE_RSP, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_REPLACE_RSP, retcode_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_REPLACE_RSP, tables_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_REPLACE_RSP, affectednum_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_GET_REQ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_GET_REQ, header_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_GET_REQ, table_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_GET_REQ, getflag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_GET_RSP, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_GET_RSP, retcode_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_GET_RSP, table_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_GET_RSP, newinsert_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_GET_RSP, lastinsertid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_BATCH_GET_REQ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_BATCH_GET_REQ, header_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_BATCH_GET_REQ, tables_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_BATCH_GET_RSP, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_BATCH_GET_RSP, retcode_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_BATCH_GET_RSP, tables_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_INCREASE_REQ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_INCREASE_REQ, header_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_INCREASE_REQ, tables_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_INCREASE_REQ, pluscolumns_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_INCREASE_REQ, minuscolumns_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_INCREASE_RSP, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_INCREASE_RSP, retcode_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_INCREASE_RSP, tables_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_INCREASE_RSP, affectednum_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_DELETE_REQ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_DELETE_REQ, header_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_DELETE_REQ, table_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_DELETE_RSP, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_DELETE_RSP, retcode_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_DELETE_RSP, affectednum_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_GET_BY_PARTKEY_REQ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_GET_BY_PARTKEY_REQ, header_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_GET_BY_PARTKEY_REQ, tables_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_GET_BY_PARTKEY_RSP, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_GET_BY_PARTKEY_RSP, retcode_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_GET_BY_PARTKEY_RSP, tables_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ, header_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ, tables_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP, retcode_),
  PROTOBUF_FIELD_OFFSET(::gorm::GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP, tables_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::gorm::GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE)},
  { 7, -1, sizeof(::gorm::GORM_PB_SPLIT_INFO)},
  { 13, -1, sizeof(::gorm::GORM_PB_Ret_Code)},
  { 23, -1, sizeof(::gorm::GORM_PB_RELOAD_TABLE_REQ)},
  { 30, -1, sizeof(::gorm::GORM_PB_RELOAD_TABLE_RSP)},
  { 36, -1, sizeof(::gorm::GORM_PB_REQ_HEADER)},
  { 47, -1, sizeof(::gorm::GORM_PB_HEART_REQ)},
  { 53, -1, sizeof(::gorm::GORM_PB_HEART_RSP)},
  { 59, -1, sizeof(::gorm::GORM_PB_TABLE_SCHEMA_INFO_COLUMN)},
  { 68, -1, sizeof(::gorm::GORM_PB_TABLE_SCHEMA_INFO)},
  { 77, -1, sizeof(::gorm::GORM_PB_HAND_SHAKE_REQ)},
  { 86, -1, sizeof(::gorm::GORM_PB_INSERT_REQ)},
  { 93, -1, sizeof(::gorm::GORM_PB_INSERT_RSP)},
  { 101, -1, sizeof(::gorm::GORM_PB_UPDATE_REQ)},
  { 108, -1, sizeof(::gorm::GORM_PB_UPDATE_RSP)},
  { 116, -1, sizeof(::gorm::GORM_PB_REPLACE_REQ)},
  { 123, -1, sizeof(::gorm::GORM_PB_REPLACE_RSP)},
  { 131, -1, sizeof(::gorm::GORM_PB_GET_REQ)},
  { 139, -1, sizeof(::gorm::GORM_PB_GET_RSP)},
  { 148, -1, sizeof(::gorm::GORM_PB_BATCH_GET_REQ)},
  { 155, -1, sizeof(::gorm::GORM_PB_BATCH_GET_RSP)},
  { 162, -1, sizeof(::gorm::GORM_PB_INCREASE_REQ)},
  { 171, -1, sizeof(::gorm::GORM_PB_INCREASE_RSP)},
  { 179, -1, sizeof(::gorm::GORM_PB_DELETE_REQ)},
  { 186, -1, sizeof(::gorm::GORM_PB_DELETE_RSP)},
  { 193, -1, sizeof(::gorm::GORM_PB_GET_BY_PARTKEY_REQ)},
  { 200, -1, sizeof(::gorm::GORM_PB_GET_BY_PARTKEY_RSP)},
  { 207, -1, sizeof(::gorm::GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ)},
  { 214, -1, sizeof(::gorm::GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gorm::_GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gorm::_GORM_PB_SPLIT_INFO_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gorm::_GORM_PB_Ret_Code_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gorm::_GORM_PB_RELOAD_TABLE_REQ_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gorm::_GORM_PB_RELOAD_TABLE_RSP_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gorm::_GORM_PB_REQ_HEADER_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gorm::_GORM_PB_HEART_REQ_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gorm::_GORM_PB_HEART_RSP_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gorm::_GORM_PB_TABLE_SCHEMA_INFO_COLUMN_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gorm::_GORM_PB_TABLE_SCHEMA_INFO_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gorm::_GORM_PB_HAND_SHAKE_REQ_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gorm::_GORM_PB_INSERT_REQ_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gorm::_GORM_PB_INSERT_RSP_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gorm::_GORM_PB_UPDATE_REQ_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gorm::_GORM_PB_UPDATE_RSP_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gorm::_GORM_PB_REPLACE_REQ_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gorm::_GORM_PB_REPLACE_RSP_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gorm::_GORM_PB_GET_REQ_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gorm::_GORM_PB_GET_RSP_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gorm::_GORM_PB_BATCH_GET_REQ_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gorm::_GORM_PB_BATCH_GET_RSP_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gorm::_GORM_PB_INCREASE_REQ_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gorm::_GORM_PB_INCREASE_RSP_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gorm::_GORM_PB_DELETE_REQ_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gorm::_GORM_PB_DELETE_RSP_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gorm::_GORM_PB_GET_BY_PARTKEY_REQ_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gorm::_GORM_PB_GET_BY_PARTKEY_RSP_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gorm::_GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::gorm::_GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP_default_instance_),
};

const char descriptor_table_protodef_gorm_5fpb_5fproto_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\023gorm_pb_proto.proto\022\004gorm\032\030gorm_pb_tab"
  "les_inc.proto\"\207\001\n\022GORM_PB_SPLIT_INFO\022=\n\t"
  "SplitInfo\030\001 \003(\0132*.gorm.GORM_PB_SPLIT_INF"
  "O.GORM_COLUMN_VALUE\0322\n\021GORM_COLUMN_VALUE"
  "\022\016\n\006Column\030\001 \001(\005\022\r\n\005Value\030\002 \001(\014\"h\n\020GORM_"
  "PB_Ret_Code\022\014\n\004Code\030\001 \001(\005\022\016\n\006DBCode\030\002 \001("
  "\005\022\021\n\tDBErrInfo\030\003 \001(\t\022\021\n\tSucessNum\030\004 \001(\005\022"
  "\020\n\010TotalNum\030\005 \001(\005\"Z\n\030GORM_PB_RELOAD_TABL"
  "E_REQ\022(\n\006Header\030\001 \001(\0132\030.gorm.GORM_PB_REQ"
  "_HEADER\022\024\n\014TableVersion\030\002 \001(\004\"C\n\030GORM_PB"
  "_RELOAD_TABLE_RSP\022\'\n\007RetCode\030\001 \001(\0132\026.gor"
  "m.GORM_PB_Ret_Code\"\242\001\n\022GORM_PB_REQ_HEADE"
  "R\022\017\n\007TableId\030\001 \001(\005\022\022\n\nBusinessID\030\002 \001(\005\022\021"
  "\n\tVerPolice\030\003 \001(\005\022\017\n\007ReqFlag\030\004 \001(\r\022\021\n\tFi"
  "eldMode\030\005 \001(\014\0220\n\016SplitTableInfo\030\006 \001(\0132\030."
  "gorm.GORM_PB_SPLIT_INFO\"=\n\021GORM_PB_HEART"
  "_REQ\022(\n\006Header\030\001 \001(\0132\030.gorm.GORM_PB_REQ_"
  "HEADER\"<\n\021GORM_PB_HEART_RSP\022\'\n\007RetCode\030\001"
  " \001(\0132\026.gorm.GORM_PB_Ret_Code\"|\n GORM_PB_"
  "TABLE_SCHEMA_INFO_COLUMN\022\017\n\007Version\030\001 \001("
  "\004\022\014\n\004Name\030\002 \001(\t\022\020\n\010TypeDesc\030\003 \001(\t\022\'\n\004Typ"
  "e\030\004 \001(\0162\031.gorm.GORM_PB_COLUMN_TYPE\"\212\001\n\031G"
  "ORM_PB_TABLE_SCHEMA_INFO\022\017\n\007Version\030\001 \001("
  "\004\022\021\n\tTableName\030\002 \001(\t\022\020\n\010TableIdx\030\003 \001(\005\0227"
  "\n\007Columns\030\004 \003(\0132&.gorm.GORM_PB_TABLE_SCH"
  "EMA_INFO_COLUMN\"\222\001\n\026GORM_PB_HAND_SHAKE_R"
  "EQ\022(\n\006Header\030\001 \001(\0132\030.gorm.GORM_PB_REQ_HE"
  "ADER\022\017\n\007Version\030\002 \001(\004\022\013\n\003Md5\030\003 \001(\r\0220\n\007Sc"
  "hemas\030\004 \003(\0132\037.gorm.GORM_PB_TABLE_SCHEMA_"
  "INFO\"c\n\022GORM_PB_INSERT_REQ\022(\n\006Header\030\001 \001"
  "(\0132\030.gorm.GORM_PB_REQ_HEADER\022#\n\006Tables\030\002"
  " \003(\0132\023.gorm.GORM_PB_TABLE\"x\n\022GORM_PB_INS"
  "ERT_RSP\022\'\n\007RetCode\030\001 \001(\0132\026.gorm.GORM_PB_"
  "Ret_Code\022#\n\006Tables\030\002 \003(\0132\023.gorm.GORM_PB_"
  "TABLE\022\024\n\014LastInsertId\030\003 \001(\004\"c\n\022GORM_PB_U"
  "PDATE_REQ\022(\n\006Header\030\001 \001(\0132\030.gorm.GORM_PB"
  "_REQ_HEADER\022#\n\006Tables\030\002 \003(\0132\023.gorm.GORM_"
  "PB_TABLE\"w\n\022GORM_PB_UPDATE_RSP\022\'\n\007RetCod"
  "e\030\001 \001(\0132\026.gorm.GORM_PB_Ret_Code\022#\n\006Table"
  "s\030\002 \003(\0132\023.gorm.GORM_PB_TABLE\022\023\n\013Affected"
  "Num\030\003 \001(\005\"d\n\023GORM_PB_REPLACE_REQ\022(\n\006Head"
  "er\030\001 \001(\0132\030.gorm.GORM_PB_REQ_HEADER\022#\n\006Ta"
  "bles\030\002 \003(\0132\023.gorm.GORM_PB_TABLE\"x\n\023GORM_"
  "PB_REPLACE_RSP\022\'\n\007RetCode\030\001 \001(\0132\026.gorm.G"
  "ORM_PB_Ret_Code\022#\n\006Tables\030\002 \003(\0132\023.gorm.G"
  "ORM_PB_TABLE\022\023\n\013AffectedNum\030\003 \001(\005\"p\n\017GOR"
  "M_PB_GET_REQ\022(\n\006Header\030\001 \001(\0132\030.gorm.GORM"
  "_PB_REQ_HEADER\022\"\n\005Table\030\002 \001(\0132\023.gorm.GOR"
  "M_PB_TABLE\022\017\n\007GetFlag\030\003 \001(\005\"\207\001\n\017GORM_PB_"
  "GET_RSP\022\'\n\007RetCode\030\001 \001(\0132\026.gorm.GORM_PB_"
  "Ret_Code\022\"\n\005Table\030\002 \001(\0132\023.gorm.GORM_PB_T"
  "ABLE\022\021\n\tNewInsert\030\003 \001(\005\022\024\n\014LastInsertId\030"
  "\004 \001(\004\"f\n\025GORM_PB_BATCH_GET_REQ\022(\n\006Header"
  "\030\001 \001(\0132\030.gorm.GORM_PB_REQ_HEADER\022#\n\006Tabl"
  "es\030\002 \003(\0132\023.gorm.GORM_PB_TABLE\"e\n\025GORM_PB"
  "_BATCH_GET_RSP\022\'\n\007RetCode\030\001 \001(\0132\026.gorm.G"
  "ORM_PB_Ret_Code\022#\n\006Tables\030\002 \003(\0132\023.gorm.G"
  "ORM_PB_TABLE\"\220\001\n\024GORM_PB_INCREASE_REQ\022(\n"
  "\006Header\030\001 \001(\0132\030.gorm.GORM_PB_REQ_HEADER\022"
  "#\n\006Tables\030\002 \003(\0132\023.gorm.GORM_PB_TABLE\022\023\n\013"
  "PlusColumns\030\003 \001(\t\022\024\n\014MinusColumns\030\004 \001(\t\""
  "y\n\024GORM_PB_INCREASE_RSP\022\'\n\007RetCode\030\001 \001(\013"
  "2\026.gorm.GORM_PB_Ret_Code\022#\n\006Tables\030\002 \003(\013"
  "2\023.gorm.GORM_PB_TABLE\022\023\n\013AffectedNum\030\003 \001"
  "(\005\"b\n\022GORM_PB_DELETE_REQ\022(\n\006Header\030\001 \001(\013"
  "2\030.gorm.GORM_PB_REQ_HEADER\022\"\n\005Table\030\002 \001("
  "\0132\023.gorm.GORM_PB_TABLE\"R\n\022GORM_PB_DELETE"
  "_RSP\022\'\n\007RetCode\030\001 \001(\0132\026.gorm.GORM_PB_Ret"
  "_Code\022\023\n\013AffectedNum\030\002 \001(\005\"k\n\032GORM_PB_GE"
  "T_BY_PARTKEY_REQ\022(\n\006Header\030\001 \001(\0132\030.gorm."
  "GORM_PB_REQ_HEADER\022#\n\006Tables\030\002 \003(\0132\023.gor"
  "m.GORM_PB_TABLE\"j\n\032GORM_PB_GET_BY_PARTKE"
  "Y_RSP\022\'\n\007RetCode\030\001 \001(\0132\026.gorm.GORM_PB_Re"
  "t_Code\022#\n\006Tables\030\002 \003(\0132\023.gorm.GORM_PB_TA"
  "BLE\"s\n\"GORM_PB_GET_BY_NON_PRIMARY_KEY_RE"
  "Q\022(\n\006Header\030\001 \001(\0132\030.gorm.GORM_PB_REQ_HEA"
  "DER\022#\n\006Tables\030\002 \003(\0132\023.gorm.GORM_PB_TABLE"
  "\"r\n\"GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP\022\'"
  "\n\007RetCode\030\001 \001(\0132\026.gorm.GORM_PB_Ret_Code\022"
  "#\n\006Tables\030\002 \003(\0132\023.gorm.GORM_PB_TABLE*\367\010\n"
  "\tGORM_CODE\022\020\n\014GORM_CODE_OK\020\000\022\034\n\017GORM_COD"
  "E_ERROR\020\377\377\377\377\377\377\377\377\377\001\022\035\n\020GORM_CODE_EAGAIN\020\376"
  "\377\377\377\377\377\377\377\377\001\022%\n\030GORM_CODE_INVALID_CLIENT\020\375\377"
  "\377\377\377\377\377\377\377\001\022\"\n\025GORM_CODE_PART_FAILED\020\374\377\377\377\377\377"
  "\377\377\377\001\022$\n\027GORM_CODE_INVALID_TABLE\020\373\377\377\377\377\377\377\377"
  "\377\001\022\034\n\017GORM_CODE_RESET\020\372\377\377\377\377\377\377\377\377\001\022&\n\031GORM"
  "_CODE_TOO_MUCH_RECORD\020\371\377\377\377\377\377\377\377\377\001\022\"\n\025GORM"
  "_CODE_INIT_RECORD\020\370\377\377\377\377\377\377\377\377\001\022$\n\027GORM_COD"
  "E_INVALID_FIELD\020\367\377\377\377\377\377\377\377\377\001\022%\n\030GORM_CODE_"
  "PACK_REQ_ERROR\020\366\377\377\377\377\377\377\377\377\001\022%\n\030GORM_CODE_R"
  "EQ_NO_RECORDS\020\365\377\377\377\377\377\377\377\377\001\022#\n\026GORM_CODE_MU"
  "LTI_TABLES\020\364\377\377\377\377\377\377\377\377\001\022(\n\033GORM_CODE_RSP_U"
  "NPACK_FAILED\020\363\377\377\377\377\377\377\377\377\001\022\"\n\025GORM_CODE_CON"
  "N_CLOSED\020\362\377\377\377\377\377\377\377\377\001\022\"\n\025GORM_CODE_CONN_FA"
  "ILED\020\361\377\377\377\377\377\377\377\377\001\022\037\n\022GORM_CODE_DB_ERROR\020\360\377"
  "\377\377\377\377\377\377\377\001\022\034\n\017GORM_CODE_NO_DB\020\357\377\377\377\377\377\377\377\377\001\022$"
  "\n\027GORM_CODE_REQ_MSG_ERROR\020\356\377\377\377\377\377\377\377\377\001\022&\n\031"
  "GORM_CODE_NOT_SUPPORT_CMD\020\355\377\377\377\377\377\377\377\377\001\022!\n\024"
  "GORM_CODE_UNPACK_REQ\020\354\377\377\377\377\377\377\377\377\001\022%\n\030GORM_"
  "CODE_PACK_RSP_ERROR\020\353\377\377\377\377\377\377\377\377\001\022(\n\033GORM_C"
  "ODE_REQ_MSG_NO_HEADER\020\352\377\377\377\377\377\377\377\377\001\022%\n\030GORM"
  "_CODE_REQ_NEED_SPLIT\020\351\377\377\377\377\377\377\377\377\001\022$\n\027GORM_"
  "CODE_REQ_TOO_LARGE\020\350\377\377\377\377\377\377\377\377\001\022(\n\033GORM_CO"
  "DE_DB_2_STRUCT_ERROR\020\347\377\377\377\377\377\377\377\377\001\022%\n\030GORM_"
  "CODE_NO_MORE_RECORD\020\346\377\377\377\377\377\377\377\377\001\022&\n\031GORM_C"
  "ODE_VERSION_NOT_SET\020\345\377\377\377\377\377\377\377\377\001\022\"\n\025GORM_C"
  "ODE_CACHE_ERROR\020\344\377\377\377\377\377\377\377\377\001\022\037\n\022GORM_CODE_"
  "NO_VALUE\020\343\377\377\377\377\377\377\377\377\001\022)\n\034GORM_CODE_INVALID"
  "_VALUE_TYPE\020\342\377\377\377\377\377\377\377\377\001*\245\002\n\010GORM_CMD\022\024\n\020G"
  "ORM_CMD_INVALID\020\000\022\022\n\016GORM_CMD_HEART\020\001\022\027\n"
  "\023GORM_CMD_HAND_SHAKE\020\002\022\023\n\017GORM_CMD_INSER"
  "T\020\003\022\024\n\020GORM_CMD_REPLACE\020\004\022\025\n\021GORM_CMD_IN"
  "CREASE\020\005\022\020\n\014GORM_CMD_GET\020\006\022\023\n\017GORM_CMD_D"
  "ELETE\020\007\022\026\n\022GORM_CMD_BATCH_GET\020\010\022\033\n\027GORM_"
  "CMD_GET_BY_PARTKEY\020\t\022\023\n\017GORM_CMD_UPDATE\020"
  "\n\022#\n\037GORM_CMD_GET_BY_NON_PRIMARY_KEY\020\013B\013"
  "Z\tgorm/gormb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_gorm_5fpb_5fproto_2eproto_deps[1] = {
  &::descriptor_table_gorm_5fpb_5ftables_5finc_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_gorm_5fpb_5fproto_2eproto_sccs[29] = {
  &scc_info_GORM_PB_BATCH_GET_REQ_gorm_5fpb_5fproto_2eproto.base,
  &scc_info_GORM_PB_BATCH_GET_RSP_gorm_5fpb_5fproto_2eproto.base,
  &scc_info_GORM_PB_DELETE_REQ_gorm_5fpb_5fproto_2eproto.base,
  &scc_info_GORM_PB_DELETE_RSP_gorm_5fpb_5fproto_2eproto.base,
  &scc_info_GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ_gorm_5fpb_5fproto_2eproto.base,
  &scc_info_GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP_gorm_5fpb_5fproto_2eproto.base,
  &scc_info_GORM_PB_GET_BY_PARTKEY_REQ_gorm_5fpb_5fproto_2eproto.base,
  &scc_info_GORM_PB_GET_BY_PARTKEY_RSP_gorm_5fpb_5fproto_2eproto.base,
  &scc_info_GORM_PB_GET_REQ_gorm_5fpb_5fproto_2eproto.base,
  &scc_info_GORM_PB_GET_RSP_gorm_5fpb_5fproto_2eproto.base,
  &scc_info_GORM_PB_HAND_SHAKE_REQ_gorm_5fpb_5fproto_2eproto.base,
  &scc_info_GORM_PB_HEART_REQ_gorm_5fpb_5fproto_2eproto.base,
  &scc_info_GORM_PB_HEART_RSP_gorm_5fpb_5fproto_2eproto.base,
  &scc_info_GORM_PB_INCREASE_REQ_gorm_5fpb_5fproto_2eproto.base,
  &scc_info_GORM_PB_INCREASE_RSP_gorm_5fpb_5fproto_2eproto.base,
  &scc_info_GORM_PB_INSERT_REQ_gorm_5fpb_5fproto_2eproto.base,
  &scc_info_GORM_PB_INSERT_RSP_gorm_5fpb_5fproto_2eproto.base,
  &scc_info_GORM_PB_RELOAD_TABLE_REQ_gorm_5fpb_5fproto_2eproto.base,
  &scc_info_GORM_PB_RELOAD_TABLE_RSP_gorm_5fpb_5fproto_2eproto.base,
  &scc_info_GORM_PB_REPLACE_REQ_gorm_5fpb_5fproto_2eproto.base,
  &scc_info_GORM_PB_REPLACE_RSP_gorm_5fpb_5fproto_2eproto.base,
  &scc_info_GORM_PB_REQ_HEADER_gorm_5fpb_5fproto_2eproto.base,
  &scc_info_GORM_PB_Ret_Code_gorm_5fpb_5fproto_2eproto.base,
  &scc_info_GORM_PB_SPLIT_INFO_gorm_5fpb_5fproto_2eproto.base,
  &scc_info_GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE_gorm_5fpb_5fproto_2eproto.base,
  &scc_info_GORM_PB_TABLE_SCHEMA_INFO_gorm_5fpb_5fproto_2eproto.base,
  &scc_info_GORM_PB_TABLE_SCHEMA_INFO_COLUMN_gorm_5fpb_5fproto_2eproto.base,
  &scc_info_GORM_PB_UPDATE_REQ_gorm_5fpb_5fproto_2eproto.base,
  &scc_info_GORM_PB_UPDATE_RSP_gorm_5fpb_5fproto_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_gorm_5fpb_5fproto_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_gorm_5fpb_5fproto_2eproto = {
  false, false, descriptor_table_protodef_gorm_5fpb_5fproto_2eproto, "gorm_pb_proto.proto", 4659,
  &descriptor_table_gorm_5fpb_5fproto_2eproto_once, descriptor_table_gorm_5fpb_5fproto_2eproto_sccs, descriptor_table_gorm_5fpb_5fproto_2eproto_deps, 29, 1,
  schemas, file_default_instances, TableStruct_gorm_5fpb_5fproto_2eproto::offsets,
  file_level_metadata_gorm_5fpb_5fproto_2eproto, 29, file_level_enum_descriptors_gorm_5fpb_5fproto_2eproto, file_level_service_descriptors_gorm_5fpb_5fproto_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_gorm_5fpb_5fproto_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_gorm_5fpb_5fproto_2eproto)), true);
namespace gorm {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GORM_CODE_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_gorm_5fpb_5fproto_2eproto);
  return file_level_enum_descriptors_gorm_5fpb_5fproto_2eproto[0];
}
bool GORM_CODE_IsValid(int value) {
  switch (value) {
    case -30:
    case -29:
    case -28:
    case -27:
    case -26:
    case -25:
    case -24:
    case -23:
    case -22:
    case -21:
    case -20:
    case -19:
    case -18:
    case -17:
    case -16:
    case -15:
    case -14:
    case -13:
    case -12:
    case -11:
    case -10:
    case -9:
    case -8:
    case -7:
    case -6:
    case -5:
    case -4:
    case -3:
    case -2:
    case -1:
    case 0:
      return true;
    default:
      return false;
  }
}

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* GORM_CMD_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_gorm_5fpb_5fproto_2eproto);
  return file_level_enum_descriptors_gorm_5fpb_5fproto_2eproto[1];
}
bool GORM_CMD_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE::InitAsDefaultInstance() {
}
class GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE::_Internal {
 public:
};

GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE::GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gorm.GORM_PB_SPLIT_INFO.GORM_COLUMN_VALUE)
}
GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE::GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE(const GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_value().empty()) {
    value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_value(),
      GetArena());
  }
  column_ = from.column_;
  // @@protoc_insertion_point(copy_constructor:gorm.GORM_PB_SPLIT_INFO.GORM_COLUMN_VALUE)
}

void GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE_gorm_5fpb_5fproto_2eproto.base);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  column_ = 0;
}

GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE::~GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE() {
  // @@protoc_insertion_point(destructor:gorm.GORM_PB_SPLIT_INFO.GORM_COLUMN_VALUE)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE::ArenaDtor(void* object) {
  GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE* _this = reinterpret_cast< GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE* >(object);
  (void)_this;
}
void GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE& GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE_gorm_5fpb_5fproto_2eproto.base);
  return *internal_default_instance();
}


void GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE::Clear() {
// @@protoc_insertion_point(message_clear_start:gorm.GORM_PB_SPLIT_INFO.GORM_COLUMN_VALUE)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  column_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 Column = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          column_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes Value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gorm.GORM_PB_SPLIT_INFO.GORM_COLUMN_VALUE)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Column = 1;
  if (this->column() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_column(), target);
  }

  // bytes Value = 2;
  if (this->value().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gorm.GORM_PB_SPLIT_INFO.GORM_COLUMN_VALUE)
  return target;
}

size_t GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gorm.GORM_PB_SPLIT_INFO.GORM_COLUMN_VALUE)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes Value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_value());
  }

  // int32 Column = 1;
  if (this->column() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_column());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gorm.GORM_PB_SPLIT_INFO.GORM_COLUMN_VALUE)
  GOOGLE_DCHECK_NE(&from, this);
  const GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gorm.GORM_PB_SPLIT_INFO.GORM_COLUMN_VALUE)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gorm.GORM_PB_SPLIT_INFO.GORM_COLUMN_VALUE)
    MergeFrom(*source);
  }
}

void GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE::MergeFrom(const GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gorm.GORM_PB_SPLIT_INFO.GORM_COLUMN_VALUE)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {
    _internal_set_value(from._internal_value());
  }
  if (from.column() != 0) {
    _internal_set_column(from._internal_column());
  }
}

void GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gorm.GORM_PB_SPLIT_INFO.GORM_COLUMN_VALUE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE::CopyFrom(const GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gorm.GORM_PB_SPLIT_INFO.GORM_COLUMN_VALUE)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE::IsInitialized() const {
  return true;
}

void GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE::InternalSwap(GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(column_, other->column_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GORM_PB_SPLIT_INFO::InitAsDefaultInstance() {
}
class GORM_PB_SPLIT_INFO::_Internal {
 public:
};

GORM_PB_SPLIT_INFO::GORM_PB_SPLIT_INFO(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  splitinfo_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gorm.GORM_PB_SPLIT_INFO)
}
GORM_PB_SPLIT_INFO::GORM_PB_SPLIT_INFO(const GORM_PB_SPLIT_INFO& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      splitinfo_(from.splitinfo_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:gorm.GORM_PB_SPLIT_INFO)
}

void GORM_PB_SPLIT_INFO::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GORM_PB_SPLIT_INFO_gorm_5fpb_5fproto_2eproto.base);
}

GORM_PB_SPLIT_INFO::~GORM_PB_SPLIT_INFO() {
  // @@protoc_insertion_point(destructor:gorm.GORM_PB_SPLIT_INFO)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GORM_PB_SPLIT_INFO::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GORM_PB_SPLIT_INFO::ArenaDtor(void* object) {
  GORM_PB_SPLIT_INFO* _this = reinterpret_cast< GORM_PB_SPLIT_INFO* >(object);
  (void)_this;
}
void GORM_PB_SPLIT_INFO::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GORM_PB_SPLIT_INFO::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GORM_PB_SPLIT_INFO& GORM_PB_SPLIT_INFO::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GORM_PB_SPLIT_INFO_gorm_5fpb_5fproto_2eproto.base);
  return *internal_default_instance();
}


void GORM_PB_SPLIT_INFO::Clear() {
// @@protoc_insertion_point(message_clear_start:gorm.GORM_PB_SPLIT_INFO)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  splitinfo_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GORM_PB_SPLIT_INFO::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .gorm.GORM_PB_SPLIT_INFO.GORM_COLUMN_VALUE SplitInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_splitinfo(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GORM_PB_SPLIT_INFO::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gorm.GORM_PB_SPLIT_INFO)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .gorm.GORM_PB_SPLIT_INFO.GORM_COLUMN_VALUE SplitInfo = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_splitinfo_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_splitinfo(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gorm.GORM_PB_SPLIT_INFO)
  return target;
}

size_t GORM_PB_SPLIT_INFO::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gorm.GORM_PB_SPLIT_INFO)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .gorm.GORM_PB_SPLIT_INFO.GORM_COLUMN_VALUE SplitInfo = 1;
  total_size += 1UL * this->_internal_splitinfo_size();
  for (const auto& msg : this->splitinfo_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GORM_PB_SPLIT_INFO::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gorm.GORM_PB_SPLIT_INFO)
  GOOGLE_DCHECK_NE(&from, this);
  const GORM_PB_SPLIT_INFO* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GORM_PB_SPLIT_INFO>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gorm.GORM_PB_SPLIT_INFO)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gorm.GORM_PB_SPLIT_INFO)
    MergeFrom(*source);
  }
}

void GORM_PB_SPLIT_INFO::MergeFrom(const GORM_PB_SPLIT_INFO& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gorm.GORM_PB_SPLIT_INFO)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  splitinfo_.MergeFrom(from.splitinfo_);
}

void GORM_PB_SPLIT_INFO::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gorm.GORM_PB_SPLIT_INFO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GORM_PB_SPLIT_INFO::CopyFrom(const GORM_PB_SPLIT_INFO& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gorm.GORM_PB_SPLIT_INFO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GORM_PB_SPLIT_INFO::IsInitialized() const {
  return true;
}

void GORM_PB_SPLIT_INFO::InternalSwap(GORM_PB_SPLIT_INFO* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  splitinfo_.InternalSwap(&other->splitinfo_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GORM_PB_SPLIT_INFO::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GORM_PB_Ret_Code::InitAsDefaultInstance() {
}
class GORM_PB_Ret_Code::_Internal {
 public:
};

GORM_PB_Ret_Code::GORM_PB_Ret_Code(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gorm.GORM_PB_Ret_Code)
}
GORM_PB_Ret_Code::GORM_PB_Ret_Code(const GORM_PB_Ret_Code& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  dberrinfo_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_dberrinfo().empty()) {
    dberrinfo_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_dberrinfo(),
      GetArena());
  }
  ::memcpy(&code_, &from.code_,
    static_cast<size_t>(reinterpret_cast<char*>(&totalnum_) -
    reinterpret_cast<char*>(&code_)) + sizeof(totalnum_));
  // @@protoc_insertion_point(copy_constructor:gorm.GORM_PB_Ret_Code)
}

void GORM_PB_Ret_Code::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GORM_PB_Ret_Code_gorm_5fpb_5fproto_2eproto.base);
  dberrinfo_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&totalnum_) -
      reinterpret_cast<char*>(&code_)) + sizeof(totalnum_));
}

GORM_PB_Ret_Code::~GORM_PB_Ret_Code() {
  // @@protoc_insertion_point(destructor:gorm.GORM_PB_Ret_Code)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GORM_PB_Ret_Code::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  dberrinfo_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GORM_PB_Ret_Code::ArenaDtor(void* object) {
  GORM_PB_Ret_Code* _this = reinterpret_cast< GORM_PB_Ret_Code* >(object);
  (void)_this;
}
void GORM_PB_Ret_Code::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GORM_PB_Ret_Code::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GORM_PB_Ret_Code& GORM_PB_Ret_Code::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GORM_PB_Ret_Code_gorm_5fpb_5fproto_2eproto.base);
  return *internal_default_instance();
}


void GORM_PB_Ret_Code::Clear() {
// @@protoc_insertion_point(message_clear_start:gorm.GORM_PB_Ret_Code)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dberrinfo_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&code_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&totalnum_) -
      reinterpret_cast<char*>(&code_)) + sizeof(totalnum_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GORM_PB_Ret_Code::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 Code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 DBCode = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          dbcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string DBErrInfo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_dberrinfo();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gorm.GORM_PB_Ret_Code.DBErrInfo"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 SucessNum = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          sucessnum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 TotalNum = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          totalnum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GORM_PB_Ret_Code::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gorm.GORM_PB_Ret_Code)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_code(), target);
  }

  // int32 DBCode = 2;
  if (this->dbcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_dbcode(), target);
  }

  // string DBErrInfo = 3;
  if (this->dberrinfo().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dberrinfo().data(), static_cast<int>(this->_internal_dberrinfo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gorm.GORM_PB_Ret_Code.DBErrInfo");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_dberrinfo(), target);
  }

  // int32 SucessNum = 4;
  if (this->sucessnum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_sucessnum(), target);
  }

  // int32 TotalNum = 5;
  if (this->totalnum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_totalnum(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gorm.GORM_PB_Ret_Code)
  return target;
}

size_t GORM_PB_Ret_Code::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gorm.GORM_PB_Ret_Code)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string DBErrInfo = 3;
  if (this->dberrinfo().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dberrinfo());
  }

  // int32 Code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_code());
  }

  // int32 DBCode = 2;
  if (this->dbcode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_dbcode());
  }

  // int32 SucessNum = 4;
  if (this->sucessnum() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_sucessnum());
  }

  // int32 TotalNum = 5;
  if (this->totalnum() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_totalnum());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GORM_PB_Ret_Code::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gorm.GORM_PB_Ret_Code)
  GOOGLE_DCHECK_NE(&from, this);
  const GORM_PB_Ret_Code* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GORM_PB_Ret_Code>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gorm.GORM_PB_Ret_Code)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gorm.GORM_PB_Ret_Code)
    MergeFrom(*source);
  }
}

void GORM_PB_Ret_Code::MergeFrom(const GORM_PB_Ret_Code& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gorm.GORM_PB_Ret_Code)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.dberrinfo().size() > 0) {
    _internal_set_dberrinfo(from._internal_dberrinfo());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
  if (from.dbcode() != 0) {
    _internal_set_dbcode(from._internal_dbcode());
  }
  if (from.sucessnum() != 0) {
    _internal_set_sucessnum(from._internal_sucessnum());
  }
  if (from.totalnum() != 0) {
    _internal_set_totalnum(from._internal_totalnum());
  }
}

void GORM_PB_Ret_Code::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gorm.GORM_PB_Ret_Code)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GORM_PB_Ret_Code::CopyFrom(const GORM_PB_Ret_Code& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gorm.GORM_PB_Ret_Code)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GORM_PB_Ret_Code::IsInitialized() const {
  return true;
}

void GORM_PB_Ret_Code::InternalSwap(GORM_PB_Ret_Code* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  dberrinfo_.Swap(&other->dberrinfo_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GORM_PB_Ret_Code, totalnum_)
      + sizeof(GORM_PB_Ret_Code::totalnum_)
      - PROTOBUF_FIELD_OFFSET(GORM_PB_Ret_Code, code_)>(
          reinterpret_cast<char*>(&code_),
          reinterpret_cast<char*>(&other->code_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GORM_PB_Ret_Code::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GORM_PB_RELOAD_TABLE_REQ::InitAsDefaultInstance() {
  ::gorm::_GORM_PB_RELOAD_TABLE_REQ_default_instance_._instance.get_mutable()->header_ = const_cast< ::gorm::GORM_PB_REQ_HEADER*>(
      ::gorm::GORM_PB_REQ_HEADER::internal_default_instance());
}
class GORM_PB_RELOAD_TABLE_REQ::_Internal {
 public:
  static const ::gorm::GORM_PB_REQ_HEADER& header(const GORM_PB_RELOAD_TABLE_REQ* msg);
};

const ::gorm::GORM_PB_REQ_HEADER&
GORM_PB_RELOAD_TABLE_REQ::_Internal::header(const GORM_PB_RELOAD_TABLE_REQ* msg) {
  return *msg->header_;
}
GORM_PB_RELOAD_TABLE_REQ::GORM_PB_RELOAD_TABLE_REQ(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gorm.GORM_PB_RELOAD_TABLE_REQ)
}
GORM_PB_RELOAD_TABLE_REQ::GORM_PB_RELOAD_TABLE_REQ(const GORM_PB_RELOAD_TABLE_REQ& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    header_ = new ::gorm::GORM_PB_REQ_HEADER(*from.header_);
  } else {
    header_ = nullptr;
  }
  tableversion_ = from.tableversion_;
  // @@protoc_insertion_point(copy_constructor:gorm.GORM_PB_RELOAD_TABLE_REQ)
}

void GORM_PB_RELOAD_TABLE_REQ::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GORM_PB_RELOAD_TABLE_REQ_gorm_5fpb_5fproto_2eproto.base);
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tableversion_) -
      reinterpret_cast<char*>(&header_)) + sizeof(tableversion_));
}

GORM_PB_RELOAD_TABLE_REQ::~GORM_PB_RELOAD_TABLE_REQ() {
  // @@protoc_insertion_point(destructor:gorm.GORM_PB_RELOAD_TABLE_REQ)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GORM_PB_RELOAD_TABLE_REQ::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete header_;
}

void GORM_PB_RELOAD_TABLE_REQ::ArenaDtor(void* object) {
  GORM_PB_RELOAD_TABLE_REQ* _this = reinterpret_cast< GORM_PB_RELOAD_TABLE_REQ* >(object);
  (void)_this;
}
void GORM_PB_RELOAD_TABLE_REQ::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GORM_PB_RELOAD_TABLE_REQ::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GORM_PB_RELOAD_TABLE_REQ& GORM_PB_RELOAD_TABLE_REQ::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GORM_PB_RELOAD_TABLE_REQ_gorm_5fpb_5fproto_2eproto.base);
  return *internal_default_instance();
}


void GORM_PB_RELOAD_TABLE_REQ::Clear() {
// @@protoc_insertion_point(message_clear_start:gorm.GORM_PB_RELOAD_TABLE_REQ)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  tableversion_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GORM_PB_RELOAD_TABLE_REQ::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .gorm.GORM_PB_REQ_HEADER Header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 TableVersion = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          tableversion_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GORM_PB_RELOAD_TABLE_REQ::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gorm.GORM_PB_RELOAD_TABLE_REQ)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gorm.GORM_PB_REQ_HEADER Header = 1;
  if (this->has_header()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::header(this), target, stream);
  }

  // uint64 TableVersion = 2;
  if (this->tableversion() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_tableversion(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gorm.GORM_PB_RELOAD_TABLE_REQ)
  return target;
}

size_t GORM_PB_RELOAD_TABLE_REQ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gorm.GORM_PB_RELOAD_TABLE_REQ)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .gorm.GORM_PB_REQ_HEADER Header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // uint64 TableVersion = 2;
  if (this->tableversion() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_tableversion());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GORM_PB_RELOAD_TABLE_REQ::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gorm.GORM_PB_RELOAD_TABLE_REQ)
  GOOGLE_DCHECK_NE(&from, this);
  const GORM_PB_RELOAD_TABLE_REQ* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GORM_PB_RELOAD_TABLE_REQ>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gorm.GORM_PB_RELOAD_TABLE_REQ)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gorm.GORM_PB_RELOAD_TABLE_REQ)
    MergeFrom(*source);
  }
}

void GORM_PB_RELOAD_TABLE_REQ::MergeFrom(const GORM_PB_RELOAD_TABLE_REQ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gorm.GORM_PB_RELOAD_TABLE_REQ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    _internal_mutable_header()->::gorm::GORM_PB_REQ_HEADER::MergeFrom(from._internal_header());
  }
  if (from.tableversion() != 0) {
    _internal_set_tableversion(from._internal_tableversion());
  }
}

void GORM_PB_RELOAD_TABLE_REQ::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gorm.GORM_PB_RELOAD_TABLE_REQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GORM_PB_RELOAD_TABLE_REQ::CopyFrom(const GORM_PB_RELOAD_TABLE_REQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gorm.GORM_PB_RELOAD_TABLE_REQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GORM_PB_RELOAD_TABLE_REQ::IsInitialized() const {
  return true;
}

void GORM_PB_RELOAD_TABLE_REQ::InternalSwap(GORM_PB_RELOAD_TABLE_REQ* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GORM_PB_RELOAD_TABLE_REQ, tableversion_)
      + sizeof(GORM_PB_RELOAD_TABLE_REQ::tableversion_)
      - PROTOBUF_FIELD_OFFSET(GORM_PB_RELOAD_TABLE_REQ, header_)>(
          reinterpret_cast<char*>(&header_),
          reinterpret_cast<char*>(&other->header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GORM_PB_RELOAD_TABLE_REQ::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GORM_PB_RELOAD_TABLE_RSP::InitAsDefaultInstance() {
  ::gorm::_GORM_PB_RELOAD_TABLE_RSP_default_instance_._instance.get_mutable()->retcode_ = const_cast< ::gorm::GORM_PB_Ret_Code*>(
      ::gorm::GORM_PB_Ret_Code::internal_default_instance());
}
class GORM_PB_RELOAD_TABLE_RSP::_Internal {
 public:
  static const ::gorm::GORM_PB_Ret_Code& retcode(const GORM_PB_RELOAD_TABLE_RSP* msg);
};

const ::gorm::GORM_PB_Ret_Code&
GORM_PB_RELOAD_TABLE_RSP::_Internal::retcode(const GORM_PB_RELOAD_TABLE_RSP* msg) {
  return *msg->retcode_;
}
GORM_PB_RELOAD_TABLE_RSP::GORM_PB_RELOAD_TABLE_RSP(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gorm.GORM_PB_RELOAD_TABLE_RSP)
}
GORM_PB_RELOAD_TABLE_RSP::GORM_PB_RELOAD_TABLE_RSP(const GORM_PB_RELOAD_TABLE_RSP& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_retcode()) {
    retcode_ = new ::gorm::GORM_PB_Ret_Code(*from.retcode_);
  } else {
    retcode_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:gorm.GORM_PB_RELOAD_TABLE_RSP)
}

void GORM_PB_RELOAD_TABLE_RSP::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GORM_PB_RELOAD_TABLE_RSP_gorm_5fpb_5fproto_2eproto.base);
  retcode_ = nullptr;
}

GORM_PB_RELOAD_TABLE_RSP::~GORM_PB_RELOAD_TABLE_RSP() {
  // @@protoc_insertion_point(destructor:gorm.GORM_PB_RELOAD_TABLE_RSP)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GORM_PB_RELOAD_TABLE_RSP::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete retcode_;
}

void GORM_PB_RELOAD_TABLE_RSP::ArenaDtor(void* object) {
  GORM_PB_RELOAD_TABLE_RSP* _this = reinterpret_cast< GORM_PB_RELOAD_TABLE_RSP* >(object);
  (void)_this;
}
void GORM_PB_RELOAD_TABLE_RSP::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GORM_PB_RELOAD_TABLE_RSP::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GORM_PB_RELOAD_TABLE_RSP& GORM_PB_RELOAD_TABLE_RSP::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GORM_PB_RELOAD_TABLE_RSP_gorm_5fpb_5fproto_2eproto.base);
  return *internal_default_instance();
}


void GORM_PB_RELOAD_TABLE_RSP::Clear() {
// @@protoc_insertion_point(message_clear_start:gorm.GORM_PB_RELOAD_TABLE_RSP)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && retcode_ != nullptr) {
    delete retcode_;
  }
  retcode_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GORM_PB_RELOAD_TABLE_RSP::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .gorm.GORM_PB_Ret_Code RetCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_retcode(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GORM_PB_RELOAD_TABLE_RSP::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gorm.GORM_PB_RELOAD_TABLE_RSP)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gorm.GORM_PB_Ret_Code RetCode = 1;
  if (this->has_retcode()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::retcode(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gorm.GORM_PB_RELOAD_TABLE_RSP)
  return target;
}

size_t GORM_PB_RELOAD_TABLE_RSP::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gorm.GORM_PB_RELOAD_TABLE_RSP)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .gorm.GORM_PB_Ret_Code RetCode = 1;
  if (this->has_retcode()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *retcode_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GORM_PB_RELOAD_TABLE_RSP::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gorm.GORM_PB_RELOAD_TABLE_RSP)
  GOOGLE_DCHECK_NE(&from, this);
  const GORM_PB_RELOAD_TABLE_RSP* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GORM_PB_RELOAD_TABLE_RSP>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gorm.GORM_PB_RELOAD_TABLE_RSP)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gorm.GORM_PB_RELOAD_TABLE_RSP)
    MergeFrom(*source);
  }
}

void GORM_PB_RELOAD_TABLE_RSP::MergeFrom(const GORM_PB_RELOAD_TABLE_RSP& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gorm.GORM_PB_RELOAD_TABLE_RSP)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_retcode()) {
    _internal_mutable_retcode()->::gorm::GORM_PB_Ret_Code::MergeFrom(from._internal_retcode());
  }
}

void GORM_PB_RELOAD_TABLE_RSP::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gorm.GORM_PB_RELOAD_TABLE_RSP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GORM_PB_RELOAD_TABLE_RSP::CopyFrom(const GORM_PB_RELOAD_TABLE_RSP& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gorm.GORM_PB_RELOAD_TABLE_RSP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GORM_PB_RELOAD_TABLE_RSP::IsInitialized() const {
  return true;
}

void GORM_PB_RELOAD_TABLE_RSP::InternalSwap(GORM_PB_RELOAD_TABLE_RSP* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(retcode_, other->retcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GORM_PB_RELOAD_TABLE_RSP::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GORM_PB_REQ_HEADER::InitAsDefaultInstance() {
  ::gorm::_GORM_PB_REQ_HEADER_default_instance_._instance.get_mutable()->splittableinfo_ = const_cast< ::gorm::GORM_PB_SPLIT_INFO*>(
      ::gorm::GORM_PB_SPLIT_INFO::internal_default_instance());
}
class GORM_PB_REQ_HEADER::_Internal {
 public:
  static const ::gorm::GORM_PB_SPLIT_INFO& splittableinfo(const GORM_PB_REQ_HEADER* msg);
};

const ::gorm::GORM_PB_SPLIT_INFO&
GORM_PB_REQ_HEADER::_Internal::splittableinfo(const GORM_PB_REQ_HEADER* msg) {
  return *msg->splittableinfo_;
}
GORM_PB_REQ_HEADER::GORM_PB_REQ_HEADER(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gorm.GORM_PB_REQ_HEADER)
}
GORM_PB_REQ_HEADER::GORM_PB_REQ_HEADER(const GORM_PB_REQ_HEADER& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  fieldmode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_fieldmode().empty()) {
    fieldmode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_fieldmode(),
      GetArena());
  }
  if (from._internal_has_splittableinfo()) {
    splittableinfo_ = new ::gorm::GORM_PB_SPLIT_INFO(*from.splittableinfo_);
  } else {
    splittableinfo_ = nullptr;
  }
  ::memcpy(&tableid_, &from.tableid_,
    static_cast<size_t>(reinterpret_cast<char*>(&reqflag_) -
    reinterpret_cast<char*>(&tableid_)) + sizeof(reqflag_));
  // @@protoc_insertion_point(copy_constructor:gorm.GORM_PB_REQ_HEADER)
}

void GORM_PB_REQ_HEADER::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GORM_PB_REQ_HEADER_gorm_5fpb_5fproto_2eproto.base);
  fieldmode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&splittableinfo_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reqflag_) -
      reinterpret_cast<char*>(&splittableinfo_)) + sizeof(reqflag_));
}

GORM_PB_REQ_HEADER::~GORM_PB_REQ_HEADER() {
  // @@protoc_insertion_point(destructor:gorm.GORM_PB_REQ_HEADER)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GORM_PB_REQ_HEADER::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  fieldmode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete splittableinfo_;
}

void GORM_PB_REQ_HEADER::ArenaDtor(void* object) {
  GORM_PB_REQ_HEADER* _this = reinterpret_cast< GORM_PB_REQ_HEADER* >(object);
  (void)_this;
}
void GORM_PB_REQ_HEADER::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GORM_PB_REQ_HEADER::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GORM_PB_REQ_HEADER& GORM_PB_REQ_HEADER::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GORM_PB_REQ_HEADER_gorm_5fpb_5fproto_2eproto.base);
  return *internal_default_instance();
}


void GORM_PB_REQ_HEADER::Clear() {
// @@protoc_insertion_point(message_clear_start:gorm.GORM_PB_REQ_HEADER)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  fieldmode_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && splittableinfo_ != nullptr) {
    delete splittableinfo_;
  }
  splittableinfo_ = nullptr;
  ::memset(&tableid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&reqflag_) -
      reinterpret_cast<char*>(&tableid_)) + sizeof(reqflag_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GORM_PB_REQ_HEADER::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 TableId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          tableid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 BusinessID = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          businessid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 VerPolice = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          verpolice_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 ReqFlag = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          reqflag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes FieldMode = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_fieldmode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .gorm.GORM_PB_SPLIT_INFO SplitTableInfo = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_splittableinfo(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GORM_PB_REQ_HEADER::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gorm.GORM_PB_REQ_HEADER)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 TableId = 1;
  if (this->tableid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_tableid(), target);
  }

  // int32 BusinessID = 2;
  if (this->businessid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_businessid(), target);
  }

  // int32 VerPolice = 3;
  if (this->verpolice() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_verpolice(), target);
  }

  // uint32 ReqFlag = 4;
  if (this->reqflag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(4, this->_internal_reqflag(), target);
  }

  // bytes FieldMode = 5;
  if (this->fieldmode().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        5, this->_internal_fieldmode(), target);
  }

  // .gorm.GORM_PB_SPLIT_INFO SplitTableInfo = 6;
  if (this->has_splittableinfo()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::splittableinfo(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gorm.GORM_PB_REQ_HEADER)
  return target;
}

size_t GORM_PB_REQ_HEADER::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gorm.GORM_PB_REQ_HEADER)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes FieldMode = 5;
  if (this->fieldmode().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_fieldmode());
  }

  // .gorm.GORM_PB_SPLIT_INFO SplitTableInfo = 6;
  if (this->has_splittableinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *splittableinfo_);
  }

  // int32 TableId = 1;
  if (this->tableid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_tableid());
  }

  // int32 BusinessID = 2;
  if (this->businessid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_businessid());
  }

  // int32 VerPolice = 3;
  if (this->verpolice() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_verpolice());
  }

  // uint32 ReqFlag = 4;
  if (this->reqflag() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_reqflag());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GORM_PB_REQ_HEADER::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gorm.GORM_PB_REQ_HEADER)
  GOOGLE_DCHECK_NE(&from, this);
  const GORM_PB_REQ_HEADER* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GORM_PB_REQ_HEADER>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gorm.GORM_PB_REQ_HEADER)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gorm.GORM_PB_REQ_HEADER)
    MergeFrom(*source);
  }
}

void GORM_PB_REQ_HEADER::MergeFrom(const GORM_PB_REQ_HEADER& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gorm.GORM_PB_REQ_HEADER)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.fieldmode().size() > 0) {
    _internal_set_fieldmode(from._internal_fieldmode());
  }
  if (from.has_splittableinfo()) {
    _internal_mutable_splittableinfo()->::gorm::GORM_PB_SPLIT_INFO::MergeFrom(from._internal_splittableinfo());
  }
  if (from.tableid() != 0) {
    _internal_set_tableid(from._internal_tableid());
  }
  if (from.businessid() != 0) {
    _internal_set_businessid(from._internal_businessid());
  }
  if (from.verpolice() != 0) {
    _internal_set_verpolice(from._internal_verpolice());
  }
  if (from.reqflag() != 0) {
    _internal_set_reqflag(from._internal_reqflag());
  }
}

void GORM_PB_REQ_HEADER::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gorm.GORM_PB_REQ_HEADER)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GORM_PB_REQ_HEADER::CopyFrom(const GORM_PB_REQ_HEADER& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gorm.GORM_PB_REQ_HEADER)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GORM_PB_REQ_HEADER::IsInitialized() const {
  return true;
}

void GORM_PB_REQ_HEADER::InternalSwap(GORM_PB_REQ_HEADER* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  fieldmode_.Swap(&other->fieldmode_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GORM_PB_REQ_HEADER, reqflag_)
      + sizeof(GORM_PB_REQ_HEADER::reqflag_)
      - PROTOBUF_FIELD_OFFSET(GORM_PB_REQ_HEADER, splittableinfo_)>(
          reinterpret_cast<char*>(&splittableinfo_),
          reinterpret_cast<char*>(&other->splittableinfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GORM_PB_REQ_HEADER::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GORM_PB_HEART_REQ::InitAsDefaultInstance() {
  ::gorm::_GORM_PB_HEART_REQ_default_instance_._instance.get_mutable()->header_ = const_cast< ::gorm::GORM_PB_REQ_HEADER*>(
      ::gorm::GORM_PB_REQ_HEADER::internal_default_instance());
}
class GORM_PB_HEART_REQ::_Internal {
 public:
  static const ::gorm::GORM_PB_REQ_HEADER& header(const GORM_PB_HEART_REQ* msg);
};

const ::gorm::GORM_PB_REQ_HEADER&
GORM_PB_HEART_REQ::_Internal::header(const GORM_PB_HEART_REQ* msg) {
  return *msg->header_;
}
GORM_PB_HEART_REQ::GORM_PB_HEART_REQ(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gorm.GORM_PB_HEART_REQ)
}
GORM_PB_HEART_REQ::GORM_PB_HEART_REQ(const GORM_PB_HEART_REQ& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    header_ = new ::gorm::GORM_PB_REQ_HEADER(*from.header_);
  } else {
    header_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:gorm.GORM_PB_HEART_REQ)
}

void GORM_PB_HEART_REQ::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GORM_PB_HEART_REQ_gorm_5fpb_5fproto_2eproto.base);
  header_ = nullptr;
}

GORM_PB_HEART_REQ::~GORM_PB_HEART_REQ() {
  // @@protoc_insertion_point(destructor:gorm.GORM_PB_HEART_REQ)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GORM_PB_HEART_REQ::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete header_;
}

void GORM_PB_HEART_REQ::ArenaDtor(void* object) {
  GORM_PB_HEART_REQ* _this = reinterpret_cast< GORM_PB_HEART_REQ* >(object);
  (void)_this;
}
void GORM_PB_HEART_REQ::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GORM_PB_HEART_REQ::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GORM_PB_HEART_REQ& GORM_PB_HEART_REQ::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GORM_PB_HEART_REQ_gorm_5fpb_5fproto_2eproto.base);
  return *internal_default_instance();
}


void GORM_PB_HEART_REQ::Clear() {
// @@protoc_insertion_point(message_clear_start:gorm.GORM_PB_HEART_REQ)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GORM_PB_HEART_REQ::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .gorm.GORM_PB_REQ_HEADER Header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GORM_PB_HEART_REQ::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gorm.GORM_PB_HEART_REQ)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gorm.GORM_PB_REQ_HEADER Header = 1;
  if (this->has_header()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::header(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gorm.GORM_PB_HEART_REQ)
  return target;
}

size_t GORM_PB_HEART_REQ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gorm.GORM_PB_HEART_REQ)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .gorm.GORM_PB_REQ_HEADER Header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *header_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GORM_PB_HEART_REQ::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gorm.GORM_PB_HEART_REQ)
  GOOGLE_DCHECK_NE(&from, this);
  const GORM_PB_HEART_REQ* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GORM_PB_HEART_REQ>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gorm.GORM_PB_HEART_REQ)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gorm.GORM_PB_HEART_REQ)
    MergeFrom(*source);
  }
}

void GORM_PB_HEART_REQ::MergeFrom(const GORM_PB_HEART_REQ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gorm.GORM_PB_HEART_REQ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    _internal_mutable_header()->::gorm::GORM_PB_REQ_HEADER::MergeFrom(from._internal_header());
  }
}

void GORM_PB_HEART_REQ::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gorm.GORM_PB_HEART_REQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GORM_PB_HEART_REQ::CopyFrom(const GORM_PB_HEART_REQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gorm.GORM_PB_HEART_REQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GORM_PB_HEART_REQ::IsInitialized() const {
  return true;
}

void GORM_PB_HEART_REQ::InternalSwap(GORM_PB_HEART_REQ* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(header_, other->header_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GORM_PB_HEART_REQ::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GORM_PB_HEART_RSP::InitAsDefaultInstance() {
  ::gorm::_GORM_PB_HEART_RSP_default_instance_._instance.get_mutable()->retcode_ = const_cast< ::gorm::GORM_PB_Ret_Code*>(
      ::gorm::GORM_PB_Ret_Code::internal_default_instance());
}
class GORM_PB_HEART_RSP::_Internal {
 public:
  static const ::gorm::GORM_PB_Ret_Code& retcode(const GORM_PB_HEART_RSP* msg);
};

const ::gorm::GORM_PB_Ret_Code&
GORM_PB_HEART_RSP::_Internal::retcode(const GORM_PB_HEART_RSP* msg) {
  return *msg->retcode_;
}
GORM_PB_HEART_RSP::GORM_PB_HEART_RSP(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gorm.GORM_PB_HEART_RSP)
}
GORM_PB_HEART_RSP::GORM_PB_HEART_RSP(const GORM_PB_HEART_RSP& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_retcode()) {
    retcode_ = new ::gorm::GORM_PB_Ret_Code(*from.retcode_);
  } else {
    retcode_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:gorm.GORM_PB_HEART_RSP)
}

void GORM_PB_HEART_RSP::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GORM_PB_HEART_RSP_gorm_5fpb_5fproto_2eproto.base);
  retcode_ = nullptr;
}

GORM_PB_HEART_RSP::~GORM_PB_HEART_RSP() {
  // @@protoc_insertion_point(destructor:gorm.GORM_PB_HEART_RSP)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GORM_PB_HEART_RSP::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete retcode_;
}

void GORM_PB_HEART_RSP::ArenaDtor(void* object) {
  GORM_PB_HEART_RSP* _this = reinterpret_cast< GORM_PB_HEART_RSP* >(object);
  (void)_this;
}
void GORM_PB_HEART_RSP::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GORM_PB_HEART_RSP::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GORM_PB_HEART_RSP& GORM_PB_HEART_RSP::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GORM_PB_HEART_RSP_gorm_5fpb_5fproto_2eproto.base);
  return *internal_default_instance();
}


void GORM_PB_HEART_RSP::Clear() {
// @@protoc_insertion_point(message_clear_start:gorm.GORM_PB_HEART_RSP)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && retcode_ != nullptr) {
    delete retcode_;
  }
  retcode_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GORM_PB_HEART_RSP::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .gorm.GORM_PB_Ret_Code RetCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_retcode(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GORM_PB_HEART_RSP::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gorm.GORM_PB_HEART_RSP)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gorm.GORM_PB_Ret_Code RetCode = 1;
  if (this->has_retcode()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::retcode(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gorm.GORM_PB_HEART_RSP)
  return target;
}

size_t GORM_PB_HEART_RSP::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gorm.GORM_PB_HEART_RSP)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .gorm.GORM_PB_Ret_Code RetCode = 1;
  if (this->has_retcode()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *retcode_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GORM_PB_HEART_RSP::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gorm.GORM_PB_HEART_RSP)
  GOOGLE_DCHECK_NE(&from, this);
  const GORM_PB_HEART_RSP* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GORM_PB_HEART_RSP>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gorm.GORM_PB_HEART_RSP)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gorm.GORM_PB_HEART_RSP)
    MergeFrom(*source);
  }
}

void GORM_PB_HEART_RSP::MergeFrom(const GORM_PB_HEART_RSP& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gorm.GORM_PB_HEART_RSP)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_retcode()) {
    _internal_mutable_retcode()->::gorm::GORM_PB_Ret_Code::MergeFrom(from._internal_retcode());
  }
}

void GORM_PB_HEART_RSP::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gorm.GORM_PB_HEART_RSP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GORM_PB_HEART_RSP::CopyFrom(const GORM_PB_HEART_RSP& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gorm.GORM_PB_HEART_RSP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GORM_PB_HEART_RSP::IsInitialized() const {
  return true;
}

void GORM_PB_HEART_RSP::InternalSwap(GORM_PB_HEART_RSP* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(retcode_, other->retcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GORM_PB_HEART_RSP::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GORM_PB_TABLE_SCHEMA_INFO_COLUMN::InitAsDefaultInstance() {
}
class GORM_PB_TABLE_SCHEMA_INFO_COLUMN::_Internal {
 public:
};

GORM_PB_TABLE_SCHEMA_INFO_COLUMN::GORM_PB_TABLE_SCHEMA_INFO_COLUMN(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN)
}
GORM_PB_TABLE_SCHEMA_INFO_COLUMN::GORM_PB_TABLE_SCHEMA_INFO_COLUMN(const GORM_PB_TABLE_SCHEMA_INFO_COLUMN& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  typedesc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_typedesc().empty()) {
    typedesc_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_typedesc(),
      GetArena());
  }
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&version_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN)
}

void GORM_PB_TABLE_SCHEMA_INFO_COLUMN::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GORM_PB_TABLE_SCHEMA_INFO_COLUMN_gorm_5fpb_5fproto_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  typedesc_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&version_)) + sizeof(type_));
}

GORM_PB_TABLE_SCHEMA_INFO_COLUMN::~GORM_PB_TABLE_SCHEMA_INFO_COLUMN() {
  // @@protoc_insertion_point(destructor:gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GORM_PB_TABLE_SCHEMA_INFO_COLUMN::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  typedesc_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GORM_PB_TABLE_SCHEMA_INFO_COLUMN::ArenaDtor(void* object) {
  GORM_PB_TABLE_SCHEMA_INFO_COLUMN* _this = reinterpret_cast< GORM_PB_TABLE_SCHEMA_INFO_COLUMN* >(object);
  (void)_this;
}
void GORM_PB_TABLE_SCHEMA_INFO_COLUMN::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GORM_PB_TABLE_SCHEMA_INFO_COLUMN::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GORM_PB_TABLE_SCHEMA_INFO_COLUMN& GORM_PB_TABLE_SCHEMA_INFO_COLUMN::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GORM_PB_TABLE_SCHEMA_INFO_COLUMN_gorm_5fpb_5fproto_2eproto.base);
  return *internal_default_instance();
}


void GORM_PB_TABLE_SCHEMA_INFO_COLUMN::Clear() {
// @@protoc_insertion_point(message_clear_start:gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  typedesc_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&version_)) + sizeof(type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GORM_PB_TABLE_SCHEMA_INFO_COLUMN::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 Version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string Name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN.Name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string TypeDesc = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_typedesc();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN.TypeDesc"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .gorm.GORM_PB_COLUMN_TYPE Type = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::gorm::GORM_PB_COLUMN_TYPE>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GORM_PB_TABLE_SCHEMA_INFO_COLUMN::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Version = 1;
  if (this->version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_version(), target);
  }

  // string Name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN.Name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string TypeDesc = 3;
  if (this->typedesc().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_typedesc().data(), static_cast<int>(this->_internal_typedesc().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN.TypeDesc");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_typedesc(), target);
  }

  // .gorm.GORM_PB_COLUMN_TYPE Type = 4;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN)
  return target;
}

size_t GORM_PB_TABLE_SCHEMA_INFO_COLUMN::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string TypeDesc = 3;
  if (this->typedesc().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_typedesc());
  }

  // uint64 Version = 1;
  if (this->version() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_version());
  }

  // .gorm.GORM_PB_COLUMN_TYPE Type = 4;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GORM_PB_TABLE_SCHEMA_INFO_COLUMN::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN)
  GOOGLE_DCHECK_NE(&from, this);
  const GORM_PB_TABLE_SCHEMA_INFO_COLUMN* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GORM_PB_TABLE_SCHEMA_INFO_COLUMN>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN)
    MergeFrom(*source);
  }
}

void GORM_PB_TABLE_SCHEMA_INFO_COLUMN::MergeFrom(const GORM_PB_TABLE_SCHEMA_INFO_COLUMN& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.typedesc().size() > 0) {
    _internal_set_typedesc(from._internal_typedesc());
  }
  if (from.version() != 0) {
    _internal_set_version(from._internal_version());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
}

void GORM_PB_TABLE_SCHEMA_INFO_COLUMN::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GORM_PB_TABLE_SCHEMA_INFO_COLUMN::CopyFrom(const GORM_PB_TABLE_SCHEMA_INFO_COLUMN& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GORM_PB_TABLE_SCHEMA_INFO_COLUMN::IsInitialized() const {
  return true;
}

void GORM_PB_TABLE_SCHEMA_INFO_COLUMN::InternalSwap(GORM_PB_TABLE_SCHEMA_INFO_COLUMN* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  typedesc_.Swap(&other->typedesc_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GORM_PB_TABLE_SCHEMA_INFO_COLUMN, type_)
      + sizeof(GORM_PB_TABLE_SCHEMA_INFO_COLUMN::type_)
      - PROTOBUF_FIELD_OFFSET(GORM_PB_TABLE_SCHEMA_INFO_COLUMN, version_)>(
          reinterpret_cast<char*>(&version_),
          reinterpret_cast<char*>(&other->version_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GORM_PB_TABLE_SCHEMA_INFO_COLUMN::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GORM_PB_TABLE_SCHEMA_INFO::InitAsDefaultInstance() {
}
class GORM_PB_TABLE_SCHEMA_INFO::_Internal {
 public:
};

GORM_PB_TABLE_SCHEMA_INFO::GORM_PB_TABLE_SCHEMA_INFO(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  columns_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gorm.GORM_PB_TABLE_SCHEMA_INFO)
}
GORM_PB_TABLE_SCHEMA_INFO::GORM_PB_TABLE_SCHEMA_INFO(const GORM_PB_TABLE_SCHEMA_INFO& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      columns_(from.columns_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  tablename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_tablename().empty()) {
    tablename_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_tablename(),
      GetArena());
  }
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&tableidx_) -
    reinterpret_cast<char*>(&version_)) + sizeof(tableidx_));
  // @@protoc_insertion_point(copy_constructor:gorm.GORM_PB_TABLE_SCHEMA_INFO)
}

void GORM_PB_TABLE_SCHEMA_INFO::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GORM_PB_TABLE_SCHEMA_INFO_gorm_5fpb_5fproto_2eproto.base);
  tablename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tableidx_) -
      reinterpret_cast<char*>(&version_)) + sizeof(tableidx_));
}

GORM_PB_TABLE_SCHEMA_INFO::~GORM_PB_TABLE_SCHEMA_INFO() {
  // @@protoc_insertion_point(destructor:gorm.GORM_PB_TABLE_SCHEMA_INFO)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GORM_PB_TABLE_SCHEMA_INFO::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  tablename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GORM_PB_TABLE_SCHEMA_INFO::ArenaDtor(void* object) {
  GORM_PB_TABLE_SCHEMA_INFO* _this = reinterpret_cast< GORM_PB_TABLE_SCHEMA_INFO* >(object);
  (void)_this;
}
void GORM_PB_TABLE_SCHEMA_INFO::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GORM_PB_TABLE_SCHEMA_INFO::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GORM_PB_TABLE_SCHEMA_INFO& GORM_PB_TABLE_SCHEMA_INFO::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GORM_PB_TABLE_SCHEMA_INFO_gorm_5fpb_5fproto_2eproto.base);
  return *internal_default_instance();
}


void GORM_PB_TABLE_SCHEMA_INFO::Clear() {
// @@protoc_insertion_point(message_clear_start:gorm.GORM_PB_TABLE_SCHEMA_INFO)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  columns_.Clear();
  tablename_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&tableidx_) -
      reinterpret_cast<char*>(&version_)) + sizeof(tableidx_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GORM_PB_TABLE_SCHEMA_INFO::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 Version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string TableName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_tablename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gorm.GORM_PB_TABLE_SCHEMA_INFO.TableName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 TableIdx = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          tableidx_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN Columns = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_columns(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GORM_PB_TABLE_SCHEMA_INFO::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gorm.GORM_PB_TABLE_SCHEMA_INFO)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 Version = 1;
  if (this->version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_version(), target);
  }

  // string TableName = 2;
  if (this->tablename().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tablename().data(), static_cast<int>(this->_internal_tablename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gorm.GORM_PB_TABLE_SCHEMA_INFO.TableName");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_tablename(), target);
  }

  // int32 TableIdx = 3;
  if (this->tableidx() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_tableidx(), target);
  }

  // repeated .gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN Columns = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_columns_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_columns(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gorm.GORM_PB_TABLE_SCHEMA_INFO)
  return target;
}

size_t GORM_PB_TABLE_SCHEMA_INFO::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gorm.GORM_PB_TABLE_SCHEMA_INFO)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .gorm.GORM_PB_TABLE_SCHEMA_INFO_COLUMN Columns = 4;
  total_size += 1UL * this->_internal_columns_size();
  for (const auto& msg : this->columns_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string TableName = 2;
  if (this->tablename().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tablename());
  }

  // uint64 Version = 1;
  if (this->version() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_version());
  }

  // int32 TableIdx = 3;
  if (this->tableidx() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_tableidx());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GORM_PB_TABLE_SCHEMA_INFO::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gorm.GORM_PB_TABLE_SCHEMA_INFO)
  GOOGLE_DCHECK_NE(&from, this);
  const GORM_PB_TABLE_SCHEMA_INFO* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GORM_PB_TABLE_SCHEMA_INFO>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gorm.GORM_PB_TABLE_SCHEMA_INFO)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gorm.GORM_PB_TABLE_SCHEMA_INFO)
    MergeFrom(*source);
  }
}

void GORM_PB_TABLE_SCHEMA_INFO::MergeFrom(const GORM_PB_TABLE_SCHEMA_INFO& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gorm.GORM_PB_TABLE_SCHEMA_INFO)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  columns_.MergeFrom(from.columns_);
  if (from.tablename().size() > 0) {
    _internal_set_tablename(from._internal_tablename());
  }
  if (from.version() != 0) {
    _internal_set_version(from._internal_version());
  }
  if (from.tableidx() != 0) {
    _internal_set_tableidx(from._internal_tableidx());
  }
}

void GORM_PB_TABLE_SCHEMA_INFO::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gorm.GORM_PB_TABLE_SCHEMA_INFO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GORM_PB_TABLE_SCHEMA_INFO::CopyFrom(const GORM_PB_TABLE_SCHEMA_INFO& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gorm.GORM_PB_TABLE_SCHEMA_INFO)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GORM_PB_TABLE_SCHEMA_INFO::IsInitialized() const {
  return true;
}

void GORM_PB_TABLE_SCHEMA_INFO::InternalSwap(GORM_PB_TABLE_SCHEMA_INFO* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  columns_.InternalSwap(&other->columns_);
  tablename_.Swap(&other->tablename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GORM_PB_TABLE_SCHEMA_INFO, tableidx_)
      + sizeof(GORM_PB_TABLE_SCHEMA_INFO::tableidx_)
      - PROTOBUF_FIELD_OFFSET(GORM_PB_TABLE_SCHEMA_INFO, version_)>(
          reinterpret_cast<char*>(&version_),
          reinterpret_cast<char*>(&other->version_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GORM_PB_TABLE_SCHEMA_INFO::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GORM_PB_HAND_SHAKE_REQ::InitAsDefaultInstance() {
  ::gorm::_GORM_PB_HAND_SHAKE_REQ_default_instance_._instance.get_mutable()->header_ = const_cast< ::gorm::GORM_PB_REQ_HEADER*>(
      ::gorm::GORM_PB_REQ_HEADER::internal_default_instance());
}
class GORM_PB_HAND_SHAKE_REQ::_Internal {
 public:
  static const ::gorm::GORM_PB_REQ_HEADER& header(const GORM_PB_HAND_SHAKE_REQ* msg);
};

const ::gorm::GORM_PB_REQ_HEADER&
GORM_PB_HAND_SHAKE_REQ::_Internal::header(const GORM_PB_HAND_SHAKE_REQ* msg) {
  return *msg->header_;
}
GORM_PB_HAND_SHAKE_REQ::GORM_PB_HAND_SHAKE_REQ(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  schemas_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gorm.GORM_PB_HAND_SHAKE_REQ)
}
GORM_PB_HAND_SHAKE_REQ::GORM_PB_HAND_SHAKE_REQ(const GORM_PB_HAND_SHAKE_REQ& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      schemas_(from.schemas_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    header_ = new ::gorm::GORM_PB_REQ_HEADER(*from.header_);
  } else {
    header_ = nullptr;
  }
  ::memcpy(&version_, &from.version_,
    static_cast<size_t>(reinterpret_cast<char*>(&md5_) -
    reinterpret_cast<char*>(&version_)) + sizeof(md5_));
  // @@protoc_insertion_point(copy_constructor:gorm.GORM_PB_HAND_SHAKE_REQ)
}

void GORM_PB_HAND_SHAKE_REQ::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GORM_PB_HAND_SHAKE_REQ_gorm_5fpb_5fproto_2eproto.base);
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&md5_) -
      reinterpret_cast<char*>(&header_)) + sizeof(md5_));
}

GORM_PB_HAND_SHAKE_REQ::~GORM_PB_HAND_SHAKE_REQ() {
  // @@protoc_insertion_point(destructor:gorm.GORM_PB_HAND_SHAKE_REQ)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GORM_PB_HAND_SHAKE_REQ::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete header_;
}

void GORM_PB_HAND_SHAKE_REQ::ArenaDtor(void* object) {
  GORM_PB_HAND_SHAKE_REQ* _this = reinterpret_cast< GORM_PB_HAND_SHAKE_REQ* >(object);
  (void)_this;
}
void GORM_PB_HAND_SHAKE_REQ::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GORM_PB_HAND_SHAKE_REQ::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GORM_PB_HAND_SHAKE_REQ& GORM_PB_HAND_SHAKE_REQ::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GORM_PB_HAND_SHAKE_REQ_gorm_5fpb_5fproto_2eproto.base);
  return *internal_default_instance();
}


void GORM_PB_HAND_SHAKE_REQ::Clear() {
// @@protoc_insertion_point(message_clear_start:gorm.GORM_PB_HAND_SHAKE_REQ)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  schemas_.Clear();
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  ::memset(&version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&md5_) -
      reinterpret_cast<char*>(&version_)) + sizeof(md5_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GORM_PB_HAND_SHAKE_REQ::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .gorm.GORM_PB_REQ_HEADER Header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 Version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          version_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 Md5 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          md5_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .gorm.GORM_PB_TABLE_SCHEMA_INFO Schemas = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_schemas(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GORM_PB_HAND_SHAKE_REQ::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gorm.GORM_PB_HAND_SHAKE_REQ)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gorm.GORM_PB_REQ_HEADER Header = 1;
  if (this->has_header()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::header(this), target, stream);
  }

  // uint64 Version = 2;
  if (this->version() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_version(), target);
  }

  // uint32 Md5 = 3;
  if (this->md5() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_md5(), target);
  }

  // repeated .gorm.GORM_PB_TABLE_SCHEMA_INFO Schemas = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_schemas_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_schemas(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gorm.GORM_PB_HAND_SHAKE_REQ)
  return target;
}

size_t GORM_PB_HAND_SHAKE_REQ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gorm.GORM_PB_HAND_SHAKE_REQ)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .gorm.GORM_PB_TABLE_SCHEMA_INFO Schemas = 4;
  total_size += 1UL * this->_internal_schemas_size();
  for (const auto& msg : this->schemas_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .gorm.GORM_PB_REQ_HEADER Header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // uint64 Version = 2;
  if (this->version() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_version());
  }

  // uint32 Md5 = 3;
  if (this->md5() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_md5());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GORM_PB_HAND_SHAKE_REQ::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gorm.GORM_PB_HAND_SHAKE_REQ)
  GOOGLE_DCHECK_NE(&from, this);
  const GORM_PB_HAND_SHAKE_REQ* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GORM_PB_HAND_SHAKE_REQ>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gorm.GORM_PB_HAND_SHAKE_REQ)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gorm.GORM_PB_HAND_SHAKE_REQ)
    MergeFrom(*source);
  }
}

void GORM_PB_HAND_SHAKE_REQ::MergeFrom(const GORM_PB_HAND_SHAKE_REQ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gorm.GORM_PB_HAND_SHAKE_REQ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  schemas_.MergeFrom(from.schemas_);
  if (from.has_header()) {
    _internal_mutable_header()->::gorm::GORM_PB_REQ_HEADER::MergeFrom(from._internal_header());
  }
  if (from.version() != 0) {
    _internal_set_version(from._internal_version());
  }
  if (from.md5() != 0) {
    _internal_set_md5(from._internal_md5());
  }
}

void GORM_PB_HAND_SHAKE_REQ::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gorm.GORM_PB_HAND_SHAKE_REQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GORM_PB_HAND_SHAKE_REQ::CopyFrom(const GORM_PB_HAND_SHAKE_REQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gorm.GORM_PB_HAND_SHAKE_REQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GORM_PB_HAND_SHAKE_REQ::IsInitialized() const {
  return true;
}

void GORM_PB_HAND_SHAKE_REQ::InternalSwap(GORM_PB_HAND_SHAKE_REQ* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  schemas_.InternalSwap(&other->schemas_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GORM_PB_HAND_SHAKE_REQ, md5_)
      + sizeof(GORM_PB_HAND_SHAKE_REQ::md5_)
      - PROTOBUF_FIELD_OFFSET(GORM_PB_HAND_SHAKE_REQ, header_)>(
          reinterpret_cast<char*>(&header_),
          reinterpret_cast<char*>(&other->header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GORM_PB_HAND_SHAKE_REQ::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GORM_PB_INSERT_REQ::InitAsDefaultInstance() {
  ::gorm::_GORM_PB_INSERT_REQ_default_instance_._instance.get_mutable()->header_ = const_cast< ::gorm::GORM_PB_REQ_HEADER*>(
      ::gorm::GORM_PB_REQ_HEADER::internal_default_instance());
}
class GORM_PB_INSERT_REQ::_Internal {
 public:
  static const ::gorm::GORM_PB_REQ_HEADER& header(const GORM_PB_INSERT_REQ* msg);
};

const ::gorm::GORM_PB_REQ_HEADER&
GORM_PB_INSERT_REQ::_Internal::header(const GORM_PB_INSERT_REQ* msg) {
  return *msg->header_;
}
void GORM_PB_INSERT_REQ::clear_tables() {
  tables_.Clear();
}
GORM_PB_INSERT_REQ::GORM_PB_INSERT_REQ(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  tables_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gorm.GORM_PB_INSERT_REQ)
}
GORM_PB_INSERT_REQ::GORM_PB_INSERT_REQ(const GORM_PB_INSERT_REQ& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      tables_(from.tables_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    header_ = new ::gorm::GORM_PB_REQ_HEADER(*from.header_);
  } else {
    header_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:gorm.GORM_PB_INSERT_REQ)
}

void GORM_PB_INSERT_REQ::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GORM_PB_INSERT_REQ_gorm_5fpb_5fproto_2eproto.base);
  header_ = nullptr;
}

GORM_PB_INSERT_REQ::~GORM_PB_INSERT_REQ() {
  // @@protoc_insertion_point(destructor:gorm.GORM_PB_INSERT_REQ)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GORM_PB_INSERT_REQ::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete header_;
}

void GORM_PB_INSERT_REQ::ArenaDtor(void* object) {
  GORM_PB_INSERT_REQ* _this = reinterpret_cast< GORM_PB_INSERT_REQ* >(object);
  (void)_this;
}
void GORM_PB_INSERT_REQ::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GORM_PB_INSERT_REQ::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GORM_PB_INSERT_REQ& GORM_PB_INSERT_REQ::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GORM_PB_INSERT_REQ_gorm_5fpb_5fproto_2eproto.base);
  return *internal_default_instance();
}


void GORM_PB_INSERT_REQ::Clear() {
// @@protoc_insertion_point(message_clear_start:gorm.GORM_PB_INSERT_REQ)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tables_.Clear();
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GORM_PB_INSERT_REQ::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .gorm.GORM_PB_REQ_HEADER Header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .gorm.GORM_PB_TABLE Tables = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_tables(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GORM_PB_INSERT_REQ::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gorm.GORM_PB_INSERT_REQ)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gorm.GORM_PB_REQ_HEADER Header = 1;
  if (this->has_header()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::header(this), target, stream);
  }

  // repeated .gorm.GORM_PB_TABLE Tables = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_tables_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_tables(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gorm.GORM_PB_INSERT_REQ)
  return target;
}

size_t GORM_PB_INSERT_REQ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gorm.GORM_PB_INSERT_REQ)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .gorm.GORM_PB_TABLE Tables = 2;
  total_size += 1UL * this->_internal_tables_size();
  for (const auto& msg : this->tables_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .gorm.GORM_PB_REQ_HEADER Header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *header_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GORM_PB_INSERT_REQ::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gorm.GORM_PB_INSERT_REQ)
  GOOGLE_DCHECK_NE(&from, this);
  const GORM_PB_INSERT_REQ* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GORM_PB_INSERT_REQ>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gorm.GORM_PB_INSERT_REQ)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gorm.GORM_PB_INSERT_REQ)
    MergeFrom(*source);
  }
}

void GORM_PB_INSERT_REQ::MergeFrom(const GORM_PB_INSERT_REQ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gorm.GORM_PB_INSERT_REQ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tables_.MergeFrom(from.tables_);
  if (from.has_header()) {
    _internal_mutable_header()->::gorm::GORM_PB_REQ_HEADER::MergeFrom(from._internal_header());
  }
}

void GORM_PB_INSERT_REQ::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gorm.GORM_PB_INSERT_REQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GORM_PB_INSERT_REQ::CopyFrom(const GORM_PB_INSERT_REQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gorm.GORM_PB_INSERT_REQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GORM_PB_INSERT_REQ::IsInitialized() const {
  return true;
}

void GORM_PB_INSERT_REQ::InternalSwap(GORM_PB_INSERT_REQ* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  tables_.InternalSwap(&other->tables_);
  swap(header_, other->header_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GORM_PB_INSERT_REQ::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GORM_PB_INSERT_RSP::InitAsDefaultInstance() {
  ::gorm::_GORM_PB_INSERT_RSP_default_instance_._instance.get_mutable()->retcode_ = const_cast< ::gorm::GORM_PB_Ret_Code*>(
      ::gorm::GORM_PB_Ret_Code::internal_default_instance());
}
class GORM_PB_INSERT_RSP::_Internal {
 public:
  static const ::gorm::GORM_PB_Ret_Code& retcode(const GORM_PB_INSERT_RSP* msg);
};

const ::gorm::GORM_PB_Ret_Code&
GORM_PB_INSERT_RSP::_Internal::retcode(const GORM_PB_INSERT_RSP* msg) {
  return *msg->retcode_;
}
void GORM_PB_INSERT_RSP::clear_tables() {
  tables_.Clear();
}
GORM_PB_INSERT_RSP::GORM_PB_INSERT_RSP(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  tables_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gorm.GORM_PB_INSERT_RSP)
}
GORM_PB_INSERT_RSP::GORM_PB_INSERT_RSP(const GORM_PB_INSERT_RSP& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      tables_(from.tables_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_retcode()) {
    retcode_ = new ::gorm::GORM_PB_Ret_Code(*from.retcode_);
  } else {
    retcode_ = nullptr;
  }
  lastinsertid_ = from.lastinsertid_;
  // @@protoc_insertion_point(copy_constructor:gorm.GORM_PB_INSERT_RSP)
}

void GORM_PB_INSERT_RSP::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GORM_PB_INSERT_RSP_gorm_5fpb_5fproto_2eproto.base);
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lastinsertid_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(lastinsertid_));
}

GORM_PB_INSERT_RSP::~GORM_PB_INSERT_RSP() {
  // @@protoc_insertion_point(destructor:gorm.GORM_PB_INSERT_RSP)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GORM_PB_INSERT_RSP::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete retcode_;
}

void GORM_PB_INSERT_RSP::ArenaDtor(void* object) {
  GORM_PB_INSERT_RSP* _this = reinterpret_cast< GORM_PB_INSERT_RSP* >(object);
  (void)_this;
}
void GORM_PB_INSERT_RSP::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GORM_PB_INSERT_RSP::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GORM_PB_INSERT_RSP& GORM_PB_INSERT_RSP::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GORM_PB_INSERT_RSP_gorm_5fpb_5fproto_2eproto.base);
  return *internal_default_instance();
}


void GORM_PB_INSERT_RSP::Clear() {
// @@protoc_insertion_point(message_clear_start:gorm.GORM_PB_INSERT_RSP)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tables_.Clear();
  if (GetArena() == nullptr && retcode_ != nullptr) {
    delete retcode_;
  }
  retcode_ = nullptr;
  lastinsertid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GORM_PB_INSERT_RSP::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .gorm.GORM_PB_Ret_Code RetCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_retcode(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .gorm.GORM_PB_TABLE Tables = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_tables(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // uint64 LastInsertId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          lastinsertid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GORM_PB_INSERT_RSP::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gorm.GORM_PB_INSERT_RSP)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gorm.GORM_PB_Ret_Code RetCode = 1;
  if (this->has_retcode()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::retcode(this), target, stream);
  }

  // repeated .gorm.GORM_PB_TABLE Tables = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_tables_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_tables(i), target, stream);
  }

  // uint64 LastInsertId = 3;
  if (this->lastinsertid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(3, this->_internal_lastinsertid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gorm.GORM_PB_INSERT_RSP)
  return target;
}

size_t GORM_PB_INSERT_RSP::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gorm.GORM_PB_INSERT_RSP)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .gorm.GORM_PB_TABLE Tables = 2;
  total_size += 1UL * this->_internal_tables_size();
  for (const auto& msg : this->tables_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .gorm.GORM_PB_Ret_Code RetCode = 1;
  if (this->has_retcode()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *retcode_);
  }

  // uint64 LastInsertId = 3;
  if (this->lastinsertid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_lastinsertid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GORM_PB_INSERT_RSP::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gorm.GORM_PB_INSERT_RSP)
  GOOGLE_DCHECK_NE(&from, this);
  const GORM_PB_INSERT_RSP* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GORM_PB_INSERT_RSP>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gorm.GORM_PB_INSERT_RSP)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gorm.GORM_PB_INSERT_RSP)
    MergeFrom(*source);
  }
}

void GORM_PB_INSERT_RSP::MergeFrom(const GORM_PB_INSERT_RSP& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gorm.GORM_PB_INSERT_RSP)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tables_.MergeFrom(from.tables_);
  if (from.has_retcode()) {
    _internal_mutable_retcode()->::gorm::GORM_PB_Ret_Code::MergeFrom(from._internal_retcode());
  }
  if (from.lastinsertid() != 0) {
    _internal_set_lastinsertid(from._internal_lastinsertid());
  }
}

void GORM_PB_INSERT_RSP::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gorm.GORM_PB_INSERT_RSP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GORM_PB_INSERT_RSP::CopyFrom(const GORM_PB_INSERT_RSP& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gorm.GORM_PB_INSERT_RSP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GORM_PB_INSERT_RSP::IsInitialized() const {
  return true;
}

void GORM_PB_INSERT_RSP::InternalSwap(GORM_PB_INSERT_RSP* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  tables_.InternalSwap(&other->tables_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GORM_PB_INSERT_RSP, lastinsertid_)
      + sizeof(GORM_PB_INSERT_RSP::lastinsertid_)
      - PROTOBUF_FIELD_OFFSET(GORM_PB_INSERT_RSP, retcode_)>(
          reinterpret_cast<char*>(&retcode_),
          reinterpret_cast<char*>(&other->retcode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GORM_PB_INSERT_RSP::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GORM_PB_UPDATE_REQ::InitAsDefaultInstance() {
  ::gorm::_GORM_PB_UPDATE_REQ_default_instance_._instance.get_mutable()->header_ = const_cast< ::gorm::GORM_PB_REQ_HEADER*>(
      ::gorm::GORM_PB_REQ_HEADER::internal_default_instance());
}
class GORM_PB_UPDATE_REQ::_Internal {
 public:
  static const ::gorm::GORM_PB_REQ_HEADER& header(const GORM_PB_UPDATE_REQ* msg);
};

const ::gorm::GORM_PB_REQ_HEADER&
GORM_PB_UPDATE_REQ::_Internal::header(const GORM_PB_UPDATE_REQ* msg) {
  return *msg->header_;
}
void GORM_PB_UPDATE_REQ::clear_tables() {
  tables_.Clear();
}
GORM_PB_UPDATE_REQ::GORM_PB_UPDATE_REQ(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  tables_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gorm.GORM_PB_UPDATE_REQ)
}
GORM_PB_UPDATE_REQ::GORM_PB_UPDATE_REQ(const GORM_PB_UPDATE_REQ& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      tables_(from.tables_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    header_ = new ::gorm::GORM_PB_REQ_HEADER(*from.header_);
  } else {
    header_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:gorm.GORM_PB_UPDATE_REQ)
}

void GORM_PB_UPDATE_REQ::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GORM_PB_UPDATE_REQ_gorm_5fpb_5fproto_2eproto.base);
  header_ = nullptr;
}

GORM_PB_UPDATE_REQ::~GORM_PB_UPDATE_REQ() {
  // @@protoc_insertion_point(destructor:gorm.GORM_PB_UPDATE_REQ)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GORM_PB_UPDATE_REQ::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete header_;
}

void GORM_PB_UPDATE_REQ::ArenaDtor(void* object) {
  GORM_PB_UPDATE_REQ* _this = reinterpret_cast< GORM_PB_UPDATE_REQ* >(object);
  (void)_this;
}
void GORM_PB_UPDATE_REQ::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GORM_PB_UPDATE_REQ::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GORM_PB_UPDATE_REQ& GORM_PB_UPDATE_REQ::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GORM_PB_UPDATE_REQ_gorm_5fpb_5fproto_2eproto.base);
  return *internal_default_instance();
}


void GORM_PB_UPDATE_REQ::Clear() {
// @@protoc_insertion_point(message_clear_start:gorm.GORM_PB_UPDATE_REQ)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tables_.Clear();
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GORM_PB_UPDATE_REQ::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .gorm.GORM_PB_REQ_HEADER Header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .gorm.GORM_PB_TABLE Tables = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_tables(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GORM_PB_UPDATE_REQ::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gorm.GORM_PB_UPDATE_REQ)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gorm.GORM_PB_REQ_HEADER Header = 1;
  if (this->has_header()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::header(this), target, stream);
  }

  // repeated .gorm.GORM_PB_TABLE Tables = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_tables_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_tables(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gorm.GORM_PB_UPDATE_REQ)
  return target;
}

size_t GORM_PB_UPDATE_REQ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gorm.GORM_PB_UPDATE_REQ)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .gorm.GORM_PB_TABLE Tables = 2;
  total_size += 1UL * this->_internal_tables_size();
  for (const auto& msg : this->tables_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .gorm.GORM_PB_REQ_HEADER Header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *header_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GORM_PB_UPDATE_REQ::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gorm.GORM_PB_UPDATE_REQ)
  GOOGLE_DCHECK_NE(&from, this);
  const GORM_PB_UPDATE_REQ* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GORM_PB_UPDATE_REQ>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gorm.GORM_PB_UPDATE_REQ)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gorm.GORM_PB_UPDATE_REQ)
    MergeFrom(*source);
  }
}

void GORM_PB_UPDATE_REQ::MergeFrom(const GORM_PB_UPDATE_REQ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gorm.GORM_PB_UPDATE_REQ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tables_.MergeFrom(from.tables_);
  if (from.has_header()) {
    _internal_mutable_header()->::gorm::GORM_PB_REQ_HEADER::MergeFrom(from._internal_header());
  }
}

void GORM_PB_UPDATE_REQ::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gorm.GORM_PB_UPDATE_REQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GORM_PB_UPDATE_REQ::CopyFrom(const GORM_PB_UPDATE_REQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gorm.GORM_PB_UPDATE_REQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GORM_PB_UPDATE_REQ::IsInitialized() const {
  return true;
}

void GORM_PB_UPDATE_REQ::InternalSwap(GORM_PB_UPDATE_REQ* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  tables_.InternalSwap(&other->tables_);
  swap(header_, other->header_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GORM_PB_UPDATE_REQ::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GORM_PB_UPDATE_RSP::InitAsDefaultInstance() {
  ::gorm::_GORM_PB_UPDATE_RSP_default_instance_._instance.get_mutable()->retcode_ = const_cast< ::gorm::GORM_PB_Ret_Code*>(
      ::gorm::GORM_PB_Ret_Code::internal_default_instance());
}
class GORM_PB_UPDATE_RSP::_Internal {
 public:
  static const ::gorm::GORM_PB_Ret_Code& retcode(const GORM_PB_UPDATE_RSP* msg);
};

const ::gorm::GORM_PB_Ret_Code&
GORM_PB_UPDATE_RSP::_Internal::retcode(const GORM_PB_UPDATE_RSP* msg) {
  return *msg->retcode_;
}
void GORM_PB_UPDATE_RSP::clear_tables() {
  tables_.Clear();
}
GORM_PB_UPDATE_RSP::GORM_PB_UPDATE_RSP(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  tables_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gorm.GORM_PB_UPDATE_RSP)
}
GORM_PB_UPDATE_RSP::GORM_PB_UPDATE_RSP(const GORM_PB_UPDATE_RSP& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      tables_(from.tables_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_retcode()) {
    retcode_ = new ::gorm::GORM_PB_Ret_Code(*from.retcode_);
  } else {
    retcode_ = nullptr;
  }
  affectednum_ = from.affectednum_;
  // @@protoc_insertion_point(copy_constructor:gorm.GORM_PB_UPDATE_RSP)
}

void GORM_PB_UPDATE_RSP::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GORM_PB_UPDATE_RSP_gorm_5fpb_5fproto_2eproto.base);
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&affectednum_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(affectednum_));
}

GORM_PB_UPDATE_RSP::~GORM_PB_UPDATE_RSP() {
  // @@protoc_insertion_point(destructor:gorm.GORM_PB_UPDATE_RSP)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GORM_PB_UPDATE_RSP::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete retcode_;
}

void GORM_PB_UPDATE_RSP::ArenaDtor(void* object) {
  GORM_PB_UPDATE_RSP* _this = reinterpret_cast< GORM_PB_UPDATE_RSP* >(object);
  (void)_this;
}
void GORM_PB_UPDATE_RSP::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GORM_PB_UPDATE_RSP::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GORM_PB_UPDATE_RSP& GORM_PB_UPDATE_RSP::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GORM_PB_UPDATE_RSP_gorm_5fpb_5fproto_2eproto.base);
  return *internal_default_instance();
}


void GORM_PB_UPDATE_RSP::Clear() {
// @@protoc_insertion_point(message_clear_start:gorm.GORM_PB_UPDATE_RSP)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tables_.Clear();
  if (GetArena() == nullptr && retcode_ != nullptr) {
    delete retcode_;
  }
  retcode_ = nullptr;
  affectednum_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GORM_PB_UPDATE_RSP::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .gorm.GORM_PB_Ret_Code RetCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_retcode(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .gorm.GORM_PB_TABLE Tables = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_tables(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 AffectedNum = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          affectednum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GORM_PB_UPDATE_RSP::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gorm.GORM_PB_UPDATE_RSP)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gorm.GORM_PB_Ret_Code RetCode = 1;
  if (this->has_retcode()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::retcode(this), target, stream);
  }

  // repeated .gorm.GORM_PB_TABLE Tables = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_tables_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_tables(i), target, stream);
  }

  // int32 AffectedNum = 3;
  if (this->affectednum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_affectednum(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gorm.GORM_PB_UPDATE_RSP)
  return target;
}

size_t GORM_PB_UPDATE_RSP::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gorm.GORM_PB_UPDATE_RSP)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .gorm.GORM_PB_TABLE Tables = 2;
  total_size += 1UL * this->_internal_tables_size();
  for (const auto& msg : this->tables_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .gorm.GORM_PB_Ret_Code RetCode = 1;
  if (this->has_retcode()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *retcode_);
  }

  // int32 AffectedNum = 3;
  if (this->affectednum() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_affectednum());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GORM_PB_UPDATE_RSP::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gorm.GORM_PB_UPDATE_RSP)
  GOOGLE_DCHECK_NE(&from, this);
  const GORM_PB_UPDATE_RSP* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GORM_PB_UPDATE_RSP>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gorm.GORM_PB_UPDATE_RSP)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gorm.GORM_PB_UPDATE_RSP)
    MergeFrom(*source);
  }
}

void GORM_PB_UPDATE_RSP::MergeFrom(const GORM_PB_UPDATE_RSP& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gorm.GORM_PB_UPDATE_RSP)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tables_.MergeFrom(from.tables_);
  if (from.has_retcode()) {
    _internal_mutable_retcode()->::gorm::GORM_PB_Ret_Code::MergeFrom(from._internal_retcode());
  }
  if (from.affectednum() != 0) {
    _internal_set_affectednum(from._internal_affectednum());
  }
}

void GORM_PB_UPDATE_RSP::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gorm.GORM_PB_UPDATE_RSP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GORM_PB_UPDATE_RSP::CopyFrom(const GORM_PB_UPDATE_RSP& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gorm.GORM_PB_UPDATE_RSP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GORM_PB_UPDATE_RSP::IsInitialized() const {
  return true;
}

void GORM_PB_UPDATE_RSP::InternalSwap(GORM_PB_UPDATE_RSP* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  tables_.InternalSwap(&other->tables_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GORM_PB_UPDATE_RSP, affectednum_)
      + sizeof(GORM_PB_UPDATE_RSP::affectednum_)
      - PROTOBUF_FIELD_OFFSET(GORM_PB_UPDATE_RSP, retcode_)>(
          reinterpret_cast<char*>(&retcode_),
          reinterpret_cast<char*>(&other->retcode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GORM_PB_UPDATE_RSP::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GORM_PB_REPLACE_REQ::InitAsDefaultInstance() {
  ::gorm::_GORM_PB_REPLACE_REQ_default_instance_._instance.get_mutable()->header_ = const_cast< ::gorm::GORM_PB_REQ_HEADER*>(
      ::gorm::GORM_PB_REQ_HEADER::internal_default_instance());
}
class GORM_PB_REPLACE_REQ::_Internal {
 public:
  static const ::gorm::GORM_PB_REQ_HEADER& header(const GORM_PB_REPLACE_REQ* msg);
};

const ::gorm::GORM_PB_REQ_HEADER&
GORM_PB_REPLACE_REQ::_Internal::header(const GORM_PB_REPLACE_REQ* msg) {
  return *msg->header_;
}
void GORM_PB_REPLACE_REQ::clear_tables() {
  tables_.Clear();
}
GORM_PB_REPLACE_REQ::GORM_PB_REPLACE_REQ(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  tables_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gorm.GORM_PB_REPLACE_REQ)
}
GORM_PB_REPLACE_REQ::GORM_PB_REPLACE_REQ(const GORM_PB_REPLACE_REQ& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      tables_(from.tables_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    header_ = new ::gorm::GORM_PB_REQ_HEADER(*from.header_);
  } else {
    header_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:gorm.GORM_PB_REPLACE_REQ)
}

void GORM_PB_REPLACE_REQ::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GORM_PB_REPLACE_REQ_gorm_5fpb_5fproto_2eproto.base);
  header_ = nullptr;
}

GORM_PB_REPLACE_REQ::~GORM_PB_REPLACE_REQ() {
  // @@protoc_insertion_point(destructor:gorm.GORM_PB_REPLACE_REQ)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GORM_PB_REPLACE_REQ::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete header_;
}

void GORM_PB_REPLACE_REQ::ArenaDtor(void* object) {
  GORM_PB_REPLACE_REQ* _this = reinterpret_cast< GORM_PB_REPLACE_REQ* >(object);
  (void)_this;
}
void GORM_PB_REPLACE_REQ::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GORM_PB_REPLACE_REQ::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GORM_PB_REPLACE_REQ& GORM_PB_REPLACE_REQ::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GORM_PB_REPLACE_REQ_gorm_5fpb_5fproto_2eproto.base);
  return *internal_default_instance();
}


void GORM_PB_REPLACE_REQ::Clear() {
// @@protoc_insertion_point(message_clear_start:gorm.GORM_PB_REPLACE_REQ)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tables_.Clear();
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GORM_PB_REPLACE_REQ::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .gorm.GORM_PB_REQ_HEADER Header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .gorm.GORM_PB_TABLE Tables = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_tables(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GORM_PB_REPLACE_REQ::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gorm.GORM_PB_REPLACE_REQ)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gorm.GORM_PB_REQ_HEADER Header = 1;
  if (this->has_header()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::header(this), target, stream);
  }

  // repeated .gorm.GORM_PB_TABLE Tables = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_tables_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_tables(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gorm.GORM_PB_REPLACE_REQ)
  return target;
}

size_t GORM_PB_REPLACE_REQ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gorm.GORM_PB_REPLACE_REQ)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .gorm.GORM_PB_TABLE Tables = 2;
  total_size += 1UL * this->_internal_tables_size();
  for (const auto& msg : this->tables_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .gorm.GORM_PB_REQ_HEADER Header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *header_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GORM_PB_REPLACE_REQ::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gorm.GORM_PB_REPLACE_REQ)
  GOOGLE_DCHECK_NE(&from, this);
  const GORM_PB_REPLACE_REQ* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GORM_PB_REPLACE_REQ>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gorm.GORM_PB_REPLACE_REQ)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gorm.GORM_PB_REPLACE_REQ)
    MergeFrom(*source);
  }
}

void GORM_PB_REPLACE_REQ::MergeFrom(const GORM_PB_REPLACE_REQ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gorm.GORM_PB_REPLACE_REQ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tables_.MergeFrom(from.tables_);
  if (from.has_header()) {
    _internal_mutable_header()->::gorm::GORM_PB_REQ_HEADER::MergeFrom(from._internal_header());
  }
}

void GORM_PB_REPLACE_REQ::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gorm.GORM_PB_REPLACE_REQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GORM_PB_REPLACE_REQ::CopyFrom(const GORM_PB_REPLACE_REQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gorm.GORM_PB_REPLACE_REQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GORM_PB_REPLACE_REQ::IsInitialized() const {
  return true;
}

void GORM_PB_REPLACE_REQ::InternalSwap(GORM_PB_REPLACE_REQ* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  tables_.InternalSwap(&other->tables_);
  swap(header_, other->header_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GORM_PB_REPLACE_REQ::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GORM_PB_REPLACE_RSP::InitAsDefaultInstance() {
  ::gorm::_GORM_PB_REPLACE_RSP_default_instance_._instance.get_mutable()->retcode_ = const_cast< ::gorm::GORM_PB_Ret_Code*>(
      ::gorm::GORM_PB_Ret_Code::internal_default_instance());
}
class GORM_PB_REPLACE_RSP::_Internal {
 public:
  static const ::gorm::GORM_PB_Ret_Code& retcode(const GORM_PB_REPLACE_RSP* msg);
};

const ::gorm::GORM_PB_Ret_Code&
GORM_PB_REPLACE_RSP::_Internal::retcode(const GORM_PB_REPLACE_RSP* msg) {
  return *msg->retcode_;
}
void GORM_PB_REPLACE_RSP::clear_tables() {
  tables_.Clear();
}
GORM_PB_REPLACE_RSP::GORM_PB_REPLACE_RSP(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  tables_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gorm.GORM_PB_REPLACE_RSP)
}
GORM_PB_REPLACE_RSP::GORM_PB_REPLACE_RSP(const GORM_PB_REPLACE_RSP& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      tables_(from.tables_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_retcode()) {
    retcode_ = new ::gorm::GORM_PB_Ret_Code(*from.retcode_);
  } else {
    retcode_ = nullptr;
  }
  affectednum_ = from.affectednum_;
  // @@protoc_insertion_point(copy_constructor:gorm.GORM_PB_REPLACE_RSP)
}

void GORM_PB_REPLACE_RSP::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GORM_PB_REPLACE_RSP_gorm_5fpb_5fproto_2eproto.base);
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&affectednum_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(affectednum_));
}

GORM_PB_REPLACE_RSP::~GORM_PB_REPLACE_RSP() {
  // @@protoc_insertion_point(destructor:gorm.GORM_PB_REPLACE_RSP)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GORM_PB_REPLACE_RSP::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete retcode_;
}

void GORM_PB_REPLACE_RSP::ArenaDtor(void* object) {
  GORM_PB_REPLACE_RSP* _this = reinterpret_cast< GORM_PB_REPLACE_RSP* >(object);
  (void)_this;
}
void GORM_PB_REPLACE_RSP::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GORM_PB_REPLACE_RSP::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GORM_PB_REPLACE_RSP& GORM_PB_REPLACE_RSP::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GORM_PB_REPLACE_RSP_gorm_5fpb_5fproto_2eproto.base);
  return *internal_default_instance();
}


void GORM_PB_REPLACE_RSP::Clear() {
// @@protoc_insertion_point(message_clear_start:gorm.GORM_PB_REPLACE_RSP)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tables_.Clear();
  if (GetArena() == nullptr && retcode_ != nullptr) {
    delete retcode_;
  }
  retcode_ = nullptr;
  affectednum_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GORM_PB_REPLACE_RSP::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .gorm.GORM_PB_Ret_Code RetCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_retcode(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .gorm.GORM_PB_TABLE Tables = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_tables(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 AffectedNum = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          affectednum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GORM_PB_REPLACE_RSP::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gorm.GORM_PB_REPLACE_RSP)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gorm.GORM_PB_Ret_Code RetCode = 1;
  if (this->has_retcode()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::retcode(this), target, stream);
  }

  // repeated .gorm.GORM_PB_TABLE Tables = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_tables_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_tables(i), target, stream);
  }

  // int32 AffectedNum = 3;
  if (this->affectednum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_affectednum(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gorm.GORM_PB_REPLACE_RSP)
  return target;
}

size_t GORM_PB_REPLACE_RSP::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gorm.GORM_PB_REPLACE_RSP)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .gorm.GORM_PB_TABLE Tables = 2;
  total_size += 1UL * this->_internal_tables_size();
  for (const auto& msg : this->tables_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .gorm.GORM_PB_Ret_Code RetCode = 1;
  if (this->has_retcode()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *retcode_);
  }

  // int32 AffectedNum = 3;
  if (this->affectednum() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_affectednum());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GORM_PB_REPLACE_RSP::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gorm.GORM_PB_REPLACE_RSP)
  GOOGLE_DCHECK_NE(&from, this);
  const GORM_PB_REPLACE_RSP* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GORM_PB_REPLACE_RSP>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gorm.GORM_PB_REPLACE_RSP)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gorm.GORM_PB_REPLACE_RSP)
    MergeFrom(*source);
  }
}

void GORM_PB_REPLACE_RSP::MergeFrom(const GORM_PB_REPLACE_RSP& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gorm.GORM_PB_REPLACE_RSP)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tables_.MergeFrom(from.tables_);
  if (from.has_retcode()) {
    _internal_mutable_retcode()->::gorm::GORM_PB_Ret_Code::MergeFrom(from._internal_retcode());
  }
  if (from.affectednum() != 0) {
    _internal_set_affectednum(from._internal_affectednum());
  }
}

void GORM_PB_REPLACE_RSP::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gorm.GORM_PB_REPLACE_RSP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GORM_PB_REPLACE_RSP::CopyFrom(const GORM_PB_REPLACE_RSP& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gorm.GORM_PB_REPLACE_RSP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GORM_PB_REPLACE_RSP::IsInitialized() const {
  return true;
}

void GORM_PB_REPLACE_RSP::InternalSwap(GORM_PB_REPLACE_RSP* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  tables_.InternalSwap(&other->tables_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GORM_PB_REPLACE_RSP, affectednum_)
      + sizeof(GORM_PB_REPLACE_RSP::affectednum_)
      - PROTOBUF_FIELD_OFFSET(GORM_PB_REPLACE_RSP, retcode_)>(
          reinterpret_cast<char*>(&retcode_),
          reinterpret_cast<char*>(&other->retcode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GORM_PB_REPLACE_RSP::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GORM_PB_GET_REQ::InitAsDefaultInstance() {
  ::gorm::_GORM_PB_GET_REQ_default_instance_._instance.get_mutable()->header_ = const_cast< ::gorm::GORM_PB_REQ_HEADER*>(
      ::gorm::GORM_PB_REQ_HEADER::internal_default_instance());
  ::gorm::_GORM_PB_GET_REQ_default_instance_._instance.get_mutable()->table_ = const_cast< ::gorm::GORM_PB_TABLE*>(
      ::gorm::GORM_PB_TABLE::internal_default_instance());
}
class GORM_PB_GET_REQ::_Internal {
 public:
  static const ::gorm::GORM_PB_REQ_HEADER& header(const GORM_PB_GET_REQ* msg);
  static const ::gorm::GORM_PB_TABLE& table(const GORM_PB_GET_REQ* msg);
};

const ::gorm::GORM_PB_REQ_HEADER&
GORM_PB_GET_REQ::_Internal::header(const GORM_PB_GET_REQ* msg) {
  return *msg->header_;
}
const ::gorm::GORM_PB_TABLE&
GORM_PB_GET_REQ::_Internal::table(const GORM_PB_GET_REQ* msg) {
  return *msg->table_;
}
void GORM_PB_GET_REQ::clear_table() {
  if (GetArena() == nullptr && table_ != nullptr) {
    delete table_;
  }
  table_ = nullptr;
}
GORM_PB_GET_REQ::GORM_PB_GET_REQ(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gorm.GORM_PB_GET_REQ)
}
GORM_PB_GET_REQ::GORM_PB_GET_REQ(const GORM_PB_GET_REQ& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    header_ = new ::gorm::GORM_PB_REQ_HEADER(*from.header_);
  } else {
    header_ = nullptr;
  }
  if (from._internal_has_table()) {
    table_ = new ::gorm::GORM_PB_TABLE(*from.table_);
  } else {
    table_ = nullptr;
  }
  getflag_ = from.getflag_;
  // @@protoc_insertion_point(copy_constructor:gorm.GORM_PB_GET_REQ)
}

void GORM_PB_GET_REQ::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GORM_PB_GET_REQ_gorm_5fpb_5fproto_2eproto.base);
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&getflag_) -
      reinterpret_cast<char*>(&header_)) + sizeof(getflag_));
}

GORM_PB_GET_REQ::~GORM_PB_GET_REQ() {
  // @@protoc_insertion_point(destructor:gorm.GORM_PB_GET_REQ)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GORM_PB_GET_REQ::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete table_;
}

void GORM_PB_GET_REQ::ArenaDtor(void* object) {
  GORM_PB_GET_REQ* _this = reinterpret_cast< GORM_PB_GET_REQ* >(object);
  (void)_this;
}
void GORM_PB_GET_REQ::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GORM_PB_GET_REQ::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GORM_PB_GET_REQ& GORM_PB_GET_REQ::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GORM_PB_GET_REQ_gorm_5fpb_5fproto_2eproto.base);
  return *internal_default_instance();
}


void GORM_PB_GET_REQ::Clear() {
// @@protoc_insertion_point(message_clear_start:gorm.GORM_PB_GET_REQ)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  if (GetArena() == nullptr && table_ != nullptr) {
    delete table_;
  }
  table_ = nullptr;
  getflag_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GORM_PB_GET_REQ::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .gorm.GORM_PB_REQ_HEADER Header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .gorm.GORM_PB_TABLE Table = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_table(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 GetFlag = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          getflag_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GORM_PB_GET_REQ::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gorm.GORM_PB_GET_REQ)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gorm.GORM_PB_REQ_HEADER Header = 1;
  if (this->has_header()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::header(this), target, stream);
  }

  // .gorm.GORM_PB_TABLE Table = 2;
  if (this->has_table()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::table(this), target, stream);
  }

  // int32 GetFlag = 3;
  if (this->getflag() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_getflag(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gorm.GORM_PB_GET_REQ)
  return target;
}

size_t GORM_PB_GET_REQ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gorm.GORM_PB_GET_REQ)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .gorm.GORM_PB_REQ_HEADER Header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .gorm.GORM_PB_TABLE Table = 2;
  if (this->has_table()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *table_);
  }

  // int32 GetFlag = 3;
  if (this->getflag() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_getflag());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GORM_PB_GET_REQ::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gorm.GORM_PB_GET_REQ)
  GOOGLE_DCHECK_NE(&from, this);
  const GORM_PB_GET_REQ* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GORM_PB_GET_REQ>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gorm.GORM_PB_GET_REQ)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gorm.GORM_PB_GET_REQ)
    MergeFrom(*source);
  }
}

void GORM_PB_GET_REQ::MergeFrom(const GORM_PB_GET_REQ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gorm.GORM_PB_GET_REQ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    _internal_mutable_header()->::gorm::GORM_PB_REQ_HEADER::MergeFrom(from._internal_header());
  }
  if (from.has_table()) {
    _internal_mutable_table()->::gorm::GORM_PB_TABLE::MergeFrom(from._internal_table());
  }
  if (from.getflag() != 0) {
    _internal_set_getflag(from._internal_getflag());
  }
}

void GORM_PB_GET_REQ::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gorm.GORM_PB_GET_REQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GORM_PB_GET_REQ::CopyFrom(const GORM_PB_GET_REQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gorm.GORM_PB_GET_REQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GORM_PB_GET_REQ::IsInitialized() const {
  return true;
}

void GORM_PB_GET_REQ::InternalSwap(GORM_PB_GET_REQ* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GORM_PB_GET_REQ, getflag_)
      + sizeof(GORM_PB_GET_REQ::getflag_)
      - PROTOBUF_FIELD_OFFSET(GORM_PB_GET_REQ, header_)>(
          reinterpret_cast<char*>(&header_),
          reinterpret_cast<char*>(&other->header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GORM_PB_GET_REQ::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GORM_PB_GET_RSP::InitAsDefaultInstance() {
  ::gorm::_GORM_PB_GET_RSP_default_instance_._instance.get_mutable()->retcode_ = const_cast< ::gorm::GORM_PB_Ret_Code*>(
      ::gorm::GORM_PB_Ret_Code::internal_default_instance());
  ::gorm::_GORM_PB_GET_RSP_default_instance_._instance.get_mutable()->table_ = const_cast< ::gorm::GORM_PB_TABLE*>(
      ::gorm::GORM_PB_TABLE::internal_default_instance());
}
class GORM_PB_GET_RSP::_Internal {
 public:
  static const ::gorm::GORM_PB_Ret_Code& retcode(const GORM_PB_GET_RSP* msg);
  static const ::gorm::GORM_PB_TABLE& table(const GORM_PB_GET_RSP* msg);
};

const ::gorm::GORM_PB_Ret_Code&
GORM_PB_GET_RSP::_Internal::retcode(const GORM_PB_GET_RSP* msg) {
  return *msg->retcode_;
}
const ::gorm::GORM_PB_TABLE&
GORM_PB_GET_RSP::_Internal::table(const GORM_PB_GET_RSP* msg) {
  return *msg->table_;
}
void GORM_PB_GET_RSP::clear_table() {
  if (GetArena() == nullptr && table_ != nullptr) {
    delete table_;
  }
  table_ = nullptr;
}
GORM_PB_GET_RSP::GORM_PB_GET_RSP(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gorm.GORM_PB_GET_RSP)
}
GORM_PB_GET_RSP::GORM_PB_GET_RSP(const GORM_PB_GET_RSP& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_retcode()) {
    retcode_ = new ::gorm::GORM_PB_Ret_Code(*from.retcode_);
  } else {
    retcode_ = nullptr;
  }
  if (from._internal_has_table()) {
    table_ = new ::gorm::GORM_PB_TABLE(*from.table_);
  } else {
    table_ = nullptr;
  }
  ::memcpy(&lastinsertid_, &from.lastinsertid_,
    static_cast<size_t>(reinterpret_cast<char*>(&newinsert_) -
    reinterpret_cast<char*>(&lastinsertid_)) + sizeof(newinsert_));
  // @@protoc_insertion_point(copy_constructor:gorm.GORM_PB_GET_RSP)
}

void GORM_PB_GET_RSP::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GORM_PB_GET_RSP_gorm_5fpb_5fproto_2eproto.base);
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&newinsert_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(newinsert_));
}

GORM_PB_GET_RSP::~GORM_PB_GET_RSP() {
  // @@protoc_insertion_point(destructor:gorm.GORM_PB_GET_RSP)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GORM_PB_GET_RSP::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete retcode_;
  if (this != internal_default_instance()) delete table_;
}

void GORM_PB_GET_RSP::ArenaDtor(void* object) {
  GORM_PB_GET_RSP* _this = reinterpret_cast< GORM_PB_GET_RSP* >(object);
  (void)_this;
}
void GORM_PB_GET_RSP::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GORM_PB_GET_RSP::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GORM_PB_GET_RSP& GORM_PB_GET_RSP::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GORM_PB_GET_RSP_gorm_5fpb_5fproto_2eproto.base);
  return *internal_default_instance();
}


void GORM_PB_GET_RSP::Clear() {
// @@protoc_insertion_point(message_clear_start:gorm.GORM_PB_GET_RSP)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && retcode_ != nullptr) {
    delete retcode_;
  }
  retcode_ = nullptr;
  if (GetArena() == nullptr && table_ != nullptr) {
    delete table_;
  }
  table_ = nullptr;
  ::memset(&lastinsertid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&newinsert_) -
      reinterpret_cast<char*>(&lastinsertid_)) + sizeof(newinsert_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GORM_PB_GET_RSP::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .gorm.GORM_PB_Ret_Code RetCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_retcode(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .gorm.GORM_PB_TABLE Table = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_table(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 NewInsert = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          newinsert_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 LastInsertId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          lastinsertid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GORM_PB_GET_RSP::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gorm.GORM_PB_GET_RSP)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gorm.GORM_PB_Ret_Code RetCode = 1;
  if (this->has_retcode()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::retcode(this), target, stream);
  }

  // .gorm.GORM_PB_TABLE Table = 2;
  if (this->has_table()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::table(this), target, stream);
  }

  // int32 NewInsert = 3;
  if (this->newinsert() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_newinsert(), target);
  }

  // uint64 LastInsertId = 4;
  if (this->lastinsertid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(4, this->_internal_lastinsertid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gorm.GORM_PB_GET_RSP)
  return target;
}

size_t GORM_PB_GET_RSP::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gorm.GORM_PB_GET_RSP)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .gorm.GORM_PB_Ret_Code RetCode = 1;
  if (this->has_retcode()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *retcode_);
  }

  // .gorm.GORM_PB_TABLE Table = 2;
  if (this->has_table()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *table_);
  }

  // uint64 LastInsertId = 4;
  if (this->lastinsertid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_lastinsertid());
  }

  // int32 NewInsert = 3;
  if (this->newinsert() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_newinsert());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GORM_PB_GET_RSP::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gorm.GORM_PB_GET_RSP)
  GOOGLE_DCHECK_NE(&from, this);
  const GORM_PB_GET_RSP* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GORM_PB_GET_RSP>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gorm.GORM_PB_GET_RSP)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gorm.GORM_PB_GET_RSP)
    MergeFrom(*source);
  }
}

void GORM_PB_GET_RSP::MergeFrom(const GORM_PB_GET_RSP& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gorm.GORM_PB_GET_RSP)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_retcode()) {
    _internal_mutable_retcode()->::gorm::GORM_PB_Ret_Code::MergeFrom(from._internal_retcode());
  }
  if (from.has_table()) {
    _internal_mutable_table()->::gorm::GORM_PB_TABLE::MergeFrom(from._internal_table());
  }
  if (from.lastinsertid() != 0) {
    _internal_set_lastinsertid(from._internal_lastinsertid());
  }
  if (from.newinsert() != 0) {
    _internal_set_newinsert(from._internal_newinsert());
  }
}

void GORM_PB_GET_RSP::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gorm.GORM_PB_GET_RSP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GORM_PB_GET_RSP::CopyFrom(const GORM_PB_GET_RSP& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gorm.GORM_PB_GET_RSP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GORM_PB_GET_RSP::IsInitialized() const {
  return true;
}

void GORM_PB_GET_RSP::InternalSwap(GORM_PB_GET_RSP* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GORM_PB_GET_RSP, newinsert_)
      + sizeof(GORM_PB_GET_RSP::newinsert_)
      - PROTOBUF_FIELD_OFFSET(GORM_PB_GET_RSP, retcode_)>(
          reinterpret_cast<char*>(&retcode_),
          reinterpret_cast<char*>(&other->retcode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GORM_PB_GET_RSP::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GORM_PB_BATCH_GET_REQ::InitAsDefaultInstance() {
  ::gorm::_GORM_PB_BATCH_GET_REQ_default_instance_._instance.get_mutable()->header_ = const_cast< ::gorm::GORM_PB_REQ_HEADER*>(
      ::gorm::GORM_PB_REQ_HEADER::internal_default_instance());
}
class GORM_PB_BATCH_GET_REQ::_Internal {
 public:
  static const ::gorm::GORM_PB_REQ_HEADER& header(const GORM_PB_BATCH_GET_REQ* msg);
};

const ::gorm::GORM_PB_REQ_HEADER&
GORM_PB_BATCH_GET_REQ::_Internal::header(const GORM_PB_BATCH_GET_REQ* msg) {
  return *msg->header_;
}
void GORM_PB_BATCH_GET_REQ::clear_tables() {
  tables_.Clear();
}
GORM_PB_BATCH_GET_REQ::GORM_PB_BATCH_GET_REQ(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  tables_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gorm.GORM_PB_BATCH_GET_REQ)
}
GORM_PB_BATCH_GET_REQ::GORM_PB_BATCH_GET_REQ(const GORM_PB_BATCH_GET_REQ& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      tables_(from.tables_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    header_ = new ::gorm::GORM_PB_REQ_HEADER(*from.header_);
  } else {
    header_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:gorm.GORM_PB_BATCH_GET_REQ)
}

void GORM_PB_BATCH_GET_REQ::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GORM_PB_BATCH_GET_REQ_gorm_5fpb_5fproto_2eproto.base);
  header_ = nullptr;
}

GORM_PB_BATCH_GET_REQ::~GORM_PB_BATCH_GET_REQ() {
  // @@protoc_insertion_point(destructor:gorm.GORM_PB_BATCH_GET_REQ)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GORM_PB_BATCH_GET_REQ::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete header_;
}

void GORM_PB_BATCH_GET_REQ::ArenaDtor(void* object) {
  GORM_PB_BATCH_GET_REQ* _this = reinterpret_cast< GORM_PB_BATCH_GET_REQ* >(object);
  (void)_this;
}
void GORM_PB_BATCH_GET_REQ::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GORM_PB_BATCH_GET_REQ::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GORM_PB_BATCH_GET_REQ& GORM_PB_BATCH_GET_REQ::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GORM_PB_BATCH_GET_REQ_gorm_5fpb_5fproto_2eproto.base);
  return *internal_default_instance();
}


void GORM_PB_BATCH_GET_REQ::Clear() {
// @@protoc_insertion_point(message_clear_start:gorm.GORM_PB_BATCH_GET_REQ)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tables_.Clear();
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GORM_PB_BATCH_GET_REQ::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .gorm.GORM_PB_REQ_HEADER Header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .gorm.GORM_PB_TABLE Tables = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_tables(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GORM_PB_BATCH_GET_REQ::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gorm.GORM_PB_BATCH_GET_REQ)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gorm.GORM_PB_REQ_HEADER Header = 1;
  if (this->has_header()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::header(this), target, stream);
  }

  // repeated .gorm.GORM_PB_TABLE Tables = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_tables_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_tables(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gorm.GORM_PB_BATCH_GET_REQ)
  return target;
}

size_t GORM_PB_BATCH_GET_REQ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gorm.GORM_PB_BATCH_GET_REQ)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .gorm.GORM_PB_TABLE Tables = 2;
  total_size += 1UL * this->_internal_tables_size();
  for (const auto& msg : this->tables_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .gorm.GORM_PB_REQ_HEADER Header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *header_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GORM_PB_BATCH_GET_REQ::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gorm.GORM_PB_BATCH_GET_REQ)
  GOOGLE_DCHECK_NE(&from, this);
  const GORM_PB_BATCH_GET_REQ* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GORM_PB_BATCH_GET_REQ>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gorm.GORM_PB_BATCH_GET_REQ)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gorm.GORM_PB_BATCH_GET_REQ)
    MergeFrom(*source);
  }
}

void GORM_PB_BATCH_GET_REQ::MergeFrom(const GORM_PB_BATCH_GET_REQ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gorm.GORM_PB_BATCH_GET_REQ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tables_.MergeFrom(from.tables_);
  if (from.has_header()) {
    _internal_mutable_header()->::gorm::GORM_PB_REQ_HEADER::MergeFrom(from._internal_header());
  }
}

void GORM_PB_BATCH_GET_REQ::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gorm.GORM_PB_BATCH_GET_REQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GORM_PB_BATCH_GET_REQ::CopyFrom(const GORM_PB_BATCH_GET_REQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gorm.GORM_PB_BATCH_GET_REQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GORM_PB_BATCH_GET_REQ::IsInitialized() const {
  return true;
}

void GORM_PB_BATCH_GET_REQ::InternalSwap(GORM_PB_BATCH_GET_REQ* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  tables_.InternalSwap(&other->tables_);
  swap(header_, other->header_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GORM_PB_BATCH_GET_REQ::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GORM_PB_BATCH_GET_RSP::InitAsDefaultInstance() {
  ::gorm::_GORM_PB_BATCH_GET_RSP_default_instance_._instance.get_mutable()->retcode_ = const_cast< ::gorm::GORM_PB_Ret_Code*>(
      ::gorm::GORM_PB_Ret_Code::internal_default_instance());
}
class GORM_PB_BATCH_GET_RSP::_Internal {
 public:
  static const ::gorm::GORM_PB_Ret_Code& retcode(const GORM_PB_BATCH_GET_RSP* msg);
};

const ::gorm::GORM_PB_Ret_Code&
GORM_PB_BATCH_GET_RSP::_Internal::retcode(const GORM_PB_BATCH_GET_RSP* msg) {
  return *msg->retcode_;
}
void GORM_PB_BATCH_GET_RSP::clear_tables() {
  tables_.Clear();
}
GORM_PB_BATCH_GET_RSP::GORM_PB_BATCH_GET_RSP(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  tables_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gorm.GORM_PB_BATCH_GET_RSP)
}
GORM_PB_BATCH_GET_RSP::GORM_PB_BATCH_GET_RSP(const GORM_PB_BATCH_GET_RSP& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      tables_(from.tables_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_retcode()) {
    retcode_ = new ::gorm::GORM_PB_Ret_Code(*from.retcode_);
  } else {
    retcode_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:gorm.GORM_PB_BATCH_GET_RSP)
}

void GORM_PB_BATCH_GET_RSP::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GORM_PB_BATCH_GET_RSP_gorm_5fpb_5fproto_2eproto.base);
  retcode_ = nullptr;
}

GORM_PB_BATCH_GET_RSP::~GORM_PB_BATCH_GET_RSP() {
  // @@protoc_insertion_point(destructor:gorm.GORM_PB_BATCH_GET_RSP)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GORM_PB_BATCH_GET_RSP::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete retcode_;
}

void GORM_PB_BATCH_GET_RSP::ArenaDtor(void* object) {
  GORM_PB_BATCH_GET_RSP* _this = reinterpret_cast< GORM_PB_BATCH_GET_RSP* >(object);
  (void)_this;
}
void GORM_PB_BATCH_GET_RSP::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GORM_PB_BATCH_GET_RSP::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GORM_PB_BATCH_GET_RSP& GORM_PB_BATCH_GET_RSP::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GORM_PB_BATCH_GET_RSP_gorm_5fpb_5fproto_2eproto.base);
  return *internal_default_instance();
}


void GORM_PB_BATCH_GET_RSP::Clear() {
// @@protoc_insertion_point(message_clear_start:gorm.GORM_PB_BATCH_GET_RSP)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tables_.Clear();
  if (GetArena() == nullptr && retcode_ != nullptr) {
    delete retcode_;
  }
  retcode_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GORM_PB_BATCH_GET_RSP::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .gorm.GORM_PB_Ret_Code RetCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_retcode(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .gorm.GORM_PB_TABLE Tables = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_tables(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GORM_PB_BATCH_GET_RSP::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gorm.GORM_PB_BATCH_GET_RSP)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gorm.GORM_PB_Ret_Code RetCode = 1;
  if (this->has_retcode()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::retcode(this), target, stream);
  }

  // repeated .gorm.GORM_PB_TABLE Tables = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_tables_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_tables(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gorm.GORM_PB_BATCH_GET_RSP)
  return target;
}

size_t GORM_PB_BATCH_GET_RSP::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gorm.GORM_PB_BATCH_GET_RSP)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .gorm.GORM_PB_TABLE Tables = 2;
  total_size += 1UL * this->_internal_tables_size();
  for (const auto& msg : this->tables_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .gorm.GORM_PB_Ret_Code RetCode = 1;
  if (this->has_retcode()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *retcode_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GORM_PB_BATCH_GET_RSP::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gorm.GORM_PB_BATCH_GET_RSP)
  GOOGLE_DCHECK_NE(&from, this);
  const GORM_PB_BATCH_GET_RSP* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GORM_PB_BATCH_GET_RSP>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gorm.GORM_PB_BATCH_GET_RSP)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gorm.GORM_PB_BATCH_GET_RSP)
    MergeFrom(*source);
  }
}

void GORM_PB_BATCH_GET_RSP::MergeFrom(const GORM_PB_BATCH_GET_RSP& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gorm.GORM_PB_BATCH_GET_RSP)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tables_.MergeFrom(from.tables_);
  if (from.has_retcode()) {
    _internal_mutable_retcode()->::gorm::GORM_PB_Ret_Code::MergeFrom(from._internal_retcode());
  }
}

void GORM_PB_BATCH_GET_RSP::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gorm.GORM_PB_BATCH_GET_RSP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GORM_PB_BATCH_GET_RSP::CopyFrom(const GORM_PB_BATCH_GET_RSP& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gorm.GORM_PB_BATCH_GET_RSP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GORM_PB_BATCH_GET_RSP::IsInitialized() const {
  return true;
}

void GORM_PB_BATCH_GET_RSP::InternalSwap(GORM_PB_BATCH_GET_RSP* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  tables_.InternalSwap(&other->tables_);
  swap(retcode_, other->retcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GORM_PB_BATCH_GET_RSP::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GORM_PB_INCREASE_REQ::InitAsDefaultInstance() {
  ::gorm::_GORM_PB_INCREASE_REQ_default_instance_._instance.get_mutable()->header_ = const_cast< ::gorm::GORM_PB_REQ_HEADER*>(
      ::gorm::GORM_PB_REQ_HEADER::internal_default_instance());
}
class GORM_PB_INCREASE_REQ::_Internal {
 public:
  static const ::gorm::GORM_PB_REQ_HEADER& header(const GORM_PB_INCREASE_REQ* msg);
};

const ::gorm::GORM_PB_REQ_HEADER&
GORM_PB_INCREASE_REQ::_Internal::header(const GORM_PB_INCREASE_REQ* msg) {
  return *msg->header_;
}
void GORM_PB_INCREASE_REQ::clear_tables() {
  tables_.Clear();
}
GORM_PB_INCREASE_REQ::GORM_PB_INCREASE_REQ(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  tables_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gorm.GORM_PB_INCREASE_REQ)
}
GORM_PB_INCREASE_REQ::GORM_PB_INCREASE_REQ(const GORM_PB_INCREASE_REQ& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      tables_(from.tables_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  pluscolumns_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_pluscolumns().empty()) {
    pluscolumns_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_pluscolumns(),
      GetArena());
  }
  minuscolumns_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_minuscolumns().empty()) {
    minuscolumns_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_minuscolumns(),
      GetArena());
  }
  if (from._internal_has_header()) {
    header_ = new ::gorm::GORM_PB_REQ_HEADER(*from.header_);
  } else {
    header_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:gorm.GORM_PB_INCREASE_REQ)
}

void GORM_PB_INCREASE_REQ::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GORM_PB_INCREASE_REQ_gorm_5fpb_5fproto_2eproto.base);
  pluscolumns_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  minuscolumns_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  header_ = nullptr;
}

GORM_PB_INCREASE_REQ::~GORM_PB_INCREASE_REQ() {
  // @@protoc_insertion_point(destructor:gorm.GORM_PB_INCREASE_REQ)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GORM_PB_INCREASE_REQ::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  pluscolumns_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  minuscolumns_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete header_;
}

void GORM_PB_INCREASE_REQ::ArenaDtor(void* object) {
  GORM_PB_INCREASE_REQ* _this = reinterpret_cast< GORM_PB_INCREASE_REQ* >(object);
  (void)_this;
}
void GORM_PB_INCREASE_REQ::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GORM_PB_INCREASE_REQ::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GORM_PB_INCREASE_REQ& GORM_PB_INCREASE_REQ::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GORM_PB_INCREASE_REQ_gorm_5fpb_5fproto_2eproto.base);
  return *internal_default_instance();
}


void GORM_PB_INCREASE_REQ::Clear() {
// @@protoc_insertion_point(message_clear_start:gorm.GORM_PB_INCREASE_REQ)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tables_.Clear();
  pluscolumns_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  minuscolumns_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GORM_PB_INCREASE_REQ::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .gorm.GORM_PB_REQ_HEADER Header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .gorm.GORM_PB_TABLE Tables = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_tables(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // string PlusColumns = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_pluscolumns();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gorm.GORM_PB_INCREASE_REQ.PlusColumns"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string MinusColumns = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_minuscolumns();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "gorm.GORM_PB_INCREASE_REQ.MinusColumns"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GORM_PB_INCREASE_REQ::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gorm.GORM_PB_INCREASE_REQ)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gorm.GORM_PB_REQ_HEADER Header = 1;
  if (this->has_header()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::header(this), target, stream);
  }

  // repeated .gorm.GORM_PB_TABLE Tables = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_tables_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_tables(i), target, stream);
  }

  // string PlusColumns = 3;
  if (this->pluscolumns().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_pluscolumns().data(), static_cast<int>(this->_internal_pluscolumns().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gorm.GORM_PB_INCREASE_REQ.PlusColumns");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_pluscolumns(), target);
  }

  // string MinusColumns = 4;
  if (this->minuscolumns().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_minuscolumns().data(), static_cast<int>(this->_internal_minuscolumns().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "gorm.GORM_PB_INCREASE_REQ.MinusColumns");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_minuscolumns(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gorm.GORM_PB_INCREASE_REQ)
  return target;
}

size_t GORM_PB_INCREASE_REQ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gorm.GORM_PB_INCREASE_REQ)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .gorm.GORM_PB_TABLE Tables = 2;
  total_size += 1UL * this->_internal_tables_size();
  for (const auto& msg : this->tables_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string PlusColumns = 3;
  if (this->pluscolumns().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_pluscolumns());
  }

  // string MinusColumns = 4;
  if (this->minuscolumns().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_minuscolumns());
  }

  // .gorm.GORM_PB_REQ_HEADER Header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *header_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GORM_PB_INCREASE_REQ::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gorm.GORM_PB_INCREASE_REQ)
  GOOGLE_DCHECK_NE(&from, this);
  const GORM_PB_INCREASE_REQ* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GORM_PB_INCREASE_REQ>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gorm.GORM_PB_INCREASE_REQ)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gorm.GORM_PB_INCREASE_REQ)
    MergeFrom(*source);
  }
}

void GORM_PB_INCREASE_REQ::MergeFrom(const GORM_PB_INCREASE_REQ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gorm.GORM_PB_INCREASE_REQ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tables_.MergeFrom(from.tables_);
  if (from.pluscolumns().size() > 0) {
    _internal_set_pluscolumns(from._internal_pluscolumns());
  }
  if (from.minuscolumns().size() > 0) {
    _internal_set_minuscolumns(from._internal_minuscolumns());
  }
  if (from.has_header()) {
    _internal_mutable_header()->::gorm::GORM_PB_REQ_HEADER::MergeFrom(from._internal_header());
  }
}

void GORM_PB_INCREASE_REQ::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gorm.GORM_PB_INCREASE_REQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GORM_PB_INCREASE_REQ::CopyFrom(const GORM_PB_INCREASE_REQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gorm.GORM_PB_INCREASE_REQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GORM_PB_INCREASE_REQ::IsInitialized() const {
  return true;
}

void GORM_PB_INCREASE_REQ::InternalSwap(GORM_PB_INCREASE_REQ* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  tables_.InternalSwap(&other->tables_);
  pluscolumns_.Swap(&other->pluscolumns_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  minuscolumns_.Swap(&other->minuscolumns_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(header_, other->header_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GORM_PB_INCREASE_REQ::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GORM_PB_INCREASE_RSP::InitAsDefaultInstance() {
  ::gorm::_GORM_PB_INCREASE_RSP_default_instance_._instance.get_mutable()->retcode_ = const_cast< ::gorm::GORM_PB_Ret_Code*>(
      ::gorm::GORM_PB_Ret_Code::internal_default_instance());
}
class GORM_PB_INCREASE_RSP::_Internal {
 public:
  static const ::gorm::GORM_PB_Ret_Code& retcode(const GORM_PB_INCREASE_RSP* msg);
};

const ::gorm::GORM_PB_Ret_Code&
GORM_PB_INCREASE_RSP::_Internal::retcode(const GORM_PB_INCREASE_RSP* msg) {
  return *msg->retcode_;
}
void GORM_PB_INCREASE_RSP::clear_tables() {
  tables_.Clear();
}
GORM_PB_INCREASE_RSP::GORM_PB_INCREASE_RSP(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  tables_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gorm.GORM_PB_INCREASE_RSP)
}
GORM_PB_INCREASE_RSP::GORM_PB_INCREASE_RSP(const GORM_PB_INCREASE_RSP& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      tables_(from.tables_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_retcode()) {
    retcode_ = new ::gorm::GORM_PB_Ret_Code(*from.retcode_);
  } else {
    retcode_ = nullptr;
  }
  affectednum_ = from.affectednum_;
  // @@protoc_insertion_point(copy_constructor:gorm.GORM_PB_INCREASE_RSP)
}

void GORM_PB_INCREASE_RSP::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GORM_PB_INCREASE_RSP_gorm_5fpb_5fproto_2eproto.base);
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&affectednum_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(affectednum_));
}

GORM_PB_INCREASE_RSP::~GORM_PB_INCREASE_RSP() {
  // @@protoc_insertion_point(destructor:gorm.GORM_PB_INCREASE_RSP)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GORM_PB_INCREASE_RSP::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete retcode_;
}

void GORM_PB_INCREASE_RSP::ArenaDtor(void* object) {
  GORM_PB_INCREASE_RSP* _this = reinterpret_cast< GORM_PB_INCREASE_RSP* >(object);
  (void)_this;
}
void GORM_PB_INCREASE_RSP::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GORM_PB_INCREASE_RSP::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GORM_PB_INCREASE_RSP& GORM_PB_INCREASE_RSP::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GORM_PB_INCREASE_RSP_gorm_5fpb_5fproto_2eproto.base);
  return *internal_default_instance();
}


void GORM_PB_INCREASE_RSP::Clear() {
// @@protoc_insertion_point(message_clear_start:gorm.GORM_PB_INCREASE_RSP)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tables_.Clear();
  if (GetArena() == nullptr && retcode_ != nullptr) {
    delete retcode_;
  }
  retcode_ = nullptr;
  affectednum_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GORM_PB_INCREASE_RSP::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .gorm.GORM_PB_Ret_Code RetCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_retcode(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .gorm.GORM_PB_TABLE Tables = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_tables(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // int32 AffectedNum = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          affectednum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GORM_PB_INCREASE_RSP::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gorm.GORM_PB_INCREASE_RSP)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gorm.GORM_PB_Ret_Code RetCode = 1;
  if (this->has_retcode()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::retcode(this), target, stream);
  }

  // repeated .gorm.GORM_PB_TABLE Tables = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_tables_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_tables(i), target, stream);
  }

  // int32 AffectedNum = 3;
  if (this->affectednum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_affectednum(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gorm.GORM_PB_INCREASE_RSP)
  return target;
}

size_t GORM_PB_INCREASE_RSP::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gorm.GORM_PB_INCREASE_RSP)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .gorm.GORM_PB_TABLE Tables = 2;
  total_size += 1UL * this->_internal_tables_size();
  for (const auto& msg : this->tables_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .gorm.GORM_PB_Ret_Code RetCode = 1;
  if (this->has_retcode()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *retcode_);
  }

  // int32 AffectedNum = 3;
  if (this->affectednum() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_affectednum());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GORM_PB_INCREASE_RSP::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gorm.GORM_PB_INCREASE_RSP)
  GOOGLE_DCHECK_NE(&from, this);
  const GORM_PB_INCREASE_RSP* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GORM_PB_INCREASE_RSP>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gorm.GORM_PB_INCREASE_RSP)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gorm.GORM_PB_INCREASE_RSP)
    MergeFrom(*source);
  }
}

void GORM_PB_INCREASE_RSP::MergeFrom(const GORM_PB_INCREASE_RSP& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gorm.GORM_PB_INCREASE_RSP)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tables_.MergeFrom(from.tables_);
  if (from.has_retcode()) {
    _internal_mutable_retcode()->::gorm::GORM_PB_Ret_Code::MergeFrom(from._internal_retcode());
  }
  if (from.affectednum() != 0) {
    _internal_set_affectednum(from._internal_affectednum());
  }
}

void GORM_PB_INCREASE_RSP::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gorm.GORM_PB_INCREASE_RSP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GORM_PB_INCREASE_RSP::CopyFrom(const GORM_PB_INCREASE_RSP& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gorm.GORM_PB_INCREASE_RSP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GORM_PB_INCREASE_RSP::IsInitialized() const {
  return true;
}

void GORM_PB_INCREASE_RSP::InternalSwap(GORM_PB_INCREASE_RSP* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  tables_.InternalSwap(&other->tables_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GORM_PB_INCREASE_RSP, affectednum_)
      + sizeof(GORM_PB_INCREASE_RSP::affectednum_)
      - PROTOBUF_FIELD_OFFSET(GORM_PB_INCREASE_RSP, retcode_)>(
          reinterpret_cast<char*>(&retcode_),
          reinterpret_cast<char*>(&other->retcode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GORM_PB_INCREASE_RSP::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GORM_PB_DELETE_REQ::InitAsDefaultInstance() {
  ::gorm::_GORM_PB_DELETE_REQ_default_instance_._instance.get_mutable()->header_ = const_cast< ::gorm::GORM_PB_REQ_HEADER*>(
      ::gorm::GORM_PB_REQ_HEADER::internal_default_instance());
  ::gorm::_GORM_PB_DELETE_REQ_default_instance_._instance.get_mutable()->table_ = const_cast< ::gorm::GORM_PB_TABLE*>(
      ::gorm::GORM_PB_TABLE::internal_default_instance());
}
class GORM_PB_DELETE_REQ::_Internal {
 public:
  static const ::gorm::GORM_PB_REQ_HEADER& header(const GORM_PB_DELETE_REQ* msg);
  static const ::gorm::GORM_PB_TABLE& table(const GORM_PB_DELETE_REQ* msg);
};

const ::gorm::GORM_PB_REQ_HEADER&
GORM_PB_DELETE_REQ::_Internal::header(const GORM_PB_DELETE_REQ* msg) {
  return *msg->header_;
}
const ::gorm::GORM_PB_TABLE&
GORM_PB_DELETE_REQ::_Internal::table(const GORM_PB_DELETE_REQ* msg) {
  return *msg->table_;
}
void GORM_PB_DELETE_REQ::clear_table() {
  if (GetArena() == nullptr && table_ != nullptr) {
    delete table_;
  }
  table_ = nullptr;
}
GORM_PB_DELETE_REQ::GORM_PB_DELETE_REQ(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gorm.GORM_PB_DELETE_REQ)
}
GORM_PB_DELETE_REQ::GORM_PB_DELETE_REQ(const GORM_PB_DELETE_REQ& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    header_ = new ::gorm::GORM_PB_REQ_HEADER(*from.header_);
  } else {
    header_ = nullptr;
  }
  if (from._internal_has_table()) {
    table_ = new ::gorm::GORM_PB_TABLE(*from.table_);
  } else {
    table_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:gorm.GORM_PB_DELETE_REQ)
}

void GORM_PB_DELETE_REQ::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GORM_PB_DELETE_REQ_gorm_5fpb_5fproto_2eproto.base);
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&table_) -
      reinterpret_cast<char*>(&header_)) + sizeof(table_));
}

GORM_PB_DELETE_REQ::~GORM_PB_DELETE_REQ() {
  // @@protoc_insertion_point(destructor:gorm.GORM_PB_DELETE_REQ)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GORM_PB_DELETE_REQ::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete table_;
}

void GORM_PB_DELETE_REQ::ArenaDtor(void* object) {
  GORM_PB_DELETE_REQ* _this = reinterpret_cast< GORM_PB_DELETE_REQ* >(object);
  (void)_this;
}
void GORM_PB_DELETE_REQ::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GORM_PB_DELETE_REQ::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GORM_PB_DELETE_REQ& GORM_PB_DELETE_REQ::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GORM_PB_DELETE_REQ_gorm_5fpb_5fproto_2eproto.base);
  return *internal_default_instance();
}


void GORM_PB_DELETE_REQ::Clear() {
// @@protoc_insertion_point(message_clear_start:gorm.GORM_PB_DELETE_REQ)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  if (GetArena() == nullptr && table_ != nullptr) {
    delete table_;
  }
  table_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GORM_PB_DELETE_REQ::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .gorm.GORM_PB_REQ_HEADER Header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .gorm.GORM_PB_TABLE Table = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_table(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GORM_PB_DELETE_REQ::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gorm.GORM_PB_DELETE_REQ)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gorm.GORM_PB_REQ_HEADER Header = 1;
  if (this->has_header()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::header(this), target, stream);
  }

  // .gorm.GORM_PB_TABLE Table = 2;
  if (this->has_table()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::table(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gorm.GORM_PB_DELETE_REQ)
  return target;
}

size_t GORM_PB_DELETE_REQ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gorm.GORM_PB_DELETE_REQ)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .gorm.GORM_PB_REQ_HEADER Header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .gorm.GORM_PB_TABLE Table = 2;
  if (this->has_table()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *table_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GORM_PB_DELETE_REQ::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gorm.GORM_PB_DELETE_REQ)
  GOOGLE_DCHECK_NE(&from, this);
  const GORM_PB_DELETE_REQ* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GORM_PB_DELETE_REQ>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gorm.GORM_PB_DELETE_REQ)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gorm.GORM_PB_DELETE_REQ)
    MergeFrom(*source);
  }
}

void GORM_PB_DELETE_REQ::MergeFrom(const GORM_PB_DELETE_REQ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gorm.GORM_PB_DELETE_REQ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_header()) {
    _internal_mutable_header()->::gorm::GORM_PB_REQ_HEADER::MergeFrom(from._internal_header());
  }
  if (from.has_table()) {
    _internal_mutable_table()->::gorm::GORM_PB_TABLE::MergeFrom(from._internal_table());
  }
}

void GORM_PB_DELETE_REQ::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gorm.GORM_PB_DELETE_REQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GORM_PB_DELETE_REQ::CopyFrom(const GORM_PB_DELETE_REQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gorm.GORM_PB_DELETE_REQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GORM_PB_DELETE_REQ::IsInitialized() const {
  return true;
}

void GORM_PB_DELETE_REQ::InternalSwap(GORM_PB_DELETE_REQ* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GORM_PB_DELETE_REQ, table_)
      + sizeof(GORM_PB_DELETE_REQ::table_)
      - PROTOBUF_FIELD_OFFSET(GORM_PB_DELETE_REQ, header_)>(
          reinterpret_cast<char*>(&header_),
          reinterpret_cast<char*>(&other->header_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GORM_PB_DELETE_REQ::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GORM_PB_DELETE_RSP::InitAsDefaultInstance() {
  ::gorm::_GORM_PB_DELETE_RSP_default_instance_._instance.get_mutable()->retcode_ = const_cast< ::gorm::GORM_PB_Ret_Code*>(
      ::gorm::GORM_PB_Ret_Code::internal_default_instance());
}
class GORM_PB_DELETE_RSP::_Internal {
 public:
  static const ::gorm::GORM_PB_Ret_Code& retcode(const GORM_PB_DELETE_RSP* msg);
};

const ::gorm::GORM_PB_Ret_Code&
GORM_PB_DELETE_RSP::_Internal::retcode(const GORM_PB_DELETE_RSP* msg) {
  return *msg->retcode_;
}
GORM_PB_DELETE_RSP::GORM_PB_DELETE_RSP(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gorm.GORM_PB_DELETE_RSP)
}
GORM_PB_DELETE_RSP::GORM_PB_DELETE_RSP(const GORM_PB_DELETE_RSP& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_retcode()) {
    retcode_ = new ::gorm::GORM_PB_Ret_Code(*from.retcode_);
  } else {
    retcode_ = nullptr;
  }
  affectednum_ = from.affectednum_;
  // @@protoc_insertion_point(copy_constructor:gorm.GORM_PB_DELETE_RSP)
}

void GORM_PB_DELETE_RSP::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GORM_PB_DELETE_RSP_gorm_5fpb_5fproto_2eproto.base);
  ::memset(&retcode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&affectednum_) -
      reinterpret_cast<char*>(&retcode_)) + sizeof(affectednum_));
}

GORM_PB_DELETE_RSP::~GORM_PB_DELETE_RSP() {
  // @@protoc_insertion_point(destructor:gorm.GORM_PB_DELETE_RSP)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GORM_PB_DELETE_RSP::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete retcode_;
}

void GORM_PB_DELETE_RSP::ArenaDtor(void* object) {
  GORM_PB_DELETE_RSP* _this = reinterpret_cast< GORM_PB_DELETE_RSP* >(object);
  (void)_this;
}
void GORM_PB_DELETE_RSP::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GORM_PB_DELETE_RSP::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GORM_PB_DELETE_RSP& GORM_PB_DELETE_RSP::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GORM_PB_DELETE_RSP_gorm_5fpb_5fproto_2eproto.base);
  return *internal_default_instance();
}


void GORM_PB_DELETE_RSP::Clear() {
// @@protoc_insertion_point(message_clear_start:gorm.GORM_PB_DELETE_RSP)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && retcode_ != nullptr) {
    delete retcode_;
  }
  retcode_ = nullptr;
  affectednum_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GORM_PB_DELETE_RSP::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .gorm.GORM_PB_Ret_Code RetCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_retcode(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 AffectedNum = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          affectednum_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GORM_PB_DELETE_RSP::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gorm.GORM_PB_DELETE_RSP)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gorm.GORM_PB_Ret_Code RetCode = 1;
  if (this->has_retcode()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::retcode(this), target, stream);
  }

  // int32 AffectedNum = 2;
  if (this->affectednum() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_affectednum(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gorm.GORM_PB_DELETE_RSP)
  return target;
}

size_t GORM_PB_DELETE_RSP::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gorm.GORM_PB_DELETE_RSP)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .gorm.GORM_PB_Ret_Code RetCode = 1;
  if (this->has_retcode()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *retcode_);
  }

  // int32 AffectedNum = 2;
  if (this->affectednum() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_affectednum());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GORM_PB_DELETE_RSP::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gorm.GORM_PB_DELETE_RSP)
  GOOGLE_DCHECK_NE(&from, this);
  const GORM_PB_DELETE_RSP* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GORM_PB_DELETE_RSP>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gorm.GORM_PB_DELETE_RSP)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gorm.GORM_PB_DELETE_RSP)
    MergeFrom(*source);
  }
}

void GORM_PB_DELETE_RSP::MergeFrom(const GORM_PB_DELETE_RSP& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gorm.GORM_PB_DELETE_RSP)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_retcode()) {
    _internal_mutable_retcode()->::gorm::GORM_PB_Ret_Code::MergeFrom(from._internal_retcode());
  }
  if (from.affectednum() != 0) {
    _internal_set_affectednum(from._internal_affectednum());
  }
}

void GORM_PB_DELETE_RSP::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gorm.GORM_PB_DELETE_RSP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GORM_PB_DELETE_RSP::CopyFrom(const GORM_PB_DELETE_RSP& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gorm.GORM_PB_DELETE_RSP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GORM_PB_DELETE_RSP::IsInitialized() const {
  return true;
}

void GORM_PB_DELETE_RSP::InternalSwap(GORM_PB_DELETE_RSP* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GORM_PB_DELETE_RSP, affectednum_)
      + sizeof(GORM_PB_DELETE_RSP::affectednum_)
      - PROTOBUF_FIELD_OFFSET(GORM_PB_DELETE_RSP, retcode_)>(
          reinterpret_cast<char*>(&retcode_),
          reinterpret_cast<char*>(&other->retcode_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GORM_PB_DELETE_RSP::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GORM_PB_GET_BY_PARTKEY_REQ::InitAsDefaultInstance() {
  ::gorm::_GORM_PB_GET_BY_PARTKEY_REQ_default_instance_._instance.get_mutable()->header_ = const_cast< ::gorm::GORM_PB_REQ_HEADER*>(
      ::gorm::GORM_PB_REQ_HEADER::internal_default_instance());
}
class GORM_PB_GET_BY_PARTKEY_REQ::_Internal {
 public:
  static const ::gorm::GORM_PB_REQ_HEADER& header(const GORM_PB_GET_BY_PARTKEY_REQ* msg);
};

const ::gorm::GORM_PB_REQ_HEADER&
GORM_PB_GET_BY_PARTKEY_REQ::_Internal::header(const GORM_PB_GET_BY_PARTKEY_REQ* msg) {
  return *msg->header_;
}
void GORM_PB_GET_BY_PARTKEY_REQ::clear_tables() {
  tables_.Clear();
}
GORM_PB_GET_BY_PARTKEY_REQ::GORM_PB_GET_BY_PARTKEY_REQ(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  tables_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gorm.GORM_PB_GET_BY_PARTKEY_REQ)
}
GORM_PB_GET_BY_PARTKEY_REQ::GORM_PB_GET_BY_PARTKEY_REQ(const GORM_PB_GET_BY_PARTKEY_REQ& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      tables_(from.tables_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    header_ = new ::gorm::GORM_PB_REQ_HEADER(*from.header_);
  } else {
    header_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:gorm.GORM_PB_GET_BY_PARTKEY_REQ)
}

void GORM_PB_GET_BY_PARTKEY_REQ::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GORM_PB_GET_BY_PARTKEY_REQ_gorm_5fpb_5fproto_2eproto.base);
  header_ = nullptr;
}

GORM_PB_GET_BY_PARTKEY_REQ::~GORM_PB_GET_BY_PARTKEY_REQ() {
  // @@protoc_insertion_point(destructor:gorm.GORM_PB_GET_BY_PARTKEY_REQ)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GORM_PB_GET_BY_PARTKEY_REQ::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete header_;
}

void GORM_PB_GET_BY_PARTKEY_REQ::ArenaDtor(void* object) {
  GORM_PB_GET_BY_PARTKEY_REQ* _this = reinterpret_cast< GORM_PB_GET_BY_PARTKEY_REQ* >(object);
  (void)_this;
}
void GORM_PB_GET_BY_PARTKEY_REQ::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GORM_PB_GET_BY_PARTKEY_REQ::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GORM_PB_GET_BY_PARTKEY_REQ& GORM_PB_GET_BY_PARTKEY_REQ::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GORM_PB_GET_BY_PARTKEY_REQ_gorm_5fpb_5fproto_2eproto.base);
  return *internal_default_instance();
}


void GORM_PB_GET_BY_PARTKEY_REQ::Clear() {
// @@protoc_insertion_point(message_clear_start:gorm.GORM_PB_GET_BY_PARTKEY_REQ)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tables_.Clear();
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GORM_PB_GET_BY_PARTKEY_REQ::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .gorm.GORM_PB_REQ_HEADER Header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .gorm.GORM_PB_TABLE Tables = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_tables(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GORM_PB_GET_BY_PARTKEY_REQ::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gorm.GORM_PB_GET_BY_PARTKEY_REQ)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gorm.GORM_PB_REQ_HEADER Header = 1;
  if (this->has_header()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::header(this), target, stream);
  }

  // repeated .gorm.GORM_PB_TABLE Tables = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_tables_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_tables(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gorm.GORM_PB_GET_BY_PARTKEY_REQ)
  return target;
}

size_t GORM_PB_GET_BY_PARTKEY_REQ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gorm.GORM_PB_GET_BY_PARTKEY_REQ)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .gorm.GORM_PB_TABLE Tables = 2;
  total_size += 1UL * this->_internal_tables_size();
  for (const auto& msg : this->tables_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .gorm.GORM_PB_REQ_HEADER Header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *header_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GORM_PB_GET_BY_PARTKEY_REQ::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gorm.GORM_PB_GET_BY_PARTKEY_REQ)
  GOOGLE_DCHECK_NE(&from, this);
  const GORM_PB_GET_BY_PARTKEY_REQ* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GORM_PB_GET_BY_PARTKEY_REQ>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gorm.GORM_PB_GET_BY_PARTKEY_REQ)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gorm.GORM_PB_GET_BY_PARTKEY_REQ)
    MergeFrom(*source);
  }
}

void GORM_PB_GET_BY_PARTKEY_REQ::MergeFrom(const GORM_PB_GET_BY_PARTKEY_REQ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gorm.GORM_PB_GET_BY_PARTKEY_REQ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tables_.MergeFrom(from.tables_);
  if (from.has_header()) {
    _internal_mutable_header()->::gorm::GORM_PB_REQ_HEADER::MergeFrom(from._internal_header());
  }
}

void GORM_PB_GET_BY_PARTKEY_REQ::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gorm.GORM_PB_GET_BY_PARTKEY_REQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GORM_PB_GET_BY_PARTKEY_REQ::CopyFrom(const GORM_PB_GET_BY_PARTKEY_REQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gorm.GORM_PB_GET_BY_PARTKEY_REQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GORM_PB_GET_BY_PARTKEY_REQ::IsInitialized() const {
  return true;
}

void GORM_PB_GET_BY_PARTKEY_REQ::InternalSwap(GORM_PB_GET_BY_PARTKEY_REQ* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  tables_.InternalSwap(&other->tables_);
  swap(header_, other->header_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GORM_PB_GET_BY_PARTKEY_REQ::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GORM_PB_GET_BY_PARTKEY_RSP::InitAsDefaultInstance() {
  ::gorm::_GORM_PB_GET_BY_PARTKEY_RSP_default_instance_._instance.get_mutable()->retcode_ = const_cast< ::gorm::GORM_PB_Ret_Code*>(
      ::gorm::GORM_PB_Ret_Code::internal_default_instance());
}
class GORM_PB_GET_BY_PARTKEY_RSP::_Internal {
 public:
  static const ::gorm::GORM_PB_Ret_Code& retcode(const GORM_PB_GET_BY_PARTKEY_RSP* msg);
};

const ::gorm::GORM_PB_Ret_Code&
GORM_PB_GET_BY_PARTKEY_RSP::_Internal::retcode(const GORM_PB_GET_BY_PARTKEY_RSP* msg) {
  return *msg->retcode_;
}
void GORM_PB_GET_BY_PARTKEY_RSP::clear_tables() {
  tables_.Clear();
}
GORM_PB_GET_BY_PARTKEY_RSP::GORM_PB_GET_BY_PARTKEY_RSP(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  tables_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gorm.GORM_PB_GET_BY_PARTKEY_RSP)
}
GORM_PB_GET_BY_PARTKEY_RSP::GORM_PB_GET_BY_PARTKEY_RSP(const GORM_PB_GET_BY_PARTKEY_RSP& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      tables_(from.tables_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_retcode()) {
    retcode_ = new ::gorm::GORM_PB_Ret_Code(*from.retcode_);
  } else {
    retcode_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:gorm.GORM_PB_GET_BY_PARTKEY_RSP)
}

void GORM_PB_GET_BY_PARTKEY_RSP::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GORM_PB_GET_BY_PARTKEY_RSP_gorm_5fpb_5fproto_2eproto.base);
  retcode_ = nullptr;
}

GORM_PB_GET_BY_PARTKEY_RSP::~GORM_PB_GET_BY_PARTKEY_RSP() {
  // @@protoc_insertion_point(destructor:gorm.GORM_PB_GET_BY_PARTKEY_RSP)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GORM_PB_GET_BY_PARTKEY_RSP::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete retcode_;
}

void GORM_PB_GET_BY_PARTKEY_RSP::ArenaDtor(void* object) {
  GORM_PB_GET_BY_PARTKEY_RSP* _this = reinterpret_cast< GORM_PB_GET_BY_PARTKEY_RSP* >(object);
  (void)_this;
}
void GORM_PB_GET_BY_PARTKEY_RSP::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GORM_PB_GET_BY_PARTKEY_RSP::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GORM_PB_GET_BY_PARTKEY_RSP& GORM_PB_GET_BY_PARTKEY_RSP::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GORM_PB_GET_BY_PARTKEY_RSP_gorm_5fpb_5fproto_2eproto.base);
  return *internal_default_instance();
}


void GORM_PB_GET_BY_PARTKEY_RSP::Clear() {
// @@protoc_insertion_point(message_clear_start:gorm.GORM_PB_GET_BY_PARTKEY_RSP)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tables_.Clear();
  if (GetArena() == nullptr && retcode_ != nullptr) {
    delete retcode_;
  }
  retcode_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GORM_PB_GET_BY_PARTKEY_RSP::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .gorm.GORM_PB_Ret_Code RetCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_retcode(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .gorm.GORM_PB_TABLE Tables = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_tables(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GORM_PB_GET_BY_PARTKEY_RSP::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gorm.GORM_PB_GET_BY_PARTKEY_RSP)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gorm.GORM_PB_Ret_Code RetCode = 1;
  if (this->has_retcode()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::retcode(this), target, stream);
  }

  // repeated .gorm.GORM_PB_TABLE Tables = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_tables_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_tables(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gorm.GORM_PB_GET_BY_PARTKEY_RSP)
  return target;
}

size_t GORM_PB_GET_BY_PARTKEY_RSP::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gorm.GORM_PB_GET_BY_PARTKEY_RSP)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .gorm.GORM_PB_TABLE Tables = 2;
  total_size += 1UL * this->_internal_tables_size();
  for (const auto& msg : this->tables_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .gorm.GORM_PB_Ret_Code RetCode = 1;
  if (this->has_retcode()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *retcode_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GORM_PB_GET_BY_PARTKEY_RSP::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gorm.GORM_PB_GET_BY_PARTKEY_RSP)
  GOOGLE_DCHECK_NE(&from, this);
  const GORM_PB_GET_BY_PARTKEY_RSP* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GORM_PB_GET_BY_PARTKEY_RSP>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gorm.GORM_PB_GET_BY_PARTKEY_RSP)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gorm.GORM_PB_GET_BY_PARTKEY_RSP)
    MergeFrom(*source);
  }
}

void GORM_PB_GET_BY_PARTKEY_RSP::MergeFrom(const GORM_PB_GET_BY_PARTKEY_RSP& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gorm.GORM_PB_GET_BY_PARTKEY_RSP)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tables_.MergeFrom(from.tables_);
  if (from.has_retcode()) {
    _internal_mutable_retcode()->::gorm::GORM_PB_Ret_Code::MergeFrom(from._internal_retcode());
  }
}

void GORM_PB_GET_BY_PARTKEY_RSP::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gorm.GORM_PB_GET_BY_PARTKEY_RSP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GORM_PB_GET_BY_PARTKEY_RSP::CopyFrom(const GORM_PB_GET_BY_PARTKEY_RSP& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gorm.GORM_PB_GET_BY_PARTKEY_RSP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GORM_PB_GET_BY_PARTKEY_RSP::IsInitialized() const {
  return true;
}

void GORM_PB_GET_BY_PARTKEY_RSP::InternalSwap(GORM_PB_GET_BY_PARTKEY_RSP* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  tables_.InternalSwap(&other->tables_);
  swap(retcode_, other->retcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GORM_PB_GET_BY_PARTKEY_RSP::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ::InitAsDefaultInstance() {
  ::gorm::_GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ_default_instance_._instance.get_mutable()->header_ = const_cast< ::gorm::GORM_PB_REQ_HEADER*>(
      ::gorm::GORM_PB_REQ_HEADER::internal_default_instance());
}
class GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ::_Internal {
 public:
  static const ::gorm::GORM_PB_REQ_HEADER& header(const GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ* msg);
};

const ::gorm::GORM_PB_REQ_HEADER&
GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ::_Internal::header(const GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ* msg) {
  return *msg->header_;
}
void GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ::clear_tables() {
  tables_.Clear();
}
GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ::GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  tables_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ)
}
GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ::GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ(const GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      tables_(from.tables_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_header()) {
    header_ = new ::gorm::GORM_PB_REQ_HEADER(*from.header_);
  } else {
    header_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ)
}

void GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ_gorm_5fpb_5fproto_2eproto.base);
  header_ = nullptr;
}

GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ::~GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ() {
  // @@protoc_insertion_point(destructor:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete header_;
}

void GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ::ArenaDtor(void* object) {
  GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ* _this = reinterpret_cast< GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ* >(object);
  (void)_this;
}
void GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ& GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ_gorm_5fpb_5fproto_2eproto.base);
  return *internal_default_instance();
}


void GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ::Clear() {
// @@protoc_insertion_point(message_clear_start:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tables_.Clear();
  if (GetArena() == nullptr && header_ != nullptr) {
    delete header_;
  }
  header_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .gorm.GORM_PB_REQ_HEADER Header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .gorm.GORM_PB_TABLE Tables = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_tables(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gorm.GORM_PB_REQ_HEADER Header = 1;
  if (this->has_header()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::header(this), target, stream);
  }

  // repeated .gorm.GORM_PB_TABLE Tables = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_tables_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_tables(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ)
  return target;
}

size_t GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .gorm.GORM_PB_TABLE Tables = 2;
  total_size += 1UL * this->_internal_tables_size();
  for (const auto& msg : this->tables_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .gorm.GORM_PB_REQ_HEADER Header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *header_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ)
  GOOGLE_DCHECK_NE(&from, this);
  const GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ)
    MergeFrom(*source);
  }
}

void GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ::MergeFrom(const GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tables_.MergeFrom(from.tables_);
  if (from.has_header()) {
    _internal_mutable_header()->::gorm::GORM_PB_REQ_HEADER::MergeFrom(from._internal_header());
  }
}

void GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ::CopyFrom(const GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ::IsInitialized() const {
  return true;
}

void GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ::InternalSwap(GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  tables_.InternalSwap(&other->tables_);
  swap(header_, other->header_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP::InitAsDefaultInstance() {
  ::gorm::_GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP_default_instance_._instance.get_mutable()->retcode_ = const_cast< ::gorm::GORM_PB_Ret_Code*>(
      ::gorm::GORM_PB_Ret_Code::internal_default_instance());
}
class GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP::_Internal {
 public:
  static const ::gorm::GORM_PB_Ret_Code& retcode(const GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP* msg);
};

const ::gorm::GORM_PB_Ret_Code&
GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP::_Internal::retcode(const GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP* msg) {
  return *msg->retcode_;
}
void GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP::clear_tables() {
  tables_.Clear();
}
GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP::GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  tables_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP)
}
GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP::GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP(const GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      tables_(from.tables_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_retcode()) {
    retcode_ = new ::gorm::GORM_PB_Ret_Code(*from.retcode_);
  } else {
    retcode_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP)
}

void GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP_gorm_5fpb_5fproto_2eproto.base);
  retcode_ = nullptr;
}

GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP::~GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP() {
  // @@protoc_insertion_point(destructor:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete retcode_;
}

void GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP::ArenaDtor(void* object) {
  GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP* _this = reinterpret_cast< GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP* >(object);
  (void)_this;
}
void GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP& GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP_gorm_5fpb_5fproto_2eproto.base);
  return *internal_default_instance();
}


void GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP::Clear() {
// @@protoc_insertion_point(message_clear_start:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tables_.Clear();
  if (GetArena() == nullptr && retcode_ != nullptr) {
    delete retcode_;
  }
  retcode_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .gorm.GORM_PB_Ret_Code RetCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_retcode(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .gorm.GORM_PB_TABLE Tables = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_tables(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .gorm.GORM_PB_Ret_Code RetCode = 1;
  if (this->has_retcode()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::retcode(this), target, stream);
  }

  // repeated .gorm.GORM_PB_TABLE Tables = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_tables_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_tables(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP)
  return target;
}

size_t GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .gorm.GORM_PB_TABLE Tables = 2;
  total_size += 1UL * this->_internal_tables_size();
  for (const auto& msg : this->tables_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .gorm.GORM_PB_Ret_Code RetCode = 1;
  if (this->has_retcode()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *retcode_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP)
  GOOGLE_DCHECK_NE(&from, this);
  const GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP)
    MergeFrom(*source);
  }
}

void GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP::MergeFrom(const GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tables_.MergeFrom(from.tables_);
  if (from.has_retcode()) {
    _internal_mutable_retcode()->::gorm::GORM_PB_Ret_Code::MergeFrom(from._internal_retcode());
  }
}

void GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP::CopyFrom(const GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP::IsInitialized() const {
  return true;
}

void GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP::InternalSwap(GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  tables_.InternalSwap(&other->tables_);
  swap(retcode_, other->retcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace gorm
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::gorm::GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE* Arena::CreateMaybeMessage< ::gorm::GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gorm::GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE >(arena);
}
template<> PROTOBUF_NOINLINE ::gorm::GORM_PB_SPLIT_INFO* Arena::CreateMaybeMessage< ::gorm::GORM_PB_SPLIT_INFO >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gorm::GORM_PB_SPLIT_INFO >(arena);
}
template<> PROTOBUF_NOINLINE ::gorm::GORM_PB_Ret_Code* Arena::CreateMaybeMessage< ::gorm::GORM_PB_Ret_Code >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gorm::GORM_PB_Ret_Code >(arena);
}
template<> PROTOBUF_NOINLINE ::gorm::GORM_PB_RELOAD_TABLE_REQ* Arena::CreateMaybeMessage< ::gorm::GORM_PB_RELOAD_TABLE_REQ >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gorm::GORM_PB_RELOAD_TABLE_REQ >(arena);
}
template<> PROTOBUF_NOINLINE ::gorm::GORM_PB_RELOAD_TABLE_RSP* Arena::CreateMaybeMessage< ::gorm::GORM_PB_RELOAD_TABLE_RSP >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gorm::GORM_PB_RELOAD_TABLE_RSP >(arena);
}
template<> PROTOBUF_NOINLINE ::gorm::GORM_PB_REQ_HEADER* Arena::CreateMaybeMessage< ::gorm::GORM_PB_REQ_HEADER >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gorm::GORM_PB_REQ_HEADER >(arena);
}
template<> PROTOBUF_NOINLINE ::gorm::GORM_PB_HEART_REQ* Arena::CreateMaybeMessage< ::gorm::GORM_PB_HEART_REQ >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gorm::GORM_PB_HEART_REQ >(arena);
}
template<> PROTOBUF_NOINLINE ::gorm::GORM_PB_HEART_RSP* Arena::CreateMaybeMessage< ::gorm::GORM_PB_HEART_RSP >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gorm::GORM_PB_HEART_RSP >(arena);
}
template<> PROTOBUF_NOINLINE ::gorm::GORM_PB_TABLE_SCHEMA_INFO_COLUMN* Arena::CreateMaybeMessage< ::gorm::GORM_PB_TABLE_SCHEMA_INFO_COLUMN >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gorm::GORM_PB_TABLE_SCHEMA_INFO_COLUMN >(arena);
}
template<> PROTOBUF_NOINLINE ::gorm::GORM_PB_TABLE_SCHEMA_INFO* Arena::CreateMaybeMessage< ::gorm::GORM_PB_TABLE_SCHEMA_INFO >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gorm::GORM_PB_TABLE_SCHEMA_INFO >(arena);
}
template<> PROTOBUF_NOINLINE ::gorm::GORM_PB_HAND_SHAKE_REQ* Arena::CreateMaybeMessage< ::gorm::GORM_PB_HAND_SHAKE_REQ >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gorm::GORM_PB_HAND_SHAKE_REQ >(arena);
}
template<> PROTOBUF_NOINLINE ::gorm::GORM_PB_INSERT_REQ* Arena::CreateMaybeMessage< ::gorm::GORM_PB_INSERT_REQ >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gorm::GORM_PB_INSERT_REQ >(arena);
}
template<> PROTOBUF_NOINLINE ::gorm::GORM_PB_INSERT_RSP* Arena::CreateMaybeMessage< ::gorm::GORM_PB_INSERT_RSP >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gorm::GORM_PB_INSERT_RSP >(arena);
}
template<> PROTOBUF_NOINLINE ::gorm::GORM_PB_UPDATE_REQ* Arena::CreateMaybeMessage< ::gorm::GORM_PB_UPDATE_REQ >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gorm::GORM_PB_UPDATE_REQ >(arena);
}
template<> PROTOBUF_NOINLINE ::gorm::GORM_PB_UPDATE_RSP* Arena::CreateMaybeMessage< ::gorm::GORM_PB_UPDATE_RSP >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gorm::GORM_PB_UPDATE_RSP >(arena);
}
template<> PROTOBUF_NOINLINE ::gorm::GORM_PB_REPLACE_REQ* Arena::CreateMaybeMessage< ::gorm::GORM_PB_REPLACE_REQ >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gorm::GORM_PB_REPLACE_REQ >(arena);
}
template<> PROTOBUF_NOINLINE ::gorm::GORM_PB_REPLACE_RSP* Arena::CreateMaybeMessage< ::gorm::GORM_PB_REPLACE_RSP >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gorm::GORM_PB_REPLACE_RSP >(arena);
}
template<> PROTOBUF_NOINLINE ::gorm::GORM_PB_GET_REQ* Arena::CreateMaybeMessage< ::gorm::GORM_PB_GET_REQ >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gorm::GORM_PB_GET_REQ >(arena);
}
template<> PROTOBUF_NOINLINE ::gorm::GORM_PB_GET_RSP* Arena::CreateMaybeMessage< ::gorm::GORM_PB_GET_RSP >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gorm::GORM_PB_GET_RSP >(arena);
}
template<> PROTOBUF_NOINLINE ::gorm::GORM_PB_BATCH_GET_REQ* Arena::CreateMaybeMessage< ::gorm::GORM_PB_BATCH_GET_REQ >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gorm::GORM_PB_BATCH_GET_REQ >(arena);
}
template<> PROTOBUF_NOINLINE ::gorm::GORM_PB_BATCH_GET_RSP* Arena::CreateMaybeMessage< ::gorm::GORM_PB_BATCH_GET_RSP >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gorm::GORM_PB_BATCH_GET_RSP >(arena);
}
template<> PROTOBUF_NOINLINE ::gorm::GORM_PB_INCREASE_REQ* Arena::CreateMaybeMessage< ::gorm::GORM_PB_INCREASE_REQ >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gorm::GORM_PB_INCREASE_REQ >(arena);
}
template<> PROTOBUF_NOINLINE ::gorm::GORM_PB_INCREASE_RSP* Arena::CreateMaybeMessage< ::gorm::GORM_PB_INCREASE_RSP >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gorm::GORM_PB_INCREASE_RSP >(arena);
}
template<> PROTOBUF_NOINLINE ::gorm::GORM_PB_DELETE_REQ* Arena::CreateMaybeMessage< ::gorm::GORM_PB_DELETE_REQ >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gorm::GORM_PB_DELETE_REQ >(arena);
}
template<> PROTOBUF_NOINLINE ::gorm::GORM_PB_DELETE_RSP* Arena::CreateMaybeMessage< ::gorm::GORM_PB_DELETE_RSP >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gorm::GORM_PB_DELETE_RSP >(arena);
}
template<> PROTOBUF_NOINLINE ::gorm::GORM_PB_GET_BY_PARTKEY_REQ* Arena::CreateMaybeMessage< ::gorm::GORM_PB_GET_BY_PARTKEY_REQ >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gorm::GORM_PB_GET_BY_PARTKEY_REQ >(arena);
}
template<> PROTOBUF_NOINLINE ::gorm::GORM_PB_GET_BY_PARTKEY_RSP* Arena::CreateMaybeMessage< ::gorm::GORM_PB_GET_BY_PARTKEY_RSP >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gorm::GORM_PB_GET_BY_PARTKEY_RSP >(arena);
}
template<> PROTOBUF_NOINLINE ::gorm::GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ* Arena::CreateMaybeMessage< ::gorm::GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gorm::GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ >(arena);
}
template<> PROTOBUF_NOINLINE ::gorm::GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP* Arena::CreateMaybeMessage< ::gorm::GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP >(Arena* arena) {
  return Arena::CreateMessageInternal< ::gorm::GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
