// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.0
// source: gorm_pb_proto.proto

package gorm

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type GORM_CODE int32

const (
	GORM_CODE_OK                 GORM_CODE = 0
	GORM_CODE_ERROR              GORM_CODE = -1
	GORM_CODE_EAGAIN             GORM_CODE = -2
	GORM_CODE_INVALID_CLIENT     GORM_CODE = -3
	GORM_CODE_PART_FAILED        GORM_CODE = -4 // 请求部分失败
	GORM_CODE_INVALID_TABLE      GORM_CODE = -5 // 无效的表
	GORM_CODE_RESET              GORM_CODE = -6 // 重复设置
	GORM_CODE_TOO_MUCH_RECORD    GORM_CODE = -7 // 太多record
	GORM_CODE_INIT_RECORD        GORM_CODE = -8
	GORM_CODE_INVALID_FIELD      GORM_CODE = -9  // 无效的field
	GORM_CODE_PACK_REQ_ERROR     GORM_CODE = -10 // 打包请求失败
	GORM_CODE_REQ_NO_RECORDS     GORM_CODE = -11 // 没有往请求中放入record
	GORM_CODE_MULTI_TABLES       GORM_CODE = -12 // 有多张表
	GORM_CODE_RSP_UNPACK_FAILED  GORM_CODE = -13 // 响应解包失败
	GORM_CODE_CONN_CLOSED        GORM_CODE = -14 // 连接已经关闭了
	GORM_CODE_CONN_FAILED        GORM_CODE = -15 // 连接RetErr服务器失败
	GORM_CODE_DB_ERROR           GORM_CODE = -16 // 数据库发生错误,此时需要根据db信息获取进一步错误信息
	GORM_CODE_NO_DB              GORM_CODE = -17 // 没有找到db
	GORM_CODE_REQ_MSG_ERROR      GORM_CODE = -18 // 请求信息错误
	GORM_CODE_NOT_SUPPORT_CMD    GORM_CODE = -19 // 不支持的命令
	GORM_CODE_UNPACK_REQ         GORM_CODE = -20 // 解压缩请求信息出错
	GORM_CODE_PACK_RSP_ERROR     GORM_CODE = -21 // 压缩响应消息出错
	GORM_CODE_REQ_MSG_NO_HEADER  GORM_CODE = -22 // 请求没有设置消息头
	GORM_CODE_REQ_NEED_SPLIT     GORM_CODE = -23 // split信息没有带全
	GORM_CODE_REQ_TOO_LARGE      GORM_CODE = -24 // 请求数据太大
	GORM_CODE_DB_2_STRUCT_ERROR  GORM_CODE = -25 // db结果转换到struct出错，一般都是版本对不上导致
	GORM_CODE_NO_MORE_RECORD     GORM_CODE = -26 // 没有更多record
	GORM_CODE_VERSION_NOT_SET    GORM_CODE = -27 // 没有设置版本号
	GORM_CODE_CACHE_ERROR        GORM_CODE = -28 // 操作缓存错误
	GORM_CODE_NO_VALUE           GORM_CODE = -29 // 没有对应的值
	GORM_CODE_INVALID_VALUE_TYPE GORM_CODE = -30 // 无效的类型
)

// Enum value maps for GORM_CODE.
var (
	GORM_CODE_name = map[int32]string{
		0:   "OK",
		-1:  "ERROR",
		-2:  "EAGAIN",
		-3:  "INVALID_CLIENT",
		-4:  "PART_FAILED",
		-5:  "INVALID_TABLE",
		-6:  "RESET",
		-7:  "TOO_MUCH_RECORD",
		-8:  "INIT_RECORD",
		-9:  "INVALID_FIELD",
		-10: "PACK_REQ_ERROR",
		-11: "REQ_NO_RECORDS",
		-12: "MULTI_TABLES",
		-13: "RSP_UNPACK_FAILED",
		-14: "CONN_CLOSED",
		-15: "CONN_FAILED",
		-16: "DB_ERROR",
		-17: "NO_DB",
		-18: "REQ_MSG_ERROR",
		-19: "NOT_SUPPORT_CMD",
		-20: "UNPACK_REQ",
		-21: "PACK_RSP_ERROR",
		-22: "REQ_MSG_NO_HEADER",
		-23: "REQ_NEED_SPLIT",
		-24: "REQ_TOO_LARGE",
		-25: "DB_2_STRUCT_ERROR",
		-26: "NO_MORE_RECORD",
		-27: "VERSION_NOT_SET",
		-28: "CACHE_ERROR",
		-29: "NO_VALUE",
		-30: "INVALID_VALUE_TYPE",
	}
	GORM_CODE_value = map[string]int32{
		"OK":                 0,
		"ERROR":              -1,
		"EAGAIN":             -2,
		"INVALID_CLIENT":     -3,
		"PART_FAILED":        -4,
		"INVALID_TABLE":      -5,
		"RESET":              -6,
		"TOO_MUCH_RECORD":    -7,
		"INIT_RECORD":        -8,
		"INVALID_FIELD":      -9,
		"PACK_REQ_ERROR":     -10,
		"REQ_NO_RECORDS":     -11,
		"MULTI_TABLES":       -12,
		"RSP_UNPACK_FAILED":  -13,
		"CONN_CLOSED":        -14,
		"CONN_FAILED":        -15,
		"DB_ERROR":           -16,
		"NO_DB":              -17,
		"REQ_MSG_ERROR":      -18,
		"NOT_SUPPORT_CMD":    -19,
		"UNPACK_REQ":         -20,
		"PACK_RSP_ERROR":     -21,
		"REQ_MSG_NO_HEADER":  -22,
		"REQ_NEED_SPLIT":     -23,
		"REQ_TOO_LARGE":      -24,
		"DB_2_STRUCT_ERROR":  -25,
		"NO_MORE_RECORD":     -26,
		"VERSION_NOT_SET":    -27,
		"CACHE_ERROR":        -28,
		"NO_VALUE":           -29,
		"INVALID_VALUE_TYPE": -30,
	}
)

func (x GORM_CODE) Enum() *GORM_CODE {
	p := new(GORM_CODE)
	*p = x
	return p
}

func (x GORM_CODE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GORM_CODE) Descriptor() protoreflect.EnumDescriptor {
	return file_gorm_pb_proto_proto_enumTypes[0].Descriptor()
}

func (GORM_CODE) Type() protoreflect.EnumType {
	return &file_gorm_pb_proto_proto_enumTypes[0]
}

func (x GORM_CODE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GORM_CODE.Descriptor instead.
func (GORM_CODE) EnumDescriptor() ([]byte, []int) {
	return file_gorm_pb_proto_proto_rawDescGZIP(), []int{0}
}

type GORM_CMD int32

const (
	GORM_CMD_GORM_CMD_INVALID                GORM_CMD = 0
	GORM_CMD_GORM_CMD_HEART                  GORM_CMD = 1  // 心跳，内部使用的协议
	GORM_CMD_GORM_CMD_GET_CLIENT_ID          GORM_CMD = 2  // 握手，获取客户端id过程
	GORM_CMD_GORM_CMD_INSERT                 GORM_CMD = 3  // 增加记录
	GORM_CMD_GORM_CMD_REPLACE                GORM_CMD = 4  // 有则替换，没有则插入
	GORM_CMD_GORM_CMD_INCREASE               GORM_CMD = 5  // 增量更新请求
	GORM_CMD_GORM_CMD_GET                    GORM_CMD = 6  // 单条查询请求
	GORM_CMD_GORM_CMD_DELETE                 GORM_CMD = 7  // 删除请求
	GORM_CMD_GORM_CMD_BATCH_GET              GORM_CMD = 8  // 批量查询请求
	GORM_CMD_GORM_CMD_GET_BY_PARTKEY         GORM_CMD = 9  // 部分key查询请求
	GORM_CMD_GORM_CMD_UPDATE                 GORM_CMD = 10 // 更新请求
	GORM_CMD_GORM_CMD_GET_BY_NON_PRIMARY_KEY GORM_CMD = 11 // 通过非主键批量获取
)

// Enum value maps for GORM_CMD.
var (
	GORM_CMD_name = map[int32]string{
		0:  "GORM_CMD_INVALID",
		1:  "GORM_CMD_HEART",
		2:  "GORM_CMD_GET_CLIENT_ID",
		3:  "GORM_CMD_INSERT",
		4:  "GORM_CMD_REPLACE",
		5:  "GORM_CMD_INCREASE",
		6:  "GORM_CMD_GET",
		7:  "GORM_CMD_DELETE",
		8:  "GORM_CMD_BATCH_GET",
		9:  "GORM_CMD_GET_BY_PARTKEY",
		10: "GORM_CMD_UPDATE",
		11: "GORM_CMD_GET_BY_NON_PRIMARY_KEY",
	}
	GORM_CMD_value = map[string]int32{
		"GORM_CMD_INVALID":                0,
		"GORM_CMD_HEART":                  1,
		"GORM_CMD_GET_CLIENT_ID":          2,
		"GORM_CMD_INSERT":                 3,
		"GORM_CMD_REPLACE":                4,
		"GORM_CMD_INCREASE":               5,
		"GORM_CMD_GET":                    6,
		"GORM_CMD_DELETE":                 7,
		"GORM_CMD_BATCH_GET":              8,
		"GORM_CMD_GET_BY_PARTKEY":         9,
		"GORM_CMD_UPDATE":                 10,
		"GORM_CMD_GET_BY_NON_PRIMARY_KEY": 11,
	}
)

func (x GORM_CMD) Enum() *GORM_CMD {
	p := new(GORM_CMD)
	*p = x
	return p
}

func (x GORM_CMD) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GORM_CMD) Descriptor() protoreflect.EnumDescriptor {
	return file_gorm_pb_proto_proto_enumTypes[1].Descriptor()
}

func (GORM_CMD) Type() protoreflect.EnumType {
	return &file_gorm_pb_proto_proto_enumTypes[1]
}

func (x GORM_CMD) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GORM_CMD.Descriptor instead.
func (GORM_CMD) EnumDescriptor() ([]byte, []int) {
	return file_gorm_pb_proto_proto_rawDescGZIP(), []int{1}
}

type GORM_PB_SPLIT_INFO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SplitInfo []*GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE `protobuf:"bytes,1,rep,name=SplitInfo,proto3" json:"SplitInfo,omitempty"`
}

func (x *GORM_PB_SPLIT_INFO) Reset() {
	*x = GORM_PB_SPLIT_INFO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorm_pb_proto_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GORM_PB_SPLIT_INFO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GORM_PB_SPLIT_INFO) ProtoMessage() {}

func (x *GORM_PB_SPLIT_INFO) ProtoReflect() protoreflect.Message {
	mi := &file_gorm_pb_proto_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GORM_PB_SPLIT_INFO.ProtoReflect.Descriptor instead.
func (*GORM_PB_SPLIT_INFO) Descriptor() ([]byte, []int) {
	return file_gorm_pb_proto_proto_rawDescGZIP(), []int{0}
}

func (x *GORM_PB_SPLIT_INFO) GetSplitInfo() []*GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE {
	if x != nil {
		return x.SplitInfo
	}
	return nil
}

type GORM_PB_Ret_Code struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code      int32  `protobuf:"varint,1,opt,name=Code,proto3" json:"Code,omitempty"`           // 0 为成功，-1为失败，-4为部分失败
	DBCode    int32  `protobuf:"varint,2,opt,name=DBCode,proto3" json:"DBCode,omitempty"`       // 后端db的错误码
	DBErrInfo string `protobuf:"bytes,3,opt,name=DBErrInfo,proto3" json:"DBErrInfo,omitempty"`  // 后端db错误的详细信息
	SucessNum int32  `protobuf:"varint,4,opt,name=SucessNum,proto3" json:"SucessNum,omitempty"` // 成功的请求个数
	TotalNum  int32  `protobuf:"varint,5,opt,name=TotalNum,proto3" json:"TotalNum,omitempty"`   // 所有的请求
}

func (x *GORM_PB_Ret_Code) Reset() {
	*x = GORM_PB_Ret_Code{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorm_pb_proto_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GORM_PB_Ret_Code) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GORM_PB_Ret_Code) ProtoMessage() {}

func (x *GORM_PB_Ret_Code) ProtoReflect() protoreflect.Message {
	mi := &file_gorm_pb_proto_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GORM_PB_Ret_Code.ProtoReflect.Descriptor instead.
func (*GORM_PB_Ret_Code) Descriptor() ([]byte, []int) {
	return file_gorm_pb_proto_proto_rawDescGZIP(), []int{1}
}

func (x *GORM_PB_Ret_Code) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GORM_PB_Ret_Code) GetDBCode() int32 {
	if x != nil {
		return x.DBCode
	}
	return 0
}

func (x *GORM_PB_Ret_Code) GetDBErrInfo() string {
	if x != nil {
		return x.DBErrInfo
	}
	return ""
}

func (x *GORM_PB_Ret_Code) GetSucessNum() int32 {
	if x != nil {
		return x.SucessNum
	}
	return 0
}

func (x *GORM_PB_Ret_Code) GetTotalNum() int32 {
	if x != nil {
		return x.TotalNum
	}
	return 0
}

type GORM_PB_RELOAD_TABLE_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header       *GORM_PB_REQ_HEADER `protobuf:"bytes,1,opt,name=Header,proto3" json:"Header,omitempty"`
	TableVersion uint64              `protobuf:"varint,2,opt,name=TableVersion,proto3" json:"TableVersion,omitempty"`
}

func (x *GORM_PB_RELOAD_TABLE_REQ) Reset() {
	*x = GORM_PB_RELOAD_TABLE_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorm_pb_proto_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GORM_PB_RELOAD_TABLE_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GORM_PB_RELOAD_TABLE_REQ) ProtoMessage() {}

func (x *GORM_PB_RELOAD_TABLE_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_gorm_pb_proto_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GORM_PB_RELOAD_TABLE_REQ.ProtoReflect.Descriptor instead.
func (*GORM_PB_RELOAD_TABLE_REQ) Descriptor() ([]byte, []int) {
	return file_gorm_pb_proto_proto_rawDescGZIP(), []int{2}
}

func (x *GORM_PB_RELOAD_TABLE_REQ) GetHeader() *GORM_PB_REQ_HEADER {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *GORM_PB_RELOAD_TABLE_REQ) GetTableVersion() uint64 {
	if x != nil {
		return x.TableVersion
	}
	return 0
}

type GORM_PB_RELOAD_TABLE_RSP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode *GORM_PB_Ret_Code `protobuf:"bytes,1,opt,name=RetCode,proto3" json:"RetCode,omitempty"`
}

func (x *GORM_PB_RELOAD_TABLE_RSP) Reset() {
	*x = GORM_PB_RELOAD_TABLE_RSP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorm_pb_proto_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GORM_PB_RELOAD_TABLE_RSP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GORM_PB_RELOAD_TABLE_RSP) ProtoMessage() {}

func (x *GORM_PB_RELOAD_TABLE_RSP) ProtoReflect() protoreflect.Message {
	mi := &file_gorm_pb_proto_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GORM_PB_RELOAD_TABLE_RSP.ProtoReflect.Descriptor instead.
func (*GORM_PB_RELOAD_TABLE_RSP) Descriptor() ([]byte, []int) {
	return file_gorm_pb_proto_proto_rawDescGZIP(), []int{3}
}

func (x *GORM_PB_RELOAD_TABLE_RSP) GetRetCode() *GORM_PB_Ret_Code {
	if x != nil {
		return x.RetCode
	}
	return nil
}

type GORM_PB_REQ_HEADER struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TableId        int32               `protobuf:"varint,1,opt,name=TableId,proto3" json:"TableId,omitempty"`       // 表的类型
	BusinessID     int32               `protobuf:"varint,2,opt,name=BusinessID,proto3" json:"BusinessID,omitempty"` // 串行化ID
	VerPolice      int32               `protobuf:"varint,3,opt,name=VerPolice,proto3" json:"VerPolice,omitempty"`   // 版本校验规则
	ReqFlag        uint32              `protobuf:"varint,4,opt,name=ReqFlag,proto3" json:"ReqFlag,omitempty"`       // 参见GORM_CMD_FLAG_XXX
	FieldMode      []byte              `protobuf:"bytes,5,opt,name=FieldMode,proto3" json:"FieldMode,omitempty"`
	SplitTableInfo *GORM_PB_SPLIT_INFO `protobuf:"bytes,6,opt,name=SplitTableInfo,proto3" json:"SplitTableInfo,omitempty"` // 分库分表信息
}

func (x *GORM_PB_REQ_HEADER) Reset() {
	*x = GORM_PB_REQ_HEADER{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorm_pb_proto_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GORM_PB_REQ_HEADER) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GORM_PB_REQ_HEADER) ProtoMessage() {}

func (x *GORM_PB_REQ_HEADER) ProtoReflect() protoreflect.Message {
	mi := &file_gorm_pb_proto_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GORM_PB_REQ_HEADER.ProtoReflect.Descriptor instead.
func (*GORM_PB_REQ_HEADER) Descriptor() ([]byte, []int) {
	return file_gorm_pb_proto_proto_rawDescGZIP(), []int{4}
}

func (x *GORM_PB_REQ_HEADER) GetTableId() int32 {
	if x != nil {
		return x.TableId
	}
	return 0
}

func (x *GORM_PB_REQ_HEADER) GetBusinessID() int32 {
	if x != nil {
		return x.BusinessID
	}
	return 0
}

func (x *GORM_PB_REQ_HEADER) GetVerPolice() int32 {
	if x != nil {
		return x.VerPolice
	}
	return 0
}

func (x *GORM_PB_REQ_HEADER) GetReqFlag() uint32 {
	if x != nil {
		return x.ReqFlag
	}
	return 0
}

func (x *GORM_PB_REQ_HEADER) GetFieldMode() []byte {
	if x != nil {
		return x.FieldMode
	}
	return nil
}

func (x *GORM_PB_REQ_HEADER) GetSplitTableInfo() *GORM_PB_SPLIT_INFO {
	if x != nil {
		return x.SplitTableInfo
	}
	return nil
}

type GORM_PB_HEART_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *GORM_PB_REQ_HEADER `protobuf:"bytes,1,opt,name=Header,proto3" json:"Header,omitempty"`
}

func (x *GORM_PB_HEART_REQ) Reset() {
	*x = GORM_PB_HEART_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorm_pb_proto_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GORM_PB_HEART_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GORM_PB_HEART_REQ) ProtoMessage() {}

func (x *GORM_PB_HEART_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_gorm_pb_proto_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GORM_PB_HEART_REQ.ProtoReflect.Descriptor instead.
func (*GORM_PB_HEART_REQ) Descriptor() ([]byte, []int) {
	return file_gorm_pb_proto_proto_rawDescGZIP(), []int{5}
}

func (x *GORM_PB_HEART_REQ) GetHeader() *GORM_PB_REQ_HEADER {
	if x != nil {
		return x.Header
	}
	return nil
}

type GORM_PB_HEART_RSP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode *GORM_PB_Ret_Code `protobuf:"bytes,1,opt,name=RetCode,proto3" json:"RetCode,omitempty"`
}

func (x *GORM_PB_HEART_RSP) Reset() {
	*x = GORM_PB_HEART_RSP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorm_pb_proto_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GORM_PB_HEART_RSP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GORM_PB_HEART_RSP) ProtoMessage() {}

func (x *GORM_PB_HEART_RSP) ProtoReflect() protoreflect.Message {
	mi := &file_gorm_pb_proto_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GORM_PB_HEART_RSP.ProtoReflect.Descriptor instead.
func (*GORM_PB_HEART_RSP) Descriptor() ([]byte, []int) {
	return file_gorm_pb_proto_proto_rawDescGZIP(), []int{6}
}

func (x *GORM_PB_HEART_RSP) GetRetCode() *GORM_PB_Ret_Code {
	if x != nil {
		return x.RetCode
	}
	return nil
}

type GORM_PB_GET_CLIENT_ID_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *GORM_PB_REQ_HEADER `protobuf:"bytes,1,opt,name=Header,proto3" json:"Header,omitempty"`
}

func (x *GORM_PB_GET_CLIENT_ID_REQ) Reset() {
	*x = GORM_PB_GET_CLIENT_ID_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorm_pb_proto_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GORM_PB_GET_CLIENT_ID_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GORM_PB_GET_CLIENT_ID_REQ) ProtoMessage() {}

func (x *GORM_PB_GET_CLIENT_ID_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_gorm_pb_proto_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GORM_PB_GET_CLIENT_ID_REQ.ProtoReflect.Descriptor instead.
func (*GORM_PB_GET_CLIENT_ID_REQ) Descriptor() ([]byte, []int) {
	return file_gorm_pb_proto_proto_rawDescGZIP(), []int{7}
}

func (x *GORM_PB_GET_CLIENT_ID_REQ) GetHeader() *GORM_PB_REQ_HEADER {
	if x != nil {
		return x.Header
	}
	return nil
}

type GORM_PB_GET_CLIENT_ID_RSP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode *GORM_PB_Ret_Code `protobuf:"bytes,1,opt,name=RetCode,proto3" json:"RetCode,omitempty"`
}

func (x *GORM_PB_GET_CLIENT_ID_RSP) Reset() {
	*x = GORM_PB_GET_CLIENT_ID_RSP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorm_pb_proto_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GORM_PB_GET_CLIENT_ID_RSP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GORM_PB_GET_CLIENT_ID_RSP) ProtoMessage() {}

func (x *GORM_PB_GET_CLIENT_ID_RSP) ProtoReflect() protoreflect.Message {
	mi := &file_gorm_pb_proto_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GORM_PB_GET_CLIENT_ID_RSP.ProtoReflect.Descriptor instead.
func (*GORM_PB_GET_CLIENT_ID_RSP) Descriptor() ([]byte, []int) {
	return file_gorm_pb_proto_proto_rawDescGZIP(), []int{8}
}

func (x *GORM_PB_GET_CLIENT_ID_RSP) GetRetCode() *GORM_PB_Ret_Code {
	if x != nil {
		return x.RetCode
	}
	return nil
}

// 插入暂时只能支持单挑记录插入
type GORM_PB_INSERT_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *GORM_PB_REQ_HEADER `protobuf:"bytes,1,opt,name=Header,proto3" json:"Header,omitempty"`
	Tables []*GORM_PB_TABLE    `protobuf:"bytes,2,rep,name=Tables,proto3" json:"Tables,omitempty"`
}

func (x *GORM_PB_INSERT_REQ) Reset() {
	*x = GORM_PB_INSERT_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorm_pb_proto_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GORM_PB_INSERT_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GORM_PB_INSERT_REQ) ProtoMessage() {}

func (x *GORM_PB_INSERT_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_gorm_pb_proto_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GORM_PB_INSERT_REQ.ProtoReflect.Descriptor instead.
func (*GORM_PB_INSERT_REQ) Descriptor() ([]byte, []int) {
	return file_gorm_pb_proto_proto_rawDescGZIP(), []int{9}
}

func (x *GORM_PB_INSERT_REQ) GetHeader() *GORM_PB_REQ_HEADER {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *GORM_PB_INSERT_REQ) GetTables() []*GORM_PB_TABLE {
	if x != nil {
		return x.Tables
	}
	return nil
}

type GORM_PB_INSERT_RSP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode      *GORM_PB_Ret_Code `protobuf:"bytes,1,opt,name=RetCode,proto3" json:"RetCode,omitempty"`
	Tables       []*GORM_PB_TABLE  `protobuf:"bytes,2,rep,name=Tables,proto3" json:"Tables,omitempty"` // 如果需要回带数据，则将数据带回
	LastInsertId uint64            `protobuf:"varint,3,opt,name=LastInsertId,proto3" json:"LastInsertId,omitempty"`
}

func (x *GORM_PB_INSERT_RSP) Reset() {
	*x = GORM_PB_INSERT_RSP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorm_pb_proto_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GORM_PB_INSERT_RSP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GORM_PB_INSERT_RSP) ProtoMessage() {}

func (x *GORM_PB_INSERT_RSP) ProtoReflect() protoreflect.Message {
	mi := &file_gorm_pb_proto_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GORM_PB_INSERT_RSP.ProtoReflect.Descriptor instead.
func (*GORM_PB_INSERT_RSP) Descriptor() ([]byte, []int) {
	return file_gorm_pb_proto_proto_rawDescGZIP(), []int{10}
}

func (x *GORM_PB_INSERT_RSP) GetRetCode() *GORM_PB_Ret_Code {
	if x != nil {
		return x.RetCode
	}
	return nil
}

func (x *GORM_PB_INSERT_RSP) GetTables() []*GORM_PB_TABLE {
	if x != nil {
		return x.Tables
	}
	return nil
}

func (x *GORM_PB_INSERT_RSP) GetLastInsertId() uint64 {
	if x != nil {
		return x.LastInsertId
	}
	return 0
}

type GORM_PB_UPDATE_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *GORM_PB_REQ_HEADER `protobuf:"bytes,1,opt,name=Header,proto3" json:"Header,omitempty"`
	Tables []*GORM_PB_TABLE    `protobuf:"bytes,2,rep,name=Tables,proto3" json:"Tables,omitempty"`
}

func (x *GORM_PB_UPDATE_REQ) Reset() {
	*x = GORM_PB_UPDATE_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorm_pb_proto_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GORM_PB_UPDATE_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GORM_PB_UPDATE_REQ) ProtoMessage() {}

func (x *GORM_PB_UPDATE_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_gorm_pb_proto_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GORM_PB_UPDATE_REQ.ProtoReflect.Descriptor instead.
func (*GORM_PB_UPDATE_REQ) Descriptor() ([]byte, []int) {
	return file_gorm_pb_proto_proto_rawDescGZIP(), []int{11}
}

func (x *GORM_PB_UPDATE_REQ) GetHeader() *GORM_PB_REQ_HEADER {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *GORM_PB_UPDATE_REQ) GetTables() []*GORM_PB_TABLE {
	if x != nil {
		return x.Tables
	}
	return nil
}

type GORM_PB_UPDATE_RSP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode     *GORM_PB_Ret_Code `protobuf:"bytes,1,opt,name=RetCode,proto3" json:"RetCode,omitempty"`
	Tables      []*GORM_PB_TABLE  `protobuf:"bytes,2,rep,name=Tables,proto3" json:"Tables,omitempty"` // 如果需要回带数据，则将数据带回
	AffectedNum int32             `protobuf:"varint,3,opt,name=AffectedNum,proto3" json:"AffectedNum,omitempty"`
}

func (x *GORM_PB_UPDATE_RSP) Reset() {
	*x = GORM_PB_UPDATE_RSP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorm_pb_proto_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GORM_PB_UPDATE_RSP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GORM_PB_UPDATE_RSP) ProtoMessage() {}

func (x *GORM_PB_UPDATE_RSP) ProtoReflect() protoreflect.Message {
	mi := &file_gorm_pb_proto_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GORM_PB_UPDATE_RSP.ProtoReflect.Descriptor instead.
func (*GORM_PB_UPDATE_RSP) Descriptor() ([]byte, []int) {
	return file_gorm_pb_proto_proto_rawDescGZIP(), []int{12}
}

func (x *GORM_PB_UPDATE_RSP) GetRetCode() *GORM_PB_Ret_Code {
	if x != nil {
		return x.RetCode
	}
	return nil
}

func (x *GORM_PB_UPDATE_RSP) GetTables() []*GORM_PB_TABLE {
	if x != nil {
		return x.Tables
	}
	return nil
}

func (x *GORM_PB_UPDATE_RSP) GetAffectedNum() int32 {
	if x != nil {
		return x.AffectedNum
	}
	return 0
}

type GORM_PB_REPLACE_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *GORM_PB_REQ_HEADER `protobuf:"bytes,1,opt,name=Header,proto3" json:"Header,omitempty"`
	Tables []*GORM_PB_TABLE    `protobuf:"bytes,2,rep,name=Tables,proto3" json:"Tables,omitempty"`
}

func (x *GORM_PB_REPLACE_REQ) Reset() {
	*x = GORM_PB_REPLACE_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorm_pb_proto_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GORM_PB_REPLACE_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GORM_PB_REPLACE_REQ) ProtoMessage() {}

func (x *GORM_PB_REPLACE_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_gorm_pb_proto_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GORM_PB_REPLACE_REQ.ProtoReflect.Descriptor instead.
func (*GORM_PB_REPLACE_REQ) Descriptor() ([]byte, []int) {
	return file_gorm_pb_proto_proto_rawDescGZIP(), []int{13}
}

func (x *GORM_PB_REPLACE_REQ) GetHeader() *GORM_PB_REQ_HEADER {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *GORM_PB_REPLACE_REQ) GetTables() []*GORM_PB_TABLE {
	if x != nil {
		return x.Tables
	}
	return nil
}

type GORM_PB_REPLACE_RSP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode     *GORM_PB_Ret_Code `protobuf:"bytes,1,opt,name=RetCode,proto3" json:"RetCode,omitempty"`
	Tables      []*GORM_PB_TABLE  `protobuf:"bytes,2,rep,name=Tables,proto3" json:"Tables,omitempty"` // 如果需要回带数据，则将数据带回
	AffectedNum int32             `protobuf:"varint,3,opt,name=AffectedNum,proto3" json:"AffectedNum,omitempty"`
}

func (x *GORM_PB_REPLACE_RSP) Reset() {
	*x = GORM_PB_REPLACE_RSP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorm_pb_proto_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GORM_PB_REPLACE_RSP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GORM_PB_REPLACE_RSP) ProtoMessage() {}

func (x *GORM_PB_REPLACE_RSP) ProtoReflect() protoreflect.Message {
	mi := &file_gorm_pb_proto_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GORM_PB_REPLACE_RSP.ProtoReflect.Descriptor instead.
func (*GORM_PB_REPLACE_RSP) Descriptor() ([]byte, []int) {
	return file_gorm_pb_proto_proto_rawDescGZIP(), []int{14}
}

func (x *GORM_PB_REPLACE_RSP) GetRetCode() *GORM_PB_Ret_Code {
	if x != nil {
		return x.RetCode
	}
	return nil
}

func (x *GORM_PB_REPLACE_RSP) GetTables() []*GORM_PB_TABLE {
	if x != nil {
		return x.Tables
	}
	return nil
}

func (x *GORM_PB_REPLACE_RSP) GetAffectedNum() int32 {
	if x != nil {
		return x.AffectedNum
	}
	return 0
}

type GORM_PB_GET_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header  *GORM_PB_REQ_HEADER `protobuf:"bytes,1,opt,name=Header,proto3" json:"Header,omitempty"`
	Table   *GORM_PB_TABLE      `protobuf:"bytes,2,opt,name=Table,proto3" json:"Table,omitempty"`
	GetFlag int32               `protobuf:"varint,3,opt,name=GetFlag,proto3" json:"GetFlag,omitempty"`
}

func (x *GORM_PB_GET_REQ) Reset() {
	*x = GORM_PB_GET_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorm_pb_proto_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GORM_PB_GET_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GORM_PB_GET_REQ) ProtoMessage() {}

func (x *GORM_PB_GET_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_gorm_pb_proto_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GORM_PB_GET_REQ.ProtoReflect.Descriptor instead.
func (*GORM_PB_GET_REQ) Descriptor() ([]byte, []int) {
	return file_gorm_pb_proto_proto_rawDescGZIP(), []int{15}
}

func (x *GORM_PB_GET_REQ) GetHeader() *GORM_PB_REQ_HEADER {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *GORM_PB_GET_REQ) GetTable() *GORM_PB_TABLE {
	if x != nil {
		return x.Table
	}
	return nil
}

func (x *GORM_PB_GET_REQ) GetGetFlag() int32 {
	if x != nil {
		return x.GetFlag
	}
	return 0
}

type GORM_PB_GET_RSP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode      *GORM_PB_Ret_Code `protobuf:"bytes,1,opt,name=RetCode,proto3" json:"RetCode,omitempty"`
	Table        *GORM_PB_TABLE    `protobuf:"bytes,2,opt,name=Table,proto3" json:"Table,omitempty"`
	NewInsert    int32             `protobuf:"varint,3,opt,name=NewInsert,proto3" json:"NewInsert,omitempty"`       // 结果是否是新插入的
	LastInsertId uint64            `protobuf:"varint,4,opt,name=LastInsertId,proto3" json:"LastInsertId,omitempty"` // 结果是否是新插入的
}

func (x *GORM_PB_GET_RSP) Reset() {
	*x = GORM_PB_GET_RSP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorm_pb_proto_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GORM_PB_GET_RSP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GORM_PB_GET_RSP) ProtoMessage() {}

func (x *GORM_PB_GET_RSP) ProtoReflect() protoreflect.Message {
	mi := &file_gorm_pb_proto_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GORM_PB_GET_RSP.ProtoReflect.Descriptor instead.
func (*GORM_PB_GET_RSP) Descriptor() ([]byte, []int) {
	return file_gorm_pb_proto_proto_rawDescGZIP(), []int{16}
}

func (x *GORM_PB_GET_RSP) GetRetCode() *GORM_PB_Ret_Code {
	if x != nil {
		return x.RetCode
	}
	return nil
}

func (x *GORM_PB_GET_RSP) GetTable() *GORM_PB_TABLE {
	if x != nil {
		return x.Table
	}
	return nil
}

func (x *GORM_PB_GET_RSP) GetNewInsert() int32 {
	if x != nil {
		return x.NewInsert
	}
	return 0
}

func (x *GORM_PB_GET_RSP) GetLastInsertId() uint64 {
	if x != nil {
		return x.LastInsertId
	}
	return 0
}

type GORM_PB_BATCH_GET_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *GORM_PB_REQ_HEADER `protobuf:"bytes,1,opt,name=Header,proto3" json:"Header,omitempty"`
	Tables []*GORM_PB_TABLE    `protobuf:"bytes,2,rep,name=Tables,proto3" json:"Tables,omitempty"` // 如果需要回带数据，则将数据带回
}

func (x *GORM_PB_BATCH_GET_REQ) Reset() {
	*x = GORM_PB_BATCH_GET_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorm_pb_proto_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GORM_PB_BATCH_GET_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GORM_PB_BATCH_GET_REQ) ProtoMessage() {}

func (x *GORM_PB_BATCH_GET_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_gorm_pb_proto_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GORM_PB_BATCH_GET_REQ.ProtoReflect.Descriptor instead.
func (*GORM_PB_BATCH_GET_REQ) Descriptor() ([]byte, []int) {
	return file_gorm_pb_proto_proto_rawDescGZIP(), []int{17}
}

func (x *GORM_PB_BATCH_GET_REQ) GetHeader() *GORM_PB_REQ_HEADER {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *GORM_PB_BATCH_GET_REQ) GetTables() []*GORM_PB_TABLE {
	if x != nil {
		return x.Tables
	}
	return nil
}

type GORM_PB_BATCH_GET_RSP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode *GORM_PB_Ret_Code `protobuf:"bytes,1,opt,name=RetCode,proto3" json:"RetCode,omitempty"`
	Tables  []*GORM_PB_TABLE  `protobuf:"bytes,2,rep,name=Tables,proto3" json:"Tables,omitempty"`
}

func (x *GORM_PB_BATCH_GET_RSP) Reset() {
	*x = GORM_PB_BATCH_GET_RSP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorm_pb_proto_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GORM_PB_BATCH_GET_RSP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GORM_PB_BATCH_GET_RSP) ProtoMessage() {}

func (x *GORM_PB_BATCH_GET_RSP) ProtoReflect() protoreflect.Message {
	mi := &file_gorm_pb_proto_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GORM_PB_BATCH_GET_RSP.ProtoReflect.Descriptor instead.
func (*GORM_PB_BATCH_GET_RSP) Descriptor() ([]byte, []int) {
	return file_gorm_pb_proto_proto_rawDescGZIP(), []int{18}
}

func (x *GORM_PB_BATCH_GET_RSP) GetRetCode() *GORM_PB_Ret_Code {
	if x != nil {
		return x.RetCode
	}
	return nil
}

func (x *GORM_PB_BATCH_GET_RSP) GetTables() []*GORM_PB_TABLE {
	if x != nil {
		return x.Tables
	}
	return nil
}

type GORM_PB_INCREASE_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header       *GORM_PB_REQ_HEADER `protobuf:"bytes,1,opt,name=Header,proto3" json:"Header,omitempty"`
	Tables       []*GORM_PB_TABLE    `protobuf:"bytes,2,rep,name=Tables,proto3" json:"Tables,omitempty"`
	PlusColumns  string              `protobuf:"bytes,3,opt,name=PlusColumns,proto3" json:"PlusColumns,omitempty"`   // 增加的字段
	MinusColumns string              `protobuf:"bytes,4,opt,name=MinusColumns,proto3" json:"MinusColumns,omitempty"` // 减少的字段
}

func (x *GORM_PB_INCREASE_REQ) Reset() {
	*x = GORM_PB_INCREASE_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorm_pb_proto_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GORM_PB_INCREASE_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GORM_PB_INCREASE_REQ) ProtoMessage() {}

func (x *GORM_PB_INCREASE_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_gorm_pb_proto_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GORM_PB_INCREASE_REQ.ProtoReflect.Descriptor instead.
func (*GORM_PB_INCREASE_REQ) Descriptor() ([]byte, []int) {
	return file_gorm_pb_proto_proto_rawDescGZIP(), []int{19}
}

func (x *GORM_PB_INCREASE_REQ) GetHeader() *GORM_PB_REQ_HEADER {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *GORM_PB_INCREASE_REQ) GetTables() []*GORM_PB_TABLE {
	if x != nil {
		return x.Tables
	}
	return nil
}

func (x *GORM_PB_INCREASE_REQ) GetPlusColumns() string {
	if x != nil {
		return x.PlusColumns
	}
	return ""
}

func (x *GORM_PB_INCREASE_REQ) GetMinusColumns() string {
	if x != nil {
		return x.MinusColumns
	}
	return ""
}

type GORM_PB_INCREASE_RSP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode     *GORM_PB_Ret_Code `protobuf:"bytes,1,opt,name=RetCode,proto3" json:"RetCode,omitempty"`
	Tables      []*GORM_PB_TABLE  `protobuf:"bytes,2,rep,name=Tables,proto3" json:"Tables,omitempty"`
	AffectedNum int32             `protobuf:"varint,3,opt,name=AffectedNum,proto3" json:"AffectedNum,omitempty"`
}

func (x *GORM_PB_INCREASE_RSP) Reset() {
	*x = GORM_PB_INCREASE_RSP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorm_pb_proto_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GORM_PB_INCREASE_RSP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GORM_PB_INCREASE_RSP) ProtoMessage() {}

func (x *GORM_PB_INCREASE_RSP) ProtoReflect() protoreflect.Message {
	mi := &file_gorm_pb_proto_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GORM_PB_INCREASE_RSP.ProtoReflect.Descriptor instead.
func (*GORM_PB_INCREASE_RSP) Descriptor() ([]byte, []int) {
	return file_gorm_pb_proto_proto_rawDescGZIP(), []int{20}
}

func (x *GORM_PB_INCREASE_RSP) GetRetCode() *GORM_PB_Ret_Code {
	if x != nil {
		return x.RetCode
	}
	return nil
}

func (x *GORM_PB_INCREASE_RSP) GetTables() []*GORM_PB_TABLE {
	if x != nil {
		return x.Tables
	}
	return nil
}

func (x *GORM_PB_INCREASE_RSP) GetAffectedNum() int32 {
	if x != nil {
		return x.AffectedNum
	}
	return 0
}

type GORM_PB_DELETE_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *GORM_PB_REQ_HEADER `protobuf:"bytes,1,opt,name=Header,proto3" json:"Header,omitempty"`
	Table  *GORM_PB_TABLE      `protobuf:"bytes,2,opt,name=Table,proto3" json:"Table,omitempty"`
}

func (x *GORM_PB_DELETE_REQ) Reset() {
	*x = GORM_PB_DELETE_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorm_pb_proto_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GORM_PB_DELETE_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GORM_PB_DELETE_REQ) ProtoMessage() {}

func (x *GORM_PB_DELETE_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_gorm_pb_proto_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GORM_PB_DELETE_REQ.ProtoReflect.Descriptor instead.
func (*GORM_PB_DELETE_REQ) Descriptor() ([]byte, []int) {
	return file_gorm_pb_proto_proto_rawDescGZIP(), []int{21}
}

func (x *GORM_PB_DELETE_REQ) GetHeader() *GORM_PB_REQ_HEADER {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *GORM_PB_DELETE_REQ) GetTable() *GORM_PB_TABLE {
	if x != nil {
		return x.Table
	}
	return nil
}

type GORM_PB_DELETE_RSP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode     *GORM_PB_Ret_Code `protobuf:"bytes,1,opt,name=RetCode,proto3" json:"RetCode,omitempty"`
	AffectedNum int32             `protobuf:"varint,2,opt,name=AffectedNum,proto3" json:"AffectedNum,omitempty"`
}

func (x *GORM_PB_DELETE_RSP) Reset() {
	*x = GORM_PB_DELETE_RSP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorm_pb_proto_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GORM_PB_DELETE_RSP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GORM_PB_DELETE_RSP) ProtoMessage() {}

func (x *GORM_PB_DELETE_RSP) ProtoReflect() protoreflect.Message {
	mi := &file_gorm_pb_proto_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GORM_PB_DELETE_RSP.ProtoReflect.Descriptor instead.
func (*GORM_PB_DELETE_RSP) Descriptor() ([]byte, []int) {
	return file_gorm_pb_proto_proto_rawDescGZIP(), []int{22}
}

func (x *GORM_PB_DELETE_RSP) GetRetCode() *GORM_PB_Ret_Code {
	if x != nil {
		return x.RetCode
	}
	return nil
}

func (x *GORM_PB_DELETE_RSP) GetAffectedNum() int32 {
	if x != nil {
		return x.AffectedNum
	}
	return 0
}

type GORM_PB_GET_BY_PARTKEY_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *GORM_PB_REQ_HEADER `protobuf:"bytes,1,opt,name=Header,proto3" json:"Header,omitempty"`
	Tables []*GORM_PB_TABLE    `protobuf:"bytes,2,rep,name=Tables,proto3" json:"Tables,omitempty"` // 如果需要回带数据，则将数据带回
}

func (x *GORM_PB_GET_BY_PARTKEY_REQ) Reset() {
	*x = GORM_PB_GET_BY_PARTKEY_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorm_pb_proto_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GORM_PB_GET_BY_PARTKEY_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GORM_PB_GET_BY_PARTKEY_REQ) ProtoMessage() {}

func (x *GORM_PB_GET_BY_PARTKEY_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_gorm_pb_proto_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GORM_PB_GET_BY_PARTKEY_REQ.ProtoReflect.Descriptor instead.
func (*GORM_PB_GET_BY_PARTKEY_REQ) Descriptor() ([]byte, []int) {
	return file_gorm_pb_proto_proto_rawDescGZIP(), []int{23}
}

func (x *GORM_PB_GET_BY_PARTKEY_REQ) GetHeader() *GORM_PB_REQ_HEADER {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *GORM_PB_GET_BY_PARTKEY_REQ) GetTables() []*GORM_PB_TABLE {
	if x != nil {
		return x.Tables
	}
	return nil
}

type GORM_PB_GET_BY_PARTKEY_RSP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode *GORM_PB_Ret_Code `protobuf:"bytes,1,opt,name=RetCode,proto3" json:"RetCode,omitempty"`
	Tables  []*GORM_PB_TABLE  `protobuf:"bytes,2,rep,name=Tables,proto3" json:"Tables,omitempty"`
}

func (x *GORM_PB_GET_BY_PARTKEY_RSP) Reset() {
	*x = GORM_PB_GET_BY_PARTKEY_RSP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorm_pb_proto_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GORM_PB_GET_BY_PARTKEY_RSP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GORM_PB_GET_BY_PARTKEY_RSP) ProtoMessage() {}

func (x *GORM_PB_GET_BY_PARTKEY_RSP) ProtoReflect() protoreflect.Message {
	mi := &file_gorm_pb_proto_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GORM_PB_GET_BY_PARTKEY_RSP.ProtoReflect.Descriptor instead.
func (*GORM_PB_GET_BY_PARTKEY_RSP) Descriptor() ([]byte, []int) {
	return file_gorm_pb_proto_proto_rawDescGZIP(), []int{24}
}

func (x *GORM_PB_GET_BY_PARTKEY_RSP) GetRetCode() *GORM_PB_Ret_Code {
	if x != nil {
		return x.RetCode
	}
	return nil
}

func (x *GORM_PB_GET_BY_PARTKEY_RSP) GetTables() []*GORM_PB_TABLE {
	if x != nil {
		return x.Tables
	}
	return nil
}

type GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *GORM_PB_REQ_HEADER `protobuf:"bytes,1,opt,name=Header,proto3" json:"Header,omitempty"`
	Tables []*GORM_PB_TABLE    `protobuf:"bytes,2,rep,name=Tables,proto3" json:"Tables,omitempty"` // 如果需要回带数据，则将数据带回
}

func (x *GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ) Reset() {
	*x = GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorm_pb_proto_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ) ProtoMessage() {}

func (x *GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ) ProtoReflect() protoreflect.Message {
	mi := &file_gorm_pb_proto_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ.ProtoReflect.Descriptor instead.
func (*GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ) Descriptor() ([]byte, []int) {
	return file_gorm_pb_proto_proto_rawDescGZIP(), []int{25}
}

func (x *GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ) GetHeader() *GORM_PB_REQ_HEADER {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ) GetTables() []*GORM_PB_TABLE {
	if x != nil {
		return x.Tables
	}
	return nil
}

type GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode *GORM_PB_Ret_Code `protobuf:"bytes,1,opt,name=RetCode,proto3" json:"RetCode,omitempty"`
	Tables  []*GORM_PB_TABLE  `protobuf:"bytes,2,rep,name=Tables,proto3" json:"Tables,omitempty"`
}

func (x *GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP) Reset() {
	*x = GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorm_pb_proto_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP) ProtoMessage() {}

func (x *GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP) ProtoReflect() protoreflect.Message {
	mi := &file_gorm_pb_proto_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP.ProtoReflect.Descriptor instead.
func (*GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP) Descriptor() ([]byte, []int) {
	return file_gorm_pb_proto_proto_rawDescGZIP(), []int{26}
}

func (x *GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP) GetRetCode() *GORM_PB_Ret_Code {
	if x != nil {
		return x.RetCode
	}
	return nil
}

func (x *GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP) GetTables() []*GORM_PB_TABLE {
	if x != nil {
		return x.Tables
	}
	return nil
}

type GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Column int32  `protobuf:"varint,1,opt,name=Column,proto3" json:"Column,omitempty"`
	Value  []byte `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE) Reset() {
	*x = GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gorm_pb_proto_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE) ProtoMessage() {}

func (x *GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE) ProtoReflect() protoreflect.Message {
	mi := &file_gorm_pb_proto_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE.ProtoReflect.Descriptor instead.
func (*GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE) Descriptor() ([]byte, []int) {
	return file_gorm_pb_proto_proto_rawDescGZIP(), []int{0, 0}
}

func (x *GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE) GetColumn() int32 {
	if x != nil {
		return x.Column
	}
	return 0
}

func (x *GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

var File_gorm_pb_proto_proto protoreflect.FileDescriptor

var file_gorm_pb_proto_proto_rawDesc = []byte{
	0x0a, 0x13, 0x67, 0x6f, 0x72, 0x6d, 0x5f, 0x70, 0x62, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x67, 0x6f, 0x72, 0x6d, 0x1a, 0x18, 0x67, 0x6f, 0x72,
	0x6d, 0x5f, 0x70, 0x62, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x5f, 0x69, 0x6e, 0x63, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa1, 0x01, 0x0a, 0x12, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x50,
	0x42, 0x5f, 0x53, 0x50, 0x4c, 0x49, 0x54, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x12, 0x48, 0x0a, 0x09,
	0x53, 0x70, 0x6c, 0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2a, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x50, 0x42, 0x5f, 0x53,
	0x50, 0x4c, 0x49, 0x54, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x2e, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x43,
	0x4f, 0x4c, 0x55, 0x4d, 0x4e, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x52, 0x09, 0x53, 0x70, 0x6c,
	0x69, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x41, 0x0a, 0x11, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x43,
	0x4f, 0x4c, 0x55, 0x4d, 0x4e, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x12, 0x16, 0x0a, 0x06, 0x43,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x43, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x10, 0x47, 0x4f,
	0x52, 0x4d, 0x5f, 0x50, 0x42, 0x5f, 0x52, 0x65, 0x74, 0x5f, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x44, 0x42, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x44, 0x42, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x44, 0x42,
	0x45, 0x72, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x44,
	0x42, 0x45, 0x72, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x75, 0x63, 0x65,
	0x73, 0x73, 0x4e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x53, 0x75, 0x63,
	0x65, 0x73, 0x73, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x4e,
	0x75, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x4e,
	0x75, 0x6d, 0x22, 0x70, 0x0a, 0x18, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x50, 0x42, 0x5f, 0x52, 0x45,
	0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x12, 0x30,
	0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x50, 0x42, 0x5f, 0x52, 0x45,
	0x51, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x52, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x22, 0x0a, 0x0c, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0x4c, 0x0a, 0x18, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x50, 0x42, 0x5f,
	0x52, 0x45, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x52, 0x53, 0x50,
	0x12, 0x30, 0x0a, 0x07, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x50, 0x42,
	0x5f, 0x52, 0x65, 0x74, 0x5f, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x07, 0x52, 0x65, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x22, 0xe6, 0x01, 0x0a, 0x12, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x50, 0x42, 0x5f, 0x52,
	0x45, 0x51, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x12, 0x18, 0x0a, 0x07, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x56, 0x65, 0x72, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x56, 0x65, 0x72, 0x50, 0x6f, 0x6c, 0x69, 0x63,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x52, 0x65, 0x71, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x46,
	0x69, 0x65, 0x6c, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x40, 0x0a, 0x0e, 0x53, 0x70, 0x6c,
	0x69, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x50, 0x42,
	0x5f, 0x53, 0x50, 0x4c, 0x49, 0x54, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x52, 0x0e, 0x53, 0x70, 0x6c,
	0x69, 0x74, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x45, 0x0a, 0x11, 0x47,
	0x4f, 0x52, 0x4d, 0x5f, 0x50, 0x42, 0x5f, 0x48, 0x45, 0x41, 0x52, 0x54, 0x5f, 0x52, 0x45, 0x51,
	0x12, 0x30, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x50, 0x42, 0x5f,
	0x52, 0x45, 0x51, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x52, 0x06, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x22, 0x45, 0x0a, 0x11, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x50, 0x42, 0x5f, 0x48, 0x45,
	0x41, 0x52, 0x54, 0x5f, 0x52, 0x53, 0x50, 0x12, 0x30, 0x0a, 0x07, 0x52, 0x65, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e,
	0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x50, 0x42, 0x5f, 0x52, 0x65, 0x74, 0x5f, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x07, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x4d, 0x0a, 0x19, 0x47, 0x4f, 0x52,
	0x4d, 0x5f, 0x50, 0x42, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x5f,
	0x49, 0x44, 0x5f, 0x52, 0x45, 0x51, 0x12, 0x30, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x47, 0x4f,
	0x52, 0x4d, 0x5f, 0x50, 0x42, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52,
	0x52, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x22, 0x4d, 0x0a, 0x19, 0x47, 0x4f, 0x52, 0x4d,
	0x5f, 0x50, 0x42, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x49,
	0x44, 0x5f, 0x52, 0x53, 0x50, 0x12, 0x30, 0x0a, 0x07, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x47, 0x4f,
	0x52, 0x4d, 0x5f, 0x50, 0x42, 0x5f, 0x52, 0x65, 0x74, 0x5f, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x07,
	0x52, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x73, 0x0a, 0x12, 0x47, 0x4f, 0x52, 0x4d, 0x5f,
	0x50, 0x42, 0x5f, 0x49, 0x4e, 0x53, 0x45, 0x52, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x12, 0x30, 0x0a,
	0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x50, 0x42, 0x5f, 0x52, 0x45, 0x51,
	0x5f, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x52, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x2b, 0x0a, 0x06, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x50, 0x42, 0x5f, 0x54,
	0x41, 0x42, 0x4c, 0x45, 0x52, 0x06, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x22, 0x97, 0x01, 0x0a,
	0x12, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x50, 0x42, 0x5f, 0x49, 0x4e, 0x53, 0x45, 0x52, 0x54, 0x5f,
	0x52, 0x53, 0x50, 0x12, 0x30, 0x0a, 0x07, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x47, 0x4f, 0x52, 0x4d,
	0x5f, 0x50, 0x42, 0x5f, 0x52, 0x65, 0x74, 0x5f, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x07, 0x52, 0x65,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x47, 0x4f, 0x52,
	0x4d, 0x5f, 0x50, 0x42, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x52, 0x06, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x4c, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x4c, 0x61, 0x73, 0x74, 0x49, 0x6e,
	0x73, 0x65, 0x72, 0x74, 0x49, 0x64, 0x22, 0x73, 0x0a, 0x12, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x50,
	0x42, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x12, 0x30, 0x0a, 0x06,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67,
	0x6f, 0x72, 0x6d, 0x2e, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x50, 0x42, 0x5f, 0x52, 0x45, 0x51, 0x5f,
	0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x52, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x2b,
	0x0a, 0x06, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x50, 0x42, 0x5f, 0x54, 0x41,
	0x42, 0x4c, 0x45, 0x52, 0x06, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x22, 0x95, 0x01, 0x0a, 0x12,
	0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x50, 0x42, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x52,
	0x53, 0x50, 0x12, 0x30, 0x0a, 0x07, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x47, 0x4f, 0x52, 0x4d, 0x5f,
	0x50, 0x42, 0x5f, 0x52, 0x65, 0x74, 0x5f, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x07, 0x52, 0x65, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x47, 0x4f, 0x52, 0x4d,
	0x5f, 0x50, 0x42, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x52, 0x06, 0x54, 0x61, 0x62, 0x6c, 0x65,
	0x73, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4e, 0x75, 0x6d,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x4e, 0x75, 0x6d, 0x22, 0x74, 0x0a, 0x13, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x50, 0x42, 0x5f, 0x52,
	0x45, 0x50, 0x4c, 0x41, 0x43, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x12, 0x30, 0x0a, 0x06, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x6f, 0x72,
	0x6d, 0x2e, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x50, 0x42, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x48, 0x45,
	0x41, 0x44, 0x45, 0x52, 0x52, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x06,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67,
	0x6f, 0x72, 0x6d, 0x2e, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x50, 0x42, 0x5f, 0x54, 0x41, 0x42, 0x4c,
	0x45, 0x52, 0x06, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x22, 0x96, 0x01, 0x0a, 0x13, 0x47, 0x4f,
	0x52, 0x4d, 0x5f, 0x50, 0x42, 0x5f, 0x52, 0x45, 0x50, 0x4c, 0x41, 0x43, 0x45, 0x5f, 0x52, 0x53,
	0x50, 0x12, 0x30, 0x0a, 0x07, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x50,
	0x42, 0x5f, 0x52, 0x65, 0x74, 0x5f, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x07, 0x52, 0x65, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x47, 0x4f, 0x52, 0x4d, 0x5f,
	0x50, 0x42, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x52, 0x06, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4e, 0x75, 0x6d, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4e,
	0x75, 0x6d, 0x22, 0x88, 0x01, 0x0a, 0x0f, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x50, 0x42, 0x5f, 0x47,
	0x45, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x12, 0x30, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x47, 0x4f,
	0x52, 0x4d, 0x5f, 0x50, 0x42, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52,
	0x52, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x05, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x47,
	0x4f, 0x52, 0x4d, 0x5f, 0x50, 0x42, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x52, 0x05, 0x54, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x47, 0x65, 0x74, 0x46, 0x6c, 0x61, 0x67, 0x22, 0xb0, 0x01,
	0x0a, 0x0f, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x50, 0x42, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x52, 0x53,
	0x50, 0x12, 0x30, 0x0a, 0x07, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x50,
	0x42, 0x5f, 0x52, 0x65, 0x74, 0x5f, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x07, 0x52, 0x65, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x50,
	0x42, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x52, 0x05, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x4e, 0x65, 0x77, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x4e, 0x65, 0x77, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x12, 0x22, 0x0a, 0x0c,
	0x4c, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0c, 0x4c, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x49, 0x64,
	0x22, 0x76, 0x0a, 0x15, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x50, 0x42, 0x5f, 0x42, 0x41, 0x54, 0x43,
	0x48, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x12, 0x30, 0x0a, 0x06, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x6f, 0x72, 0x6d,
	0x2e, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x50, 0x42, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x48, 0x45, 0x41,
	0x44, 0x45, 0x52, 0x52, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x06, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x6f,
	0x72, 0x6d, 0x2e, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x50, 0x42, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45,
	0x52, 0x06, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x22, 0x76, 0x0a, 0x15, 0x47, 0x4f, 0x52, 0x4d,
	0x5f, 0x50, 0x42, 0x5f, 0x42, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x52, 0x53,
	0x50, 0x12, 0x30, 0x0a, 0x07, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x50,
	0x42, 0x5f, 0x52, 0x65, 0x74, 0x5f, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x07, 0x52, 0x65, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x47, 0x4f, 0x52, 0x4d, 0x5f,
	0x50, 0x42, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x52, 0x06, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73,
	0x22, 0xbb, 0x01, 0x0a, 0x14, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x50, 0x42, 0x5f, 0x49, 0x4e, 0x43,
	0x52, 0x45, 0x41, 0x53, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x12, 0x30, 0x0a, 0x06, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x6f, 0x72, 0x6d,
	0x2e, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x50, 0x42, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x48, 0x45, 0x41,
	0x44, 0x45, 0x52, 0x52, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x06, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x6f,
	0x72, 0x6d, 0x2e, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x50, 0x42, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45,
	0x52, 0x06, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x50, 0x6c, 0x75, 0x73,
	0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x50,
	0x6c, 0x75, 0x73, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x4d, 0x69,
	0x6e, 0x75, 0x73, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x4d, 0x69, 0x6e, 0x75, 0x73, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x22, 0x97,
	0x01, 0x0a, 0x14, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x50, 0x42, 0x5f, 0x49, 0x4e, 0x43, 0x52, 0x45,
	0x41, 0x53, 0x45, 0x5f, 0x52, 0x53, 0x50, 0x12, 0x30, 0x0a, 0x07, 0x52, 0x65, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e,
	0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x50, 0x42, 0x5f, 0x52, 0x65, 0x74, 0x5f, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x07, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x6f, 0x72, 0x6d,
	0x2e, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x50, 0x42, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x52, 0x06,
	0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x4e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x41, 0x66, 0x66,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x4e, 0x75, 0x6d, 0x22, 0x71, 0x0a, 0x12, 0x47, 0x4f, 0x52, 0x4d,
	0x5f, 0x50, 0x42, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x12, 0x30,
	0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x50, 0x42, 0x5f, 0x52, 0x45,
	0x51, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x52, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x12, 0x29, 0x0a, 0x05, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x50, 0x42, 0x5f, 0x54,
	0x41, 0x42, 0x4c, 0x45, 0x52, 0x05, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x68, 0x0a, 0x12, 0x47,
	0x4f, 0x52, 0x4d, 0x5f, 0x50, 0x42, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x52, 0x53,
	0x50, 0x12, 0x30, 0x0a, 0x07, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x50,
	0x42, 0x5f, 0x52, 0x65, 0x74, 0x5f, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x07, 0x52, 0x65, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x4e,
	0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x4e, 0x75, 0x6d, 0x22, 0x7b, 0x0a, 0x1a, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x50, 0x42,
	0x5f, 0x47, 0x45, 0x54, 0x5f, 0x42, 0x59, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x4b, 0x45, 0x59, 0x5f,
	0x52, 0x45, 0x51, 0x12, 0x30, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x47, 0x4f, 0x52, 0x4d, 0x5f,
	0x50, 0x42, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x52, 0x06, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x06, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x47, 0x4f, 0x52,
	0x4d, 0x5f, 0x50, 0x42, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x52, 0x06, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x73, 0x22, 0x7b, 0x0a, 0x1a, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x50, 0x42, 0x5f, 0x47, 0x45,
	0x54, 0x5f, 0x42, 0x59, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x4b, 0x45, 0x59, 0x5f, 0x52, 0x53, 0x50,
	0x12, 0x30, 0x0a, 0x07, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x50, 0x42,
	0x5f, 0x52, 0x65, 0x74, 0x5f, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x07, 0x52, 0x65, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x50,
	0x42, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x52, 0x06, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x22,
	0x83, 0x01, 0x0a, 0x22, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x50, 0x42, 0x5f, 0x47, 0x45, 0x54, 0x5f,
	0x42, 0x59, 0x5f, 0x4e, 0x4f, 0x4e, 0x5f, 0x50, 0x52, 0x49, 0x4d, 0x41, 0x52, 0x59, 0x5f, 0x4b,
	0x45, 0x59, 0x5f, 0x52, 0x45, 0x51, 0x12, 0x30, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x47, 0x4f,
	0x52, 0x4d, 0x5f, 0x50, 0x42, 0x5f, 0x52, 0x45, 0x51, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52,
	0x52, 0x06, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x06, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e,
	0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x50, 0x42, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x52, 0x06, 0x54,
	0x61, 0x62, 0x6c, 0x65, 0x73, 0x22, 0x83, 0x01, 0x0a, 0x22, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x50,
	0x42, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x42, 0x59, 0x5f, 0x4e, 0x4f, 0x4e, 0x5f, 0x50, 0x52, 0x49,
	0x4d, 0x41, 0x52, 0x59, 0x5f, 0x4b, 0x45, 0x59, 0x5f, 0x52, 0x53, 0x50, 0x12, 0x30, 0x0a, 0x07,
	0x52, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x50, 0x42, 0x5f, 0x52, 0x65, 0x74,
	0x5f, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x07, 0x52, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2b,
	0x0a, 0x06, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x67, 0x6f, 0x72, 0x6d, 0x2e, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x50, 0x42, 0x5f, 0x54, 0x41,
	0x42, 0x4c, 0x45, 0x52, 0x06, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x2a, 0xc1, 0x06, 0x0a, 0x09,
	0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10,
	0x00, 0x12, 0x12, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x13, 0x0a, 0x06, 0x45, 0x41, 0x47, 0x41, 0x49, 0x4e, 0x10,
	0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x1b, 0x0a, 0x0e, 0x49, 0x4e,
	0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x10, 0xfd, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x18, 0x0a, 0x0b, 0x50, 0x41, 0x52, 0x54, 0x5f,
	0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0x01, 0x12, 0x1a, 0x0a, 0x0d, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x54, 0x41, 0x42,
	0x4c, 0x45, 0x10, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x12, 0x0a,
	0x05, 0x52, 0x45, 0x53, 0x45, 0x54, 0x10, 0xfa, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0x01, 0x12, 0x1c, 0x0a, 0x0f, 0x54, 0x4f, 0x4f, 0x5f, 0x4d, 0x55, 0x43, 0x48, 0x5f, 0x52, 0x45,
	0x43, 0x4f, 0x52, 0x44, 0x10, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12,
	0x18, 0x0a, 0x0b, 0x49, 0x4e, 0x49, 0x54, 0x5f, 0x52, 0x45, 0x43, 0x4f, 0x52, 0x44, 0x10, 0xf8,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x1a, 0x0a, 0x0d, 0x49, 0x4e, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x5f, 0x46, 0x49, 0x45, 0x4c, 0x44, 0x10, 0xf7, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x1b, 0x0a, 0x0e, 0x50, 0x41, 0x43, 0x4b, 0x5f, 0x52, 0x45,
	0x51, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0xf6, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0x01, 0x12, 0x1b, 0x0a, 0x0e, 0x52, 0x45, 0x51, 0x5f, 0x4e, 0x4f, 0x5f, 0x52, 0x45, 0x43,
	0x4f, 0x52, 0x44, 0x53, 0x10, 0xf5, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12,
	0x19, 0x0a, 0x0c, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x5f, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x53, 0x10,
	0xf4, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x1e, 0x0a, 0x11, 0x52, 0x53,
	0x50, 0x5f, 0x55, 0x4e, 0x50, 0x41, 0x43, 0x4b, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10,
	0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x18, 0x0a, 0x0b, 0x43, 0x4f,
	0x4e, 0x4e, 0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x44, 0x10, 0xf2, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0x01, 0x12, 0x18, 0x0a, 0x0b, 0x43, 0x4f, 0x4e, 0x4e, 0x5f, 0x46, 0x41, 0x49,
	0x4c, 0x45, 0x44, 0x10, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x15,
	0x0a, 0x08, 0x44, 0x42, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0xf0, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x12, 0x0a, 0x05, 0x4e, 0x4f, 0x5f, 0x44, 0x42, 0x10, 0xef,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x1a, 0x0a, 0x0d, 0x52, 0x45, 0x51,
	0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0xee, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x1c, 0x0a, 0x0f, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x55, 0x50,
	0x50, 0x4f, 0x52, 0x54, 0x5f, 0x43, 0x4d, 0x44, 0x10, 0xed, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0xff, 0x01, 0x12, 0x17, 0x0a, 0x0a, 0x55, 0x4e, 0x50, 0x41, 0x43, 0x4b, 0x5f, 0x52, 0x45,
	0x51, 0x10, 0xec, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x1b, 0x0a, 0x0e,
	0x50, 0x41, 0x43, 0x4b, 0x5f, 0x52, 0x53, 0x50, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0xeb,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x1e, 0x0a, 0x11, 0x52, 0x45, 0x51,
	0x5f, 0x4d, 0x53, 0x47, 0x5f, 0x4e, 0x4f, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x45, 0x52, 0x10, 0xea,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x1b, 0x0a, 0x0e, 0x52, 0x45, 0x51,
	0x5f, 0x4e, 0x45, 0x45, 0x44, 0x5f, 0x53, 0x50, 0x4c, 0x49, 0x54, 0x10, 0xe9, 0xff, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x1a, 0x0a, 0x0d, 0x52, 0x45, 0x51, 0x5f, 0x54, 0x4f,
	0x4f, 0x5f, 0x4c, 0x41, 0x52, 0x47, 0x45, 0x10, 0xe8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0x01, 0x12, 0x1e, 0x0a, 0x11, 0x44, 0x42, 0x5f, 0x32, 0x5f, 0x53, 0x54, 0x52, 0x55, 0x43,
	0x54, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
	0xff, 0x01, 0x12, 0x1b, 0x0a, 0x0e, 0x4e, 0x4f, 0x5f, 0x4d, 0x4f, 0x52, 0x45, 0x5f, 0x52, 0x45,
	0x43, 0x4f, 0x52, 0x44, 0x10, 0xe6, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12,
	0x1c, 0x0a, 0x0f, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x53,
	0x45, 0x54, 0x10, 0xe5, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x18, 0x0a,
	0x0b, 0x43, 0x41, 0x43, 0x48, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0xe4, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x15, 0x0a, 0x08, 0x4e, 0x4f, 0x5f, 0x56, 0x41,
	0x4c, 0x55, 0x45, 0x10, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x1f,
	0x0a, 0x12, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x10, 0xe2, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x2a,
	0xa8, 0x02, 0x0a, 0x08, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x43, 0x4d, 0x44, 0x12, 0x14, 0x0a, 0x10,
	0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44,
	0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x43, 0x4d, 0x44, 0x5f, 0x48,
	0x45, 0x41, 0x52, 0x54, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x43,
	0x4d, 0x44, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x44,
	0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x43, 0x4d, 0x44, 0x5f, 0x49,
	0x4e, 0x53, 0x45, 0x52, 0x54, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x47, 0x4f, 0x52, 0x4d, 0x5f,
	0x43, 0x4d, 0x44, 0x5f, 0x52, 0x45, 0x50, 0x4c, 0x41, 0x43, 0x45, 0x10, 0x04, 0x12, 0x15, 0x0a,
	0x11, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x43, 0x4d, 0x44, 0x5f, 0x49, 0x4e, 0x43, 0x52, 0x45, 0x41,
	0x53, 0x45, 0x10, 0x05, 0x12, 0x10, 0x0a, 0x0c, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x43, 0x4d, 0x44,
	0x5f, 0x47, 0x45, 0x54, 0x10, 0x06, 0x12, 0x13, 0x0a, 0x0f, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x43,
	0x4d, 0x44, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x07, 0x12, 0x16, 0x0a, 0x12, 0x47,
	0x4f, 0x52, 0x4d, 0x5f, 0x43, 0x4d, 0x44, 0x5f, 0x42, 0x41, 0x54, 0x43, 0x48, 0x5f, 0x47, 0x45,
	0x54, 0x10, 0x08, 0x12, 0x1b, 0x0a, 0x17, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x43, 0x4d, 0x44, 0x5f,
	0x47, 0x45, 0x54, 0x5f, 0x42, 0x59, 0x5f, 0x50, 0x41, 0x52, 0x54, 0x4b, 0x45, 0x59, 0x10, 0x09,
	0x12, 0x13, 0x0a, 0x0f, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x43, 0x4d, 0x44, 0x5f, 0x55, 0x50, 0x44,
	0x41, 0x54, 0x45, 0x10, 0x0a, 0x12, 0x23, 0x0a, 0x1f, 0x47, 0x4f, 0x52, 0x4d, 0x5f, 0x43, 0x4d,
	0x44, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x42, 0x59, 0x5f, 0x4e, 0x4f, 0x4e, 0x5f, 0x50, 0x52, 0x49,
	0x4d, 0x41, 0x52, 0x59, 0x5f, 0x4b, 0x45, 0x59, 0x10, 0x0b, 0x42, 0x0b, 0x5a, 0x09, 0x67, 0x6f,
	0x72, 0x6d, 0x2f, 0x67, 0x6f, 0x72, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gorm_pb_proto_proto_rawDescOnce sync.Once
	file_gorm_pb_proto_proto_rawDescData = file_gorm_pb_proto_proto_rawDesc
)

func file_gorm_pb_proto_proto_rawDescGZIP() []byte {
	file_gorm_pb_proto_proto_rawDescOnce.Do(func() {
		file_gorm_pb_proto_proto_rawDescData = protoimpl.X.CompressGZIP(file_gorm_pb_proto_proto_rawDescData)
	})
	return file_gorm_pb_proto_proto_rawDescData
}

var file_gorm_pb_proto_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_gorm_pb_proto_proto_msgTypes = make([]protoimpl.MessageInfo, 28)
var file_gorm_pb_proto_proto_goTypes = []interface{}{
	(GORM_CODE)(0),                               // 0: gorm.GORM_CODE
	(GORM_CMD)(0),                                // 1: gorm.GORM_CMD
	(*GORM_PB_SPLIT_INFO)(nil),                   // 2: gorm.GORM_PB_SPLIT_INFO
	(*GORM_PB_Ret_Code)(nil),                     // 3: gorm.GORM_PB_Ret_Code
	(*GORM_PB_RELOAD_TABLE_REQ)(nil),             // 4: gorm.GORM_PB_RELOAD_TABLE_REQ
	(*GORM_PB_RELOAD_TABLE_RSP)(nil),             // 5: gorm.GORM_PB_RELOAD_TABLE_RSP
	(*GORM_PB_REQ_HEADER)(nil),                   // 6: gorm.GORM_PB_REQ_HEADER
	(*GORM_PB_HEART_REQ)(nil),                    // 7: gorm.GORM_PB_HEART_REQ
	(*GORM_PB_HEART_RSP)(nil),                    // 8: gorm.GORM_PB_HEART_RSP
	(*GORM_PB_GET_CLIENT_ID_REQ)(nil),            // 9: gorm.GORM_PB_GET_CLIENT_ID_REQ
	(*GORM_PB_GET_CLIENT_ID_RSP)(nil),            // 10: gorm.GORM_PB_GET_CLIENT_ID_RSP
	(*GORM_PB_INSERT_REQ)(nil),                   // 11: gorm.GORM_PB_INSERT_REQ
	(*GORM_PB_INSERT_RSP)(nil),                   // 12: gorm.GORM_PB_INSERT_RSP
	(*GORM_PB_UPDATE_REQ)(nil),                   // 13: gorm.GORM_PB_UPDATE_REQ
	(*GORM_PB_UPDATE_RSP)(nil),                   // 14: gorm.GORM_PB_UPDATE_RSP
	(*GORM_PB_REPLACE_REQ)(nil),                  // 15: gorm.GORM_PB_REPLACE_REQ
	(*GORM_PB_REPLACE_RSP)(nil),                  // 16: gorm.GORM_PB_REPLACE_RSP
	(*GORM_PB_GET_REQ)(nil),                      // 17: gorm.GORM_PB_GET_REQ
	(*GORM_PB_GET_RSP)(nil),                      // 18: gorm.GORM_PB_GET_RSP
	(*GORM_PB_BATCH_GET_REQ)(nil),                // 19: gorm.GORM_PB_BATCH_GET_REQ
	(*GORM_PB_BATCH_GET_RSP)(nil),                // 20: gorm.GORM_PB_BATCH_GET_RSP
	(*GORM_PB_INCREASE_REQ)(nil),                 // 21: gorm.GORM_PB_INCREASE_REQ
	(*GORM_PB_INCREASE_RSP)(nil),                 // 22: gorm.GORM_PB_INCREASE_RSP
	(*GORM_PB_DELETE_REQ)(nil),                   // 23: gorm.GORM_PB_DELETE_REQ
	(*GORM_PB_DELETE_RSP)(nil),                   // 24: gorm.GORM_PB_DELETE_RSP
	(*GORM_PB_GET_BY_PARTKEY_REQ)(nil),           // 25: gorm.GORM_PB_GET_BY_PARTKEY_REQ
	(*GORM_PB_GET_BY_PARTKEY_RSP)(nil),           // 26: gorm.GORM_PB_GET_BY_PARTKEY_RSP
	(*GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ)(nil),   // 27: gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ
	(*GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP)(nil),   // 28: gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP
	(*GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE)(nil), // 29: gorm.GORM_PB_SPLIT_INFO.GORM_COLUMN_VALUE
	(*GORM_PB_TABLE)(nil),                        // 30: gorm.GORM_PB_TABLE
}
var file_gorm_pb_proto_proto_depIdxs = []int32{
	29, // 0: gorm.GORM_PB_SPLIT_INFO.SplitInfo:type_name -> gorm.GORM_PB_SPLIT_INFO.GORM_COLUMN_VALUE
	6,  // 1: gorm.GORM_PB_RELOAD_TABLE_REQ.Header:type_name -> gorm.GORM_PB_REQ_HEADER
	3,  // 2: gorm.GORM_PB_RELOAD_TABLE_RSP.RetCode:type_name -> gorm.GORM_PB_Ret_Code
	2,  // 3: gorm.GORM_PB_REQ_HEADER.SplitTableInfo:type_name -> gorm.GORM_PB_SPLIT_INFO
	6,  // 4: gorm.GORM_PB_HEART_REQ.Header:type_name -> gorm.GORM_PB_REQ_HEADER
	3,  // 5: gorm.GORM_PB_HEART_RSP.RetCode:type_name -> gorm.GORM_PB_Ret_Code
	6,  // 6: gorm.GORM_PB_GET_CLIENT_ID_REQ.Header:type_name -> gorm.GORM_PB_REQ_HEADER
	3,  // 7: gorm.GORM_PB_GET_CLIENT_ID_RSP.RetCode:type_name -> gorm.GORM_PB_Ret_Code
	6,  // 8: gorm.GORM_PB_INSERT_REQ.Header:type_name -> gorm.GORM_PB_REQ_HEADER
	30, // 9: gorm.GORM_PB_INSERT_REQ.Tables:type_name -> gorm.GORM_PB_TABLE
	3,  // 10: gorm.GORM_PB_INSERT_RSP.RetCode:type_name -> gorm.GORM_PB_Ret_Code
	30, // 11: gorm.GORM_PB_INSERT_RSP.Tables:type_name -> gorm.GORM_PB_TABLE
	6,  // 12: gorm.GORM_PB_UPDATE_REQ.Header:type_name -> gorm.GORM_PB_REQ_HEADER
	30, // 13: gorm.GORM_PB_UPDATE_REQ.Tables:type_name -> gorm.GORM_PB_TABLE
	3,  // 14: gorm.GORM_PB_UPDATE_RSP.RetCode:type_name -> gorm.GORM_PB_Ret_Code
	30, // 15: gorm.GORM_PB_UPDATE_RSP.Tables:type_name -> gorm.GORM_PB_TABLE
	6,  // 16: gorm.GORM_PB_REPLACE_REQ.Header:type_name -> gorm.GORM_PB_REQ_HEADER
	30, // 17: gorm.GORM_PB_REPLACE_REQ.Tables:type_name -> gorm.GORM_PB_TABLE
	3,  // 18: gorm.GORM_PB_REPLACE_RSP.RetCode:type_name -> gorm.GORM_PB_Ret_Code
	30, // 19: gorm.GORM_PB_REPLACE_RSP.Tables:type_name -> gorm.GORM_PB_TABLE
	6,  // 20: gorm.GORM_PB_GET_REQ.Header:type_name -> gorm.GORM_PB_REQ_HEADER
	30, // 21: gorm.GORM_PB_GET_REQ.Table:type_name -> gorm.GORM_PB_TABLE
	3,  // 22: gorm.GORM_PB_GET_RSP.RetCode:type_name -> gorm.GORM_PB_Ret_Code
	30, // 23: gorm.GORM_PB_GET_RSP.Table:type_name -> gorm.GORM_PB_TABLE
	6,  // 24: gorm.GORM_PB_BATCH_GET_REQ.Header:type_name -> gorm.GORM_PB_REQ_HEADER
	30, // 25: gorm.GORM_PB_BATCH_GET_REQ.Tables:type_name -> gorm.GORM_PB_TABLE
	3,  // 26: gorm.GORM_PB_BATCH_GET_RSP.RetCode:type_name -> gorm.GORM_PB_Ret_Code
	30, // 27: gorm.GORM_PB_BATCH_GET_RSP.Tables:type_name -> gorm.GORM_PB_TABLE
	6,  // 28: gorm.GORM_PB_INCREASE_REQ.Header:type_name -> gorm.GORM_PB_REQ_HEADER
	30, // 29: gorm.GORM_PB_INCREASE_REQ.Tables:type_name -> gorm.GORM_PB_TABLE
	3,  // 30: gorm.GORM_PB_INCREASE_RSP.RetCode:type_name -> gorm.GORM_PB_Ret_Code
	30, // 31: gorm.GORM_PB_INCREASE_RSP.Tables:type_name -> gorm.GORM_PB_TABLE
	6,  // 32: gorm.GORM_PB_DELETE_REQ.Header:type_name -> gorm.GORM_PB_REQ_HEADER
	30, // 33: gorm.GORM_PB_DELETE_REQ.Table:type_name -> gorm.GORM_PB_TABLE
	3,  // 34: gorm.GORM_PB_DELETE_RSP.RetCode:type_name -> gorm.GORM_PB_Ret_Code
	6,  // 35: gorm.GORM_PB_GET_BY_PARTKEY_REQ.Header:type_name -> gorm.GORM_PB_REQ_HEADER
	30, // 36: gorm.GORM_PB_GET_BY_PARTKEY_REQ.Tables:type_name -> gorm.GORM_PB_TABLE
	3,  // 37: gorm.GORM_PB_GET_BY_PARTKEY_RSP.RetCode:type_name -> gorm.GORM_PB_Ret_Code
	30, // 38: gorm.GORM_PB_GET_BY_PARTKEY_RSP.Tables:type_name -> gorm.GORM_PB_TABLE
	6,  // 39: gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ.Header:type_name -> gorm.GORM_PB_REQ_HEADER
	30, // 40: gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ.Tables:type_name -> gorm.GORM_PB_TABLE
	3,  // 41: gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP.RetCode:type_name -> gorm.GORM_PB_Ret_Code
	30, // 42: gorm.GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP.Tables:type_name -> gorm.GORM_PB_TABLE
	43, // [43:43] is the sub-list for method output_type
	43, // [43:43] is the sub-list for method input_type
	43, // [43:43] is the sub-list for extension type_name
	43, // [43:43] is the sub-list for extension extendee
	0,  // [0:43] is the sub-list for field type_name
}

func init() { file_gorm_pb_proto_proto_init() }
func file_gorm_pb_proto_proto_init() {
	if File_gorm_pb_proto_proto != nil {
		return
	}
	file_gorm_pb_tables_inc_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_gorm_pb_proto_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GORM_PB_SPLIT_INFO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gorm_pb_proto_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GORM_PB_Ret_Code); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gorm_pb_proto_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GORM_PB_RELOAD_TABLE_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gorm_pb_proto_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GORM_PB_RELOAD_TABLE_RSP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gorm_pb_proto_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GORM_PB_REQ_HEADER); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gorm_pb_proto_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GORM_PB_HEART_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gorm_pb_proto_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GORM_PB_HEART_RSP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gorm_pb_proto_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GORM_PB_GET_CLIENT_ID_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gorm_pb_proto_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GORM_PB_GET_CLIENT_ID_RSP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gorm_pb_proto_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GORM_PB_INSERT_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gorm_pb_proto_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GORM_PB_INSERT_RSP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gorm_pb_proto_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GORM_PB_UPDATE_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gorm_pb_proto_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GORM_PB_UPDATE_RSP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gorm_pb_proto_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GORM_PB_REPLACE_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gorm_pb_proto_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GORM_PB_REPLACE_RSP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gorm_pb_proto_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GORM_PB_GET_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gorm_pb_proto_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GORM_PB_GET_RSP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gorm_pb_proto_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GORM_PB_BATCH_GET_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gorm_pb_proto_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GORM_PB_BATCH_GET_RSP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gorm_pb_proto_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GORM_PB_INCREASE_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gorm_pb_proto_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GORM_PB_INCREASE_RSP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gorm_pb_proto_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GORM_PB_DELETE_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gorm_pb_proto_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GORM_PB_DELETE_RSP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gorm_pb_proto_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GORM_PB_GET_BY_PARTKEY_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gorm_pb_proto_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GORM_PB_GET_BY_PARTKEY_RSP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gorm_pb_proto_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GORM_PB_GET_BY_NON_PRIMARY_KEY_REQ); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gorm_pb_proto_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GORM_PB_GET_BY_NON_PRIMARY_KEY_RSP); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gorm_pb_proto_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GORM_PB_SPLIT_INFO_GORM_COLUMN_VALUE); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gorm_pb_proto_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   28,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gorm_pb_proto_proto_goTypes,
		DependencyIndexes: file_gorm_pb_proto_proto_depIdxs,
		EnumInfos:         file_gorm_pb_proto_proto_enumTypes,
		MessageInfos:      file_gorm_pb_proto_proto_msgTypes,
	}.Build()
	File_gorm_pb_proto_proto = out.File
	file_gorm_pb_proto_proto_rawDesc = nil
	file_gorm_pb_proto_proto_goTypes = nil
	file_gorm_pb_proto_proto_depIdxs = nil
}
